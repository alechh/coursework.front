"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
/**
                                                          * Компонент рисует пиксельную линейку на заднем фоне.
                                                          * Помогает контролировать размеры элементов при скриншотном тестировании.
                                                          *
                                                          * @see FxInput/__stories__/FxInput.stories.tsx
                                                          */
var BGRuler = /** @class */function (_super) {
  tslib_1.__extends(BGRuler, _super);
  function BGRuler() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.iframe = null;
    _this.componentDidMount = function () {
      if (_this.iframe && _this.iframe.contentWindow) {
        _this.iframe.contentWindow.addEventListener('resize', _this.update, true);
      }
      _this.update();
    };
    _this.componentWillUnmount = function () {
      if (_this.iframe && _this.iframe.contentWindow) {
        _this.iframe.contentWindow.removeEventListener('resize', _this.update, true);
      }
    };
    _this.update = function () {
      _this.forceUpdate();
    };
    _this.iframeRef = function (ref) {
      _this.iframe = ref;
    };
    return _this;
  }
  BGRuler.prototype.render = function () {
    var _a = this.props,width = _a.width,height = _a.height,color = _a.color,top = _a.top,bottom = _a.bottom,left = _a.left,right = _a.right;
    var wrapper = {
      position: 'absolute',
      width: width,
      height: height,
      top: top,
      bottom: bottom,
      left: left,
      right: right,
      overflow: 'hidden' };

    var iframe = {
      position: 'absolute',
      width: '100%',
      height: '100%',
      border: 0,
      visibility: 'hidden' };

    var marks = {
      position: 'absolute',
      top: 0,
      left: 0,
      width: '100%',
      backgroundSize: '100px 20px',
      backgroundRepeat: 'repeat-x' };

    var highMarks = tslib_1.__assign({}, marks, { height: '100%', backgroundImage: "linear-gradient(90deg, " + color + " 0, " + color + " 1px, transparent 1px)" });
    var middleMarks = tslib_1.__assign({}, marks, { height: '75%', backgroundImage: "linear-gradient(90deg, transparent 0, transparent 49px, " + color + " 49px, " + color + " 50px, transparent 50px)" });
    var shortMarks = tslib_1.__assign({}, marks, { height: '40%', backgroundImage: "\n        linear-gradient(90deg, transparent 0, transparent 9px, " + color + " 9px, " + color + " 10px, transparent 10px),\n        linear-gradient(90deg, transparent 0, transparent 19px, " + color + " 19px, " + color + " 20px, transparent 20px),\n        linear-gradient(90deg, transparent 0, transparent 29px, " + color + " 29px, " + color + " 30px, transparent 30px),\n        linear-gradient(90deg, transparent 0, transparent 39px, " + color + " 39px, " + color + " 40px, transparent 40px),\n        linear-gradient(90deg, transparent 0, transparent 59px, " + color + " 59px, " + color + " 60px, transparent 60px),\n        linear-gradient(90deg, transparent 0, transparent 69px, " + color + " 69px, " + color + " 70px, transparent 70px),\n        linear-gradient(90deg, transparent 0, transparent 79px, " + color + " 79px, " + color + " 80px, transparent 80px),\n        linear-gradient(90deg, transparent 0, transparent 89px, " + color + " 89px, " + color + " 90px, transparent 90px)\n      " });
    var rulerWidth = this.iframe ? this.iframe.getBoundingClientRect().width : 0;
    var labels = Array(Math.ceil(rulerWidth / 100) + 1).
    fill(null).
    map(function (value, index) {
      var label = {
        position: 'absolute',
        fontFamily: 'Arial',
        fontSize: 10,
        lineHeight: 1,
        color: color,
        bottom: -1,
        left: index * 100 + 5 };

      return react_1["default"].createElement("span", { key: index, style: label }, index * 100);
    });
    return react_1["default"].createElement("div", { style: wrapper },
    react_1["default"].createElement("div", { style: highMarks }),
    react_1["default"].createElement("div", { style: middleMarks }),
    react_1["default"].createElement("div", { style: shortMarks }),
    labels,
    react_1["default"].createElement("iframe", { style: iframe, ref: this.iframeRef }));
  };
  BGRuler.defaultProps = {
    height: 20,
    top: 0,
    left: 0,
    right: 0,
    color: '#333' };

  return BGRuler;
}(react_1["default"].Component);
exports.BGRuler = BGRuler;