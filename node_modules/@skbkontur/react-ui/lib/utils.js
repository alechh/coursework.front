"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
// NOTE Some checks are used from https://github.com/arasatasaygin/is.js
var platform = (navigator && navigator.platform || '').toLowerCase();
var userAgent = (navigator && navigator.userAgent || '').toLowerCase();
var vendor = (navigator && navigator.vendor || '').toLowerCase();
exports.isMac = /mac/.test(platform);
exports.isWindows = /win/.test(platform);
exports.isSafari = /version\/(\d+).+?safari/.test(userAgent);
exports.isFirefox = /(?:firefox|fxios)\/(\d+)/.test(userAgent);
exports.isOpera = /(?:^opera.+?version|opr)\/(\d+)/.test(userAgent);
exports.isChrome = /google inc/.test(vendor) && /(?:chrome|crios)\/(\d+)/.test(userAgent) && !exports.isOpera;
exports.isEdge = /edge\//.test(userAgent);
exports.isIE11 = /trident\//.test(userAgent);
exports.isIENot11 = !exports.isIE11 && /msie /.test(userAgent);
exports.delay = function (ms) {return new Promise(function (resolve) {return setTimeout(resolve, ms);});};
exports.emptyHandler = function () {return undefined;};
var CancelationError = /** @class */function (_super) {
  tslib_1.__extends(CancelationError, _super);
  function CancelationError() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.code = 'CancelationError';
    return _this;
  }
  return CancelationError;
}(Error);
exports.CancelationError = CancelationError;
function taskWithDelay(task, ms) {
  var cancelationToken = function cancelationToken() {return null;};
  new Promise(function (resolve, reject) {
    cancelationToken = reject;
    setTimeout(resolve, ms);
  }).
  then(task)["catch"](
  function () {return null;});
  return cancelationToken;
}
exports.taskWithDelay = taskWithDelay;
// tslint:disable-next-line: ban-types
function isFunction(x) {
  return typeof x === 'function';
}
exports.isFunction = isFunction;
function isFunctionalComponent(Component) {
  return typeof Component === 'function' && !(Component.prototype && Component.prototype.isReactComponent);
}
exports.isFunctionalComponent = isFunctionalComponent;
function withContext(ContextConsumer) {
  return function (BaseComponent) {return function (props) {return React.createElement(ContextConsumer, null, function (context) {return React.createElement(BaseComponent, tslib_1.__assign({}, props, { context: context }));});};};
}
exports.withContext = withContext;
function escapeRegExpSpecChars(s) {
  return s.replace(/[\\^$*+?.()|[\]{}]/g, '\\$&');
}
exports.escapeRegExpSpecChars = escapeRegExpSpecChars;