"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var constants_1 = require("./constants");
var types_1 = require("./types");
var InternalDateGetter = /** @class */function () {
  function InternalDateGetter() {
  }
  InternalDateGetter.getMaxDaysInMonth = function (month, year) {
    if (month === 2) {
      var isLeapYear = year !== undefined && (year % 4 === 0 && year % 100 !== 0 || year % 400 === 0) || false;
      return isLeapYear ? 29 : 28;
    }
    if (month <= 7) {
      month++;
    }
    return month % 2 === 0 ? 31 : 30;
  };
  InternalDateGetter.getValueDateComponent = function (type, components) {
    if (type === types_1.InternalDateComponentType.Year) {
      return components.year;
    } else
    if (type === types_1.InternalDateComponentType.Month) {
      return components.month;
    }
    return components.date;
  };
  InternalDateGetter.getDefaultMin = function (type) {
    if (type === types_1.InternalDateComponentType.Year) {
      return constants_1.MIN_YEAR;
    } else
    if (type === types_1.InternalDateComponentType.Month) {
      return constants_1.MIN_MONTH;
    } else
    if (type === types_1.InternalDateComponentType.Date) {
      return constants_1.MIN_DATE;
    }
    return constants_1.MIN_DATE;
  };
  InternalDateGetter.getDefaultMax = function (type, components) {
    if (type === types_1.InternalDateComponentType.Year) {
      return constants_1.MAX_YEAR;
    } else
    if (type === types_1.InternalDateComponentType.Month) {
      return constants_1.MAX_MONTH;
    } else
    if (type === types_1.InternalDateComponentType.Date) {
      if (components === undefined) {
        return constants_1.MAX_DATE;
      }
      var year = components.year,month = components.month;
      return year && month ? InternalDateGetter.getMaxDaysInMonth(month, year) : constants_1.MAX_DATE;
    }
    return constants_1.MAX_DATE;
  };
  InternalDateGetter.getTodayComponents = function () {
    var date = new Date();
    return {
      date: date.getDate(),
      month: date.getMonth() + 1,
      year: date.getFullYear() };

  };
  InternalDateGetter.max = function (datesCustom) {
    return datesCustom.sort(function (a, b) {return b.toNumber() - a.toNumber();})[0];
  };
  InternalDateGetter.min = function (datesCustom) {
    return datesCustom.sort(function (a, b) {return a.toNumber() - b.toNumber();})[0];
  };
  return InternalDateGetter;
}();
exports["default"] = InternalDateGetter;