"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var warning_1 = tslib_1.__importDefault(require("warning"));
var specificityLevel = 0;
var canModifySpecificityLevel = true;
var Upgrade = {
  enableFlatDesign: function enableFlatDesign() {
    warning_1["default"](false, 'Метод Upgrades.enableFlatDesign устарел. Используйте ThemeProvider или ThemeFactory.overrideDefaultTheme()');
  },
  isFlatDesignEnabled: function isFlatDesignEnabled() {
    return false;
  },
  enableSizeMedium16px: function enableSizeMedium16px() {
    warning_1["default"](false, 'Метод Upgrades.enableSizeMedium16px() устарел. Переопределите fontSizeMedium в теме через ThemeProvider или ThemeFactory.overrideDefaultTheme()');
  },
  isSizeMedium16pxEnabled: function isSizeMedium16pxEnabled() {
    warning_1["default"](false, 'Метод Upgrades.isSizeMedium16pxEnabled() устарел. Переопределите fontSizeMedium в теме через ThemeProvider или ThemeFactory.overrideDefaultTheme()');
    return false;
  },
  setAdaptiveStyles: function setAdaptiveStyles(enabled) {
    warning_1["default"](false, 'Метод Upgrades.setAdaptiveStyles устарел. `adaptiveStyles` включен всегда');
  },
  isAdaptiveStyles: function isAdaptiveStyles() {
    return true;
  },
  getSpecificityLevel: function getSpecificityLevel() {
    canModifySpecificityLevel = false;
    return specificityLevel;
  },
  setSpecificityLevel: function setSpecificityLevel(level) {
    if (canModifySpecificityLevel) {
      specificityLevel = level;
    } else
    {
      warning_1["default"](false, "specificityLevel=" + specificityLevel + " \u0443\u0436\u0435 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D");
    }
  } };

exports["default"] = Upgrade;