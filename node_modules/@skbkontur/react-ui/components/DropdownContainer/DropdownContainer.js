"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var react_dom_1 = require("react-dom");
var LayoutEvents_1 = tslib_1.__importDefault(require("../../lib/LayoutEvents"));
var getComputedStyle_1 = tslib_1.__importDefault(require("../../lib/dom/getComputedStyle"));
var RenderContainer_1 = tslib_1.__importDefault(require("../RenderContainer/RenderContainer"));
var ZIndex_1 = tslib_1.__importDefault(require("../ZIndex"));
var createPropsGetter_1 = require("../internal/createPropsGetter");
var DropdownContainer = /** @class */function (_super) {
  tslib_1.__extends(DropdownContainer, _super);
  function DropdownContainer() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.state = {
      position: null,
      minWidth: 0,
      isDocumentElementRoot: true };

    _this.getProps = createPropsGetter_1.createPropsGetter(DropdownContainer.defaultProps);
    _this.dom = null;
    _this.ref = function (e) {
      _this.dom = e && react_dom_1.findDOMNode(e);
    };
    _this.isElement = function (node) {
      return node instanceof Element;
    };
    _this.position = function () {
      var target = _this.props.getParent();
      var dom = _this.dom;
      if (_this.isElement(target) && dom) {
        var targetRect = target.getBoundingClientRect();
        var body = document.body,docEl = document.documentElement;
        if (!docEl) {
          throw Error('There is no "documentElement" in "document"');
        }
        var scrollX_1 = window.pageXOffset || docEl.scrollLeft || 0;
        var scrollY_1 = window.pageYOffset || docEl.scrollTop || 0;
        var left = null;
        var right = null;
        if (_this.props.align === 'right') {
          var docWidth = docEl.offsetWidth || 0;
          right = docWidth - (targetRect.right + scrollX_1) + _this.getProps().offsetX;
        } else
        {
          left = targetRect.left + scrollX_1 + _this.getProps().offsetX;
        }
        var _a = _this.props.offsetY,offsetY = _a === void 0 ? 0 : _a;
        var bottom = null;
        var top_1 = targetRect.bottom + scrollY_1 + offsetY;
        var distanceToBottom = docEl.clientHeight - targetRect.bottom;
        var dropdownHeight = _this.getHeight();
        if (distanceToBottom < dropdownHeight && targetRect.top > dropdownHeight) {
          var clientHeight = _this.state.isDocumentElementRoot ? docEl.clientHeight : body.scrollHeight;
          top_1 = null;
          bottom = clientHeight + offsetY - scrollY_1 - targetRect.top;
        }
        var position = {
          top: top_1,
          left: left,
          right: right,
          bottom: bottom };

        _this.setState({
          minWidth: _this.getMinWidth(),
          position: _this.props.disablePortal ? _this.convertToRelativePosition(position) : position });

      }
    };
    _this.getHeight = function () {
      if (!_this.isElement(_this.dom)) {
        return 0;
      }
      var child = _this.dom.children.item(0);
      if (!child) {
        return 0;
      }
      return child.getBoundingClientRect().height;
    };
    _this.getMinWidth = function () {
      var target = _this.props.getParent();
      if (!_this.isElement(target)) {
        return 0;
      }
      return target.getBoundingClientRect().width;
    };
    _this.convertToRelativePosition = function (position) {
      var target = _this.props.getParent();
      var _a = _this.props,_b = _a.offsetX,offsetX = _b === void 0 ? 0 : _b,_c = _a.offsetY,offsetY = _c === void 0 ? 0 : _c;
      var top = position.top,bottom = position.bottom,left = position.left,right = position.right;
      if (_this.isElement(target)) {
        var targetHeight = target.getBoundingClientRect().height;
        return {
          top: top !== null ? targetHeight + offsetY : null,
          bottom: bottom !== null ? targetHeight + offsetY : null,
          left: left !== null ? offsetX : null,
          right: right !== null ? offsetX : null };

      }
      return {
        top: offsetY,
        bottom: null,
        left: offsetX,
        right: null };

    };
    return _this;
  }
  DropdownContainer.prototype.componentDidMount = function () {
    this.position();
    this.layoutSub = LayoutEvents_1["default"].addListener(this.position);
  };
  DropdownContainer.prototype.componentWillMount = function () {
    var body = document.body,docEl = document.documentElement;
    var htmlPosition = getComputedStyle_1["default"](docEl).position;
    var bodyPosition = getComputedStyle_1["default"](body).position;
    var hasLimitedHeightRoot = body.scrollHeight > body.clientHeight;
    var hasStaticRoot = htmlPosition === 'static' && bodyPosition === 'static';
    this.setState({ isDocumentElementRoot: hasLimitedHeightRoot || hasStaticRoot });
  };
  DropdownContainer.prototype.componentWillUnmount = function () {
    if (this.layoutSub) {
      this.layoutSub.remove();
    }
  };
  DropdownContainer.prototype.render = function () {
    var style = {
      position: 'absolute',
      top: '0' };

    if (this.state.position) {
      var _a = this.state.position,top_2 = _a.top,bottom = _a.bottom,left = _a.left,right = _a.right;
      style = tslib_1.__assign({}, style, { top: top_2 !== null ? top_2 : undefined, bottom: bottom !== null ? bottom : undefined, left: left !== null ? left : undefined, right: right !== null ? right : undefined, minWidth: this.state.minWidth });
    }
    var content = React.createElement(ZIndex_1["default"], { priority: 'DropdownContainer', ref: this.ref, style: style }, this.props.children);
    return this.props.disablePortal ? content : React.createElement(RenderContainer_1["default"], null, content);
  };
  DropdownContainer.__KONTUR_REACT_UI__ = 'DropdownContainer';
  DropdownContainer.defaultProps = {
    align: 'left',
    disablePortal: false,
    offsetX: 0,
    offsetY: -1 };

  return DropdownContainer;
}(React.Component);
exports["default"] = DropdownContainer;