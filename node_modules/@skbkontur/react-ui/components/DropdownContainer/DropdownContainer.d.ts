import * as React from 'react';
import { Nullable } from '../../typings/utility-types';
declare type DOMNode = Element | Text | null;
export interface DropdownContainerPosition {
    top: Nullable<number>;
    bottom: Nullable<number>;
    left: Nullable<number>;
    right: Nullable<number>;
}
export interface DropdownContainerProps {
    align?: 'left' | 'right';
    getParent: () => DOMNode;
    children?: React.ReactNode;
    disablePortal?: boolean;
    offsetY?: number;
    offsetX?: number;
}
export interface DropdownContainerState {
    position: Nullable<DropdownContainerPosition>;
    minWidth: number;
    isDocumentElementRoot?: boolean;
}
export default class DropdownContainer extends React.Component<DropdownContainerProps, DropdownContainerState> {
    static __KONTUR_REACT_UI__: string;
    static defaultProps: {
        align: string;
        disablePortal: boolean;
        offsetX: number;
        offsetY: number;
    };
    state: DropdownContainerState;
    private getProps;
    private dom;
    private layoutSub;
    componentDidMount(): void;
    componentWillMount(): void;
    componentWillUnmount(): void;
    render(): JSX.Element;
    private ref;
    private isElement;
    private position;
    private getHeight;
    private getMinWidth;
    private convertToRelativePosition;
}
export {};
