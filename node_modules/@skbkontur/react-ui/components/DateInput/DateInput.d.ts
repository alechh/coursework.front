import * as React from 'react';
import { InternalDate } from '../../lib/date/InternalDate';
import { InternalDateComponentType } from '../../lib/date/types';
export interface DateInputState {
    selected: InternalDateComponentType | null;
    internalDate: InternalDate;
    typesOrder: InternalDateComponentType[];
    inputMode: boolean;
    focused: boolean;
    notify: boolean;
    dragged: boolean;
    autoMoved: boolean;
}
export interface DateInputProps {
    value?: string;
    error?: boolean;
    warning?: boolean;
    disabled?: boolean;
    /**
     * Минимальная дата.
     * @default '01.01.1900'
     */
    minDate: string;
    /**
     * Максимальная дата
     * @default '31.12.2099'
     */
    maxDate: string;
    /**
     * Ширина поля
     * @default 125
     */
    width: string | number;
    withIcon?: boolean;
    /**
     * Размер поля
     * @default 'small'
     */
    size: 'small' | 'large' | 'medium';
    onBlur?: (x0: React.FocusEvent<HTMLElement>) => void;
    onFocus?: (x0: React.FocusEvent<HTMLElement>) => void;
    /**
     * @param e - объект, частично имитирующий объект `Event`.
     * @param value - строка в формате `dd.mm.yyyy`.
     */
    onChange?: (e: {
        target: {
            value: string;
        };
    }, value: string) => void;
    onKeyDown?: (x0: React.KeyboardEvent<HTMLElement>) => void;
}
export declare class DateInput extends React.Component<DateInputProps, DateInputState> {
    static __KONTUR_REACT_UI__: string;
    static defaultProps: {
        minDate: string;
        maxDate: string;
        size: string;
        width: number;
    };
    private theme;
    private locale;
    private inputLikeText;
    private divInnerNode;
    private isMouseDown;
    private isFirstFocus;
    private ieFrozen;
    constructor(props: DateInputProps);
    componentDidUpdate(prevProps: DateInputProps, prevState: DateInputState): void;
    componentDidMount(): void;
    render(): JSX.Element;
    blur(): void;
    focus(): void;
    blink(): void;
    private renderMain;
    private divInnerNodeRef;
    private handleMouseDown;
    private handleMouseUp;
    private handleSelectDateComponent;
    private changeSelectedDateComponent;
    private handleMouseDragStart;
    private handleMouseDragEnd;
    private updateInternalDate;
    private updateInternalDateFromProps;
    private handleFocus;
    private handleBlur;
    private handleKeyDown;
    private selectionNotIe;
    private selectionIe;
    private selection;
    private pressDelimiter;
    private handlePaste;
    private emitChange;
    private clearSelected;
    private clearOneChar;
    private updateDateComponentBy;
    private moveSelection;
    private notify;
    private inputValue;
    private inputNumberCallBack;
    private selectNodeContents;
    private selectDateComponent;
    private handleDoubleClick;
    private getFirstDateComponentType;
    private getLastDateComponentType;
    private renderIcon;
}
export default DateInput;
