"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var ThemeContext_1 = require("../../lib/theming/ThemeContext");
var ThemeFactory_1 = tslib_1.__importDefault(require("../../lib/theming/ThemeFactory"));
var currentEnvironment_1 = require("../internal/currentEnvironment");
var lodash_isequal_1 = tslib_1.__importDefault(require("lodash.isequal"));
var warning_1 = tslib_1.__importDefault(require("warning"));
var ThemeProvider = /** @class */function (_super) {
  tslib_1.__extends(ThemeProvider, _super);
  function ThemeProvider(props) {
    var _this = _super.call(this, props) || this;
    _this.theme = _this.makeFullTheme(props.value);
    return _this;
  }
  ThemeProvider.prototype.componentWillReceiveProps = function (nextProps) {
    if (nextProps.value !== this.props.value) {
      if (currentEnvironment_1.isDevelopmentEnv) {
        var hasSameShape = lodash_isequal_1["default"](nextProps.value, this.props.value);
        warning_1["default"](!hasSameShape, "ThemeProvider received next value with the same shape as the previous one." +
        '\n' +
        "Consider using the same object reference for performance reasons." +
        '\n' + (
        "Shape: " + JSON.stringify(nextProps.value)));
      }
      this.theme = this.makeFullTheme(nextProps.value);
    }
  };
  ThemeProvider.prototype.render = function () {
    return React.createElement(ThemeContext_1.ThemeProvider, { value: this.theme }, this.props.children);
  };
  ThemeProvider.prototype.makeFullTheme = function (theme) {
    return ThemeFactory_1["default"].isFullTheme(theme) ? theme : ThemeFactory_1["default"].create(theme);
  };
  ThemeProvider.__KONTUR_REACT_UI__ = 'ThemeProvider';
  return ThemeProvider;
}(React.Component);
exports.ThemeProvider = ThemeProvider;
exports["default"] = ThemeProvider;