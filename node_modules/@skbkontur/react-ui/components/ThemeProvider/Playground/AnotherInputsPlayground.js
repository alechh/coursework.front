"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/* tslint:disable jsx-no-lambda */
var React = tslib_1.__importStar(require("react"));
var Tooltip_1 = tslib_1.__importDefault(require("../../Tooltip"));
var DatePicker_1 = tslib_1.__importDefault(require("../../DatePicker"));
var DatePickerPlayground = /** @class */function (_super) {
  tslib_1.__extends(DatePickerPlayground, _super);
  function DatePickerPlayground() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.state = {
      value: '17.06.2019',
      error: false,
      tooltip: false };

    _this.handleChange = function (_, value) {
      _this.setState({
        value: value });

    };
    _this.invalidate = function () {
      _this.setState({ error: false, tooltip: false });
    };
    _this.validate = function () {
      var currentValue = _this.state.value;
      _this.setState(function () {
        var error = !!currentValue && !DatePicker_1["default"].validate(currentValue);
        return {
          error: error,
          tooltip: error };

      });
    };
    _this.removeTooltip = function () {
      _this.setState({
        tooltip: false });

    };
    return _this;
  }
  DatePickerPlayground.prototype.render = function () {
    return React.createElement(Tooltip_1["default"], { trigger: this.state.tooltip ? 'opened' : 'closed', render: function render() {return 'Такой даты не существует';}, onCloseClick: this.removeTooltip },
    React.createElement(DatePicker_1["default"], tslib_1.__assign({}, this.props, { disabled: this.props.disabled, size: this.props.size, error: this.state.error, value: this.state.value, onChange: this.handleChange, onFocus: this.invalidate, onBlur: this.validate, enableTodayLink: true })));
  };
  return DatePickerPlayground;
}(React.Component);
exports.DatePickerPlayground = DatePickerPlayground;