import * as React from 'react';
import { ITheme } from '../../../lib/theming/Theme';
import { PlaygroundTheme } from './ThemeProviderPlayground';
export interface IVariableValueProps {
    onChange: (variable: keyof PlaygroundTheme, value: string) => void;
    value: string;
    isError: boolean;
    variable: string;
    theme: PlaygroundTheme;
    baseVariables: Array<keyof ITheme>;
}
export interface IVariableValueState {
    value: string;
    editing: boolean;
}
export declare class VariableValue extends React.Component<IVariableValueProps, IVariableValueState> {
    state: {
        value: string;
        editing: boolean;
    };
    private subscription;
    private inputInstance;
    private readonly debounceTimeout;
    private debounceInterval;
    render(): JSX.Element;
    componentDidMount(): void;
    componentDidUpdate(prevProps: IVariableValueProps): void;
    componentWillUnmount(): void;
    private renderBaseVariableLink;
    private renderInputWrapper;
    private renderInput;
    private renderRollbackIcon;
    private inputRef;
    private colorIcon;
    private handleEditLinkClick;
    private rollbackToBaseVariable;
    private emitClickEvent;
    private handleChange;
    private debounceHandler;
    private handleBlur;
    private emitterEventHandler;
}
