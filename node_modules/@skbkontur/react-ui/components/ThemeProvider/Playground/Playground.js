"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var Emotion_1 = require("../../../lib/theming/Emotion");
var Search_1 = tslib_1.__importDefault(require("@skbkontur/react-icons/Search"));
var Card_1 = tslib_1.__importDefault(require("@skbkontur/react-icons/Card"));
var Link_1 = tslib_1.__importDefault(require("@skbkontur/react-icons/Link"));
var Ok_1 = tslib_1.__importDefault(require("@skbkontur/react-icons/Ok"));
var Error_1 = tslib_1.__importDefault(require("@skbkontur/react-icons/Error"));
var Trash_1 = tslib_1.__importDefault(require("@skbkontur/react-icons/Trash"));
var HelpDot_1 = tslib_1.__importDefault(require("@skbkontur/react-icons/HelpDot"));
var styles_module_less_1 = tslib_1.__importDefault(require("./styles.module.css"));
var jsStyles_1 = tslib_1.__importDefault(require("./jsStyles"));
var Button_1 = tslib_1.__importDefault(require("../../Button"));
var Tabs_1 = tslib_1.__importDefault(require("../../Tabs/Tabs"));
var constants_1 = require("./constants");
var Gapped_1 = tslib_1.__importDefault(require("../../Gapped/Gapped"));
var Link_2 = tslib_1.__importDefault(require("../../Link/Link"));
var Input_1 = tslib_1.__importDefault(require("../../Input"));
var TokenInputPlayground_1 = require("./TokenInputPlayground");
var AnotherInputsPlayground_1 = require("./AnotherInputsPlayground");
var TogglePlayground_1 = require("./TogglePlayground");
var SwitcherPlayground_1 = require("./SwitcherPlayground");
var FxInputPlayground_1 = require("./FxInputPlayground");
var CurrencyInputPlayground_1 = require("./CurrencyInputPlayground");
var ThemeConsumer_1 = require("../../ThemeConsumer");
var SelectPlayground_1 = require("./SelectPlayground");
var helpers_1 = require("./helpers");
var CheckboxPlayground_1 = require("./CheckboxPlayground");
var RadioPlayground_1 = require("./RadioPlayground");
var Tooltip_1 = tslib_1.__importDefault(require("../../Tooltip"));
var PagingPlayground_1 = require("./PagingPlayground");
var HintPlayground_1 = require("./HintPlayground");
var ComponentsGroup_1 = require("./ComponentsGroup");
var Sticky_1 = tslib_1.__importDefault(require("../../Sticky"));
var enableReactTesting = process.env.enableReactTesting === 'true';
var useSticky = !enableReactTesting;
var Playground = /** @class */function (_super) {
  tslib_1.__extends(Playground, _super);
  function Playground() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.stickyStop = null;
    _this.renderTabsGroup = function () {
      return useSticky ? React.createElement(Sticky_1["default"], { side: 'top', getStop: _this.getStickyStop }, _this.renderTabs()) : _this.renderTabs();
    };
    _this.renderSizesGroup = function () {
      var sizes = ['small', 'medium', 'large'];
      var group = [
      React.createElement(SelectPlayground_1.SelectPlayground, { width: 120 }),
      React.createElement(Input_1["default"], { rightIcon: React.createElement(Card_1["default"], null), placeholder: 'Text value' }),
      React.createElement(Button_1["default"], { width: 120 }, "Button"),
      React.createElement(Button_1["default"], { icon: React.createElement(Link_1["default"], null), use: 'link' }, "Button like a link")];

      var components = sizes.reduce(function (result, size) {
        return result.concat(group.map(function (comp) {return React.cloneElement(comp, { size: size });}));
      }, []);
      return React.createElement(ComponentsGroup_1.ComponentsGroup, { title: 'Размеры', components: components, theme: _this.theme });
    };
    _this.renderLinksGroup = function () {
      var propsList = [
      { icon: React.createElement(Link_1["default"], null), children: 'Enabled' },
      { icon: React.createElement(Ok_1["default"], null), use: 'success', children: 'Success' },
      { icon: React.createElement(Error_1["default"], null), use: 'danger', children: 'Danger' },
      { icon: React.createElement(Trash_1["default"], null), use: 'grayed', children: 'Grayed' },
      { icon: React.createElement(Trash_1["default"], null), children: 'Disabled', disabled: true }];

      return React.createElement(ComponentsGroup_1.ComponentsGroup, { title: 'Ссылки', components: helpers_1.getComponentsFromPropsList(React.createElement(Link_2["default"], null), propsList), theme: _this.theme });
    };
    _this.renderButtonsGroup = function () {
      var propsList = [
      { children: 'Default' },
      { children: 'Primary', use: 'primary' },
      { children: 'Danger', use: 'danger' },
      { children: 'Pay', use: 'pay' },
      { children: 'Disabled', disabled: true },
      { children: 'Back', arrow: 'left', size: 'medium', width: 110 },
      { children: 'Forward', arrow: true, size: 'medium', use: 'primary', width: 110 },
      { children: 'Loading', size: 'medium', loading: true }];

      return React.createElement(ComponentsGroup_1.ComponentsGroup, { title: 'Кнопки', components: helpers_1.getComponentsFromPropsList(React.createElement(Button_1["default"], { width: 120, size: 'small' }), propsList), theme: _this.theme });
    };
    _this.renderInputsGroup = function () {
      var propsList = [
      { placeholder: 'Enabled' },
      { placeholder: 'Error', error: true },
      { placeholder: 'Warning', warning: true },
      { placeholder: 'Disabled', disabled: true }];

      var fromProps = helpers_1.getComponentsFromPropsList(React.createElement(Input_1["default"], { width: 120 }), propsList);
      var components = [
      React.createElement(Input_1["default"], { width: 380, prefix: "https://kontur.ru/search?query=", rightIcon: React.createElement(Search_1["default"], null) }),
      React.createElement("div", null,
      React.createElement(Gapped_1["default"], { gap: 10 }, fromProps))];

      return React.createElement(ComponentsGroup_1.ComponentsGroup, { title: 'Поле ввода', components: components, theme: _this.theme });
    };
    _this.renderTokenInputsGroup = function () {
      var components = [React.createElement(TokenInputPlayground_1.TokenInputPlayground, null)];
      return React.createElement(ComponentsGroup_1.ComponentsGroup, { title: 'Поле с токеном', components: components, theme: _this.theme });
    };
    _this.renderOtherInputsGroup = function () {
      var components = [React.createElement(CurrencyInputPlayground_1.CurrencyInputPlayground, null), React.createElement(FxInputPlayground_1.FxInputPlayground, null), React.createElement(AnotherInputsPlayground_1.DatePickerPlayground, null)];
      return React.createElement(ComponentsGroup_1.ComponentsGroup, { title: 'Прочие поля', components: components, theme: _this.theme });
    };
    _this.renderSwitchersGroup = function () {
      var components = [React.createElement(SwitcherPlayground_1.SwitcherPlayground, null)];
      return React.createElement(ComponentsGroup_1.ComponentsGroup, { title: 'Переключатели', components: components, theme: _this.theme });
    };
    _this.renderControlsGroup = function () {
      var components = [
      React.createElement(Gapped_1["default"], { verticalAlign: 'top', gap: 60 },
      React.createElement(CheckboxPlayground_1.CheckboxPlayground, null),
      React.createElement(RadioPlayground_1.RadioPlayground, null),
      React.createElement(TogglePlayground_1.TogglePlayground, null))];

      return React.createElement(ComponentsGroup_1.ComponentsGroup, { title: 'Радио, чекбоксы', components: components, theme: _this.theme });
    };
    _this.renderHintsGroup = function () {
      var components = [React.createElement(HintPlayground_1.HintPlayground, null)];
      return React.createElement(ComponentsGroup_1.ComponentsGroup, { title: 'Тултип', components: components, theme: _this.theme });
    };
    _this.renderTooltip = function () {
      var tooltipContent = function tooltipContent() {return React.createElement("div", { className: styles_module_less_1["default"].tooltipContent }, 'Информация об ошибке. Короткий объясняющий текст и ссылка, если нужно');};
      var components = [
      React.createElement(Tooltip_1["default"], { render: tooltipContent, pos: "right middle", trigger: 'opened', disableAnimations: true },
      React.createElement(Link_2["default"], { icon: React.createElement(HelpDot_1["default"], null) }))];

      return React.createElement(ComponentsGroup_1.ComponentsGroup, { title: 'Тултип', components: components, theme: _this.theme });
    };
    _this.renderPaging = function () {
      var components = [React.createElement(PagingPlayground_1.PagingPlayground, null)];
      return React.createElement(ComponentsGroup_1.ComponentsGroup, { title: 'Пейджинг', components: components, theme: _this.theme });
    };
    _this.renderStickyStopElement = function () {
      return React.createElement("div", { ref: _this.stopRef, style: { height: 50 } });
    };
    _this.stopRef = function (el) {return _this.stickyStop = el;};
    _this.getStickyStop = function () {return _this.stickyStop;};
    return _this;
  }
  Playground.prototype.render = function () {
    var _this = this;
    return React.createElement(ThemeConsumer_1.ThemeConsumer, null, function (theme) {
      _this.theme = theme;
      return _this.renderMain();
    });
  };
  /* tslint:disable jsx-key */
  Playground.prototype.renderMain = function () {
    var wrapperClassName = Emotion_1.cx(styles_module_less_1["default"].playground, jsStyles_1["default"].playgroundWrapper(this.theme));
    return React.createElement("div", { className: wrapperClassName },
    React.createElement(Gapped_1["default"], { vertical: true, gap: 50 },
    this.renderTabsGroup(),
    this.renderSizesGroup(),
    this.renderLinksGroup(),
    this.renderButtonsGroup(),
    this.renderInputsGroup(),
    this.renderOtherInputsGroup(),
    this.renderTokenInputsGroup(),
    this.renderSwitchersGroup(),
    this.renderControlsGroup()),
    this.renderStickyStopElement(),
    React.createElement(Gapped_1["default"], { vertical: true, gap: 50 },
    this.renderHintsGroup(),
    this.renderTooltip(),
    this.renderPaging()));
  };
  Playground.prototype.renderTabs = function () {
    var _a = this.props,currentThemeType = _a.currentThemeType,onThemeChange = _a.onThemeChange,onEditLinkClick = _a.onEditLinkClick;
    var tabsOuterWrapperStyle = { background: this.theme.backgroundMain || 'white' };
    var tabsOuterWrapperClass = Emotion_1.cx(styles_module_less_1["default"].tabsWrapper, useSticky && jsStyles_1["default"].stickyTabsWrapper(this.theme));
    return React.createElement("div", { style: tabsOuterWrapperStyle, className: tabsOuterWrapperClass },
    React.createElement(Gapped_1["default"], { gap: 40 },
    React.createElement(Tabs_1["default"], { value: currentThemeType, onChange: onThemeChange, vertical: false },
    React.createElement("div", { className: jsStyles_1["default"].tabsInnerWrapper(this.theme) },
    React.createElement(Tabs_1["default"].Tab, { id: constants_1.ThemeType.Default }, "\u0414\u0435\u0444\u043E\u043B\u0442\u043D\u0430\u044F"),
    React.createElement(Tabs_1["default"].Tab, { id: constants_1.ThemeType.Flat }, "\u041F\u043B\u043E\u0441\u043A\u0430\u044F"),
    React.createElement(Tabs_1["default"].Tab, { id: constants_1.ThemeType.Dark }, "\u0422\u0435\u043C\u043D\u0430\u044F"))),
    React.createElement(Link_2["default"], { onClick: onEditLinkClick }, "\u041D\u0430\u0441\u0442\u0440\u043E\u0438\u0442\u044C \u0442\u0435\u043C\u0443")));
  };
  return Playground;
}(React.Component);
exports.Playground = Playground;