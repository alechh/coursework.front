import * as React from 'react';
import * as PropTypes from 'prop-types';
import { Nullable } from '../../typings/utility-types';
export interface ToastViewProps {
    children?: string;
    action?: Nullable<{
        label: string;
        handler: () => void;
    }>;
    onClose?: () => void;
    onMouseEnter?: () => void;
    onMouseLeave?: () => void;
}
declare class ToastView extends React.Component<ToastViewProps> {
    static propTypes: {
        /**
         * Adds action handling and close icon for toast
         */
        action: PropTypes.Requireable<PropTypes.InferProps<{
            label: PropTypes.Validator<string>;
            handler: PropTypes.Validator<(...args: any[]) => any>;
        }>>;
        /**
         * Toast content
         */
        children: PropTypes.Validator<string>;
        onClose: PropTypes.Requireable<(...args: any[]) => any>;
    };
    private theme;
    render(): JSX.Element;
    private renderMain;
}
export default ToastView;
