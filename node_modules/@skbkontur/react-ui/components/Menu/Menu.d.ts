import * as React from 'react';
interface MenuProps {
    children: React.ReactNode;
    hasShadow?: boolean;
    maxHeight?: number | string;
    onItemClick?: () => void;
    width?: number | string;
    preventWindowScroll?: boolean;
}
interface MenuState {
    highlightedIndex: number;
}
export default class Menu extends React.Component<MenuProps, MenuState> {
    static __KONTUR_REACT_UI__: string;
    static defaultProps: {
        width: string;
        maxHeight: number;
        hasShadow: boolean;
        preventWindowScroll: boolean;
    };
    state: {
        highlightedIndex: number;
    };
    private theme;
    private scrollContainer;
    private highlighted;
    private unmounted;
    componentWillUnmount(): void;
    render(): JSX.Element;
    /**
     * @public
     */
    up(): void;
    /**
     * @public
     */
    down(): void;
    /**
     * @public
     */
    enter(event: React.SyntheticEvent<HTMLElement>): boolean;
    /**
     * @public
     */
    reset(): void;
    /**
     * @public
     */
    hasHighlightedItem(): boolean;
    highlightItem(index: number): void;
    private renderMain;
    private refScrollContainer;
    private refHighlighted;
    private scrollToSelected;
    private scrollToTop;
    private scrollToBottom;
    private select;
    private highlight;
    private unhighlight;
    private move;
    private isEmpty;
}
export {};
