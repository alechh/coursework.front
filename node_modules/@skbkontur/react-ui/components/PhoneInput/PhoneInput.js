"use strict";exports.__esModule = true;exports["default"] = void 0;var React = _interopRequireWildcard(require("react"));
var _Input = _interopRequireDefault(require("../Input"));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { "default": obj };}function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { "default": obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj["default"] = obj;if (cache) {cache.set(obj, newObj);}return newObj;}function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}function _inheritsLoose(subClass, superClass) {subClass.prototype = Object.create(superClass.prototype);subClass.prototype.constructor = subClass;subClass.__proto__ = superClass;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}

/**
Все пропсы пробрасываются во внутренний Input
var
PhoneInput = /*#__PURE__*/function (_React$Component) {_inheritsLoose(PhoneInput, _React$Component);function PhoneInput() {return _React$Component.apply(this, arguments) || this;}var _proto = PhoneInput.prototype;_proto.


  render = function render() {
    return React.createElement(_Input["default"], _extends({}, this.props, { mask: "+7 999 999-99-99", maskChar: null, placeholder: "+7" }));
  };return PhoneInput;}(React.Component);_defineProperty(PhoneInput, "__KONTUR_REACT_UI__", 'PhoneInput');var _default =


PhoneInput;exports["default"] = _default;