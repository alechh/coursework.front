{"version":3,"sources":["ComboBoxOld.js"],"names":["ComboBoxOld","info","renderer","render","props","state","spread","_ref","focus","_focus","componentDidMount","_mounted","value","_fetchInfo","componentWillUnmount","componentWillReceiveProps","newProps","_maybeRefetchInfo","setState","promise","_infoPromise","then","React","Component","autoFocus","PropTypes","bool","borderless","debounceInterval","number","disablePortal","disabled","error","oneOfType","any","func","menuAlign","oneOf","openButton","placeholder","string","recover","renderItem","renderNotFound","renderTotalCount","renderValue","source","isRequired","warning","width","onBlur","onChange","onClose","onFocus","onInputChange","onInputKeyDown","onMouseEnter","onMouseLeave","onMouseOver","onOpen"],"mappings":"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","sourcesContent":["// @flow\r\n/* eslint-disable flowtype/no-types-missing-file-annotation */\r\n/* eslint-disable flowtype/no-weak-types */\r\nimport * as React from 'react';\r\nimport warning from 'warning';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ComboBoxRenderer from './ComboBoxRenderer';\r\nimport type { BaseProps, Info, Value } from './ComboBoxRenderer';\r\n\r\ntype Props = BaseProps & {\r\n  info?: Info | ((v: Value) => Promise<Info>),\r\n};\r\n\r\n/**\r\n * @deprecated Компонент устарел и будет удален в версии 2.0.0. Используйте актульный [ComboBox](#/Components/ComboBox).\r\n */\r\nexport default class ComboBoxOld extends React.Component<Props, $FlowFixMeState> {\r\n  static __KONTUR_REACT_UI__ = 'ComboBoxOld';\r\n\r\n  static propTypes = {\r\n    autoFocus: PropTypes.bool,\r\n\r\n    borderless: PropTypes.bool,\r\n\r\n    debounceInterval: PropTypes.number,\r\n\r\n    /**\r\n     * Не использовать Portal для рендеринга меню.\r\n     * По-умолчанию `false`.\r\n     * См. https://github.com/skbkontur/retail-ui/issues/15\r\n     */\r\n    disablePortal: PropTypes.bool,\r\n\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * Визуально показать наличие ошибки.\r\n     */\r\n    error: PropTypes.bool,\r\n\r\n    /**\r\n     * Данные, которые будут переданы в функции для отрисовки значений\r\n     * (`renderValue` и `renderItem`).\r\n     */\r\n    info: PropTypes.oneOfType([PropTypes.any, PropTypes.func]),\r\n\r\n    menuAlign: PropTypes.oneOf(['left', 'right']),\r\n\r\n    /**\r\n     * Показывать кнопку-треугольник для показа резаультатов.\r\n     */\r\n    openButton: PropTypes.bool,\r\n\r\n    placeholder: PropTypes.string,\r\n\r\n    /**\r\n     * Функция для обработки неожиданного ввода. Если пользователь ввел что-то в\r\n     * строку поиска и нажал Enter или ушел из поля, не выбрав значение, то\r\n     * будет вызвана эта функция, которая может вернуть значение, которое будет\r\n     * использовано как будто оно было выбрано.\r\n     *\r\n     * Возвращаемое значение может быть `null`, либо объектом такой формы:\r\n     * `{value: any, info?: any}`.\r\n     *\r\n     * Если задать это поле в `true`, то будет использована такая функция:\r\n     * `(searchText) => searchText`.\r\n     */\r\n    recover: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\r\n\r\n    renderItem: PropTypes.func,\r\n\r\n    /**\r\n     * Сообщение при отсутствии результатов\r\n     *\r\n     * `string | (searchText: string) => React$Element<*> | string`\r\n     */\r\n    renderNotFound: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n\r\n    /**\r\n     * Общее количество найденных элементов\r\n     *\r\n     * `(foundCount: number, totalCount: number) => React$Element<*> | string`\r\n     */\r\n    renderTotalCount: PropTypes.func,\r\n\r\n    renderValue: PropTypes.func,\r\n\r\n    source: PropTypes.func.isRequired,\r\n\r\n    value: PropTypes.any,\r\n\r\n    /**\r\n     * Визуально показать наличие предупреждения.\r\n     */\r\n    warning: PropTypes.bool,\r\n\r\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n\r\n    onBlur: PropTypes.func,\r\n\r\n    onChange: PropTypes.func,\r\n\r\n    onClose: PropTypes.func,\r\n\r\n    onFocus: PropTypes.func,\r\n\r\n    /**\r\n     * Вызывается при изменении текста в поле ввода,\r\n     * если результатом функции будет строка,\r\n     * то она станет следующим состояним полем ввода\r\n     *\r\n     * `(value: string) => any`\r\n     */\r\n    onInputChange: PropTypes.func,\r\n\r\n    /**\r\n     * Позволяет обработать нажатия клавиш.\r\n     * Можно отменить стандартное поведение, используя `event.preventDefault()`\r\n     *\r\n     * `(event: KeyboardSyntheticEvent) => void`\r\n     */\r\n    onInputKeyDown: PropTypes.func,\r\n\r\n    onMouseEnter: PropTypes.func,\r\n\r\n    onMouseLeave: PropTypes.func,\r\n\r\n    onMouseOver: PropTypes.func,\r\n\r\n    onOpen: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    menuAlign: 'left',\r\n    placeholder: '',\r\n    width: 250,\r\n  };\r\n\r\n  state = {\r\n    info: null,\r\n  };\r\n\r\n  renderer: ComboBoxRenderer;\r\n\r\n  _mounted = false;\r\n  _infoPromise: ?Promise<any>;\r\n\r\n  render() {\r\n    let info = this.props.info;\r\n    if (typeof info === 'function') {\r\n      info = this.state.info;\r\n    }\r\n\r\n    // Flow needs this for some reason.\r\n    const spread: BaseProps = this.props;\r\n\r\n    return <ComboBoxRenderer ref={this._ref} {...spread} info={info} />;\r\n  }\r\n\r\n  focus() {\r\n    if (this.renderer) {\r\n      this.renderer._focus();\r\n    }\r\n  }\r\n\r\n  _ref = (renderer: ComboBoxRenderer) => {\r\n    this.renderer = renderer;\r\n  };\r\n\r\n  componentDidMount() {\r\n    warning(false, 'ComboBoxOld is deprecated and will be removed in v2.0.0. Please, use the actual ComboBox instead.');\r\n    this._mounted = true;\r\n    const { value, info } = this.props;\r\n    if (typeof info === 'function') {\r\n      this._fetchInfo(value, info);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._mounted = false;\r\n  }\r\n\r\n  componentWillReceiveProps(newProps: Props) {\r\n    this._maybeRefetchInfo(newProps.value, newProps.info);\r\n  }\r\n\r\n  _maybeRefetchInfo(value: Value, info: Info) {\r\n    if (typeof info !== 'function') {\r\n      return;\r\n    }\r\n\r\n    const props = this.props;\r\n\r\n    if (value === props.value && typeof props.info === 'function') {\r\n      // Values hasn't changed and info is still a function. So we are already\r\n      // fetching info.\r\n      return;\r\n    }\r\n\r\n    this.setState({ info: null });\r\n    this._fetchInfo(value, info);\r\n  }\r\n\r\n  _fetchInfo(value: Value, info: Info) {\r\n    const promise = info(value);\r\n    this._infoPromise = promise;\r\n\r\n    promise.then(info => {\r\n      if (this._mounted && this._infoPromise === promise) {\r\n        this.setState({ info });\r\n      }\r\n    });\r\n  }\r\n}\r\n"]}