"use strict";exports.__esModule = true;exports["default"] = void 0;

var React = _interopRequireWildcard(require("react"));
var _reactDom = _interopRequireDefault(require("react-dom"));

var _filterProps = _interopRequireDefault(require("../filterProps"));

var _lodash = _interopRequireDefault(require("lodash.debounce"));

var _RenderLayer = _interopRequireDefault(require("../RenderLayer"));
var _DropdownContainer = _interopRequireDefault(require("../DropdownContainer/DropdownContainer"));
var _Input = _interopRequireDefault(require("../Input"));
var _InputLikeText = _interopRequireDefault(require("../internal/InputLikeText/InputLikeText"));
var _Menu = _interopRequireDefault(require("../Menu/Menu"));
var _MenuItem = _interopRequireDefault(require("../MenuItem/MenuItem"));

var _fixClickFocusIE = require("../../lib/events/fixClickFocusIE");var _ComboBoxRendererModule = _interopRequireDefault(require("./ComboBoxRenderer.module.css"));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { "default": obj };}function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { "default": obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj["default"] = obj;if (cache) {cache.set(obj, newObj);}return newObj;}function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _inheritsLoose(subClass, superClass) {subClass.prototype = Object.create(superClass.prototype);subClass.prototype.constructor = subClass;subClass.__proto__ = superClass;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}



var INPUT_PASS_PROPS = {
  borderless: true,
  error: true,
  warning: true,
  width: true,
  disabled: true,
  onMouseEnter: true,
  onMouseLeave: true,
  onMouseOver: true };var








































































ComboBoxRenderer = /*#__PURE__*/function (_React$Component) {_inheritsLoose(ComboBoxRenderer, _React$Component);
  // eslint-disable-next-line react/no-multi-comp
  ComboBoxRenderer["static"] =





  function _static(element) {
    return element;
  };





















  function ComboBoxRenderer(props, context) {var _this;
    _this = _React$Component.call(this, props, context) || this;_defineProperty(_assertThisInitialized(_this), "_mounted", false);_defineProperty(_assertThisInitialized(_this), "_focusable", null);_defineProperty(_assertThisInitialized(_this), "_menu", null);_defineProperty(_assertThisInitialized(_this), "_focusSubscribtion", null);_defineProperty(_assertThisInitialized(_this), "_lastError", null);_defineProperty(_assertThisInitialized(_this), "_error", null);_defineProperty(_assertThisInitialized(_this), "_ignoreRecover", true);_defineProperty(_assertThisInitialized(_this), "_ignoreBlur", true);_defineProperty(_assertThisInitialized(_this), "_fetchingId", 0);_defineProperty(_assertThisInitialized(_this), "_debouncedFetchList", void 0);_defineProperty(_assertThisInitialized(_this), "_refFocusable",


































































































































































    function (el) {
      _this._focusable = el && (el.focus ? el : _reactDom["default"].findDOMNode(el));
    });_defineProperty(_assertThisInitialized(_this), "_refMenu",

    function (menu) {
      _this._menu = menu;
    });_defineProperty(_assertThisInitialized(_this), "_handleInputChange",

    function (event, value) {
      var newInputValue = value;

      var inputValueChanged = _this.state.searchText !== newInputValue;
      if (inputValueChanged && _this.props.onInputChange) {
        var nextState = _this.props.onInputChange(newInputValue);

        if (nextState != null && typeof nextState !== 'object') {
          newInputValue = '' + nextState;
        }
      }

      _this.setState(function () {return {
          searchText: newInputValue,
          opened: true };});

      _this._debouncedFetchList(newInputValue);
      _this._ignoreRecover = false;
    });_defineProperty(_assertThisInitialized(_this), "_handleInputKey",

    function (event) {
      if (typeof _this.props.onInputKeyDown === 'function') {
        _this.props.onInputKeyDown(event);
        if (event.defaultPrevented) {
          return;
        }
      }

      switch (event.key) {
        case 'ArrowUp':
          event.preventDefault();

          if (!_this.state.opened) {
            _this.setState({ opened: true });
            safelyCall(_this.props.onOpen);
          }

          _this._menu && _this._menu.up();
          break;
        case 'ArrowDown':
          event.preventDefault();

          if (!_this.state.opened) {
            _this.setState({ opened: true });
            safelyCall(_this.props.onOpen);
          }

          _this._menu && _this._menu.down();
          break;
        case 'Enter':
          event.preventDefault();
          var handled = _this._menu && _this._menu.enter(event);
          if (!handled) {
            _this._tryRecover();

            // Close ComboBox only if Enter wasn't handled by the Menu.
            _this._handleBlur();
          }
          break;
        case 'Escape':
          event.preventDefault();
          if (!_this.state.opened) {
            return;
          }
          _this._close();
          break;}

    });_defineProperty(_assertThisInitialized(_this), "_handleValueClick",

    function () {
      _this._setCurrentSearchText(_this.props.value, _this.props.info);
      _this._fetchList('');
      _this._handleFocus();
    });_defineProperty(_assertThisInitialized(_this), "_handleArrowMouseDown",









    function (event) {
      event.preventDefault();
    });_defineProperty(_assertThisInitialized(_this), "_handleArrowClick",

    function (event) {
      if (!_this.state.opened && !_this.props.disabled) {
        _this._handleValueClick();
      }
    });_defineProperty(_assertThisInitialized(_this), "_handleFocus",

    function () {
      /* Allow blur happen only if focus occured */
      _this._ignoreBlur = false;

      _this.setState({ isEditing: true, opened: true });
      safelyCall(_this.props.onOpen);

      if (!safelyCall(_this.props.onFocus)) {
        safelyCall(_this.props.onAlkoFocus);
      }
    });_defineProperty(_assertThisInitialized(_this), "_handleBlur",

    function () {
      if (_this._ignoreBlur) {
        return;
      }

      _this._close(true);
      _this._tryRecover();

      if (!safelyCall(_this.props.onBlur)) {
        safelyCall(_this.props.onAlkoBlur);
      }

      /* Blur should occure only once */
      _this._ignoreBlur = true;
    });_defineProperty(_assertThisInitialized(_this), "_handleClickOutside",

    function (e) {
      (0, _fixClickFocusIE.fixClickFocusIE)(e);
      _this._handleBlur();
    });_defineProperty(_assertThisInitialized(_this), "_close",

    function (endEdit) {
      _this.setState({ opened: false, result: null });
      setTimeout(function () {return _this.setState({ isEditing: !endEdit });}, 0);
      safelyCall(_this.props.onClose);
    });_defineProperty(_assertThisInitialized(_this), "_fetchList",

    function (pattern) {
      var expectingId = ++_this._fetchingId;
      _this.props.source(pattern).then(function (result) {
        if (!_this._mounted) {
          return;
        }

        if (expectingId === _this._fetchingId && _this.state.opened) {
          _this._menu && _this._menu.reset();
          _this.setState(function () {return { result: result };});
        }
      });
    });_defineProperty(_assertThisInitialized(_this), "_focus",

    function () {
      if (_this._focusable && _this._focusable.setSelectionRange) {
        // $FlowIgnore
        _this._focusable.setSelectionRange(0, _this.state.searchText.length);
      } else if (_this._focusable) {
        _this._focusable.focus();
      }
    });_this.state = { opened: false, searchText: '', result: null, isEditing: false, selected: -1 };var debounceInterval = _this.props.debounceInterval;_this._debouncedFetchList = debounceInterval && debounceInterval > 0 ? (0, _lodash["default"])(_this._fetchList, debounceInterval) : _this._fetchList;return _this;}var _proto = ComboBoxRenderer.prototype;_proto.render = function render() {return React.createElement(_RenderLayer["default"], { onFocusOutside: this._handleBlur, onClickOutside: this._handleClickOutside, active: this.state.opened }, React.createElement("label", { className: _ComboBoxRendererModule["default"].root, style: { width: this.props.width } }, this.state.isEditing ? this.renderInput() : this.renderValue(), this.state.opened && this.renderMenu(), this.props.openButton && React.createElement("div", { className: _ComboBoxRendererModule["default"].arrow, onClick: this._handleArrowClick, onMouseDown: this._handleArrowMouseDown })));};_proto.renderInput = function renderInput() {var inputProps = (0, _filterProps["default"])(this.props, INPUT_PASS_PROPS);return React.createElement("div", { className: _ComboBoxRendererModule["default"].input }, React.createElement(_Input["default"], _extends({ ref: this._refFocusable }, inputProps, { value: this.state.searchText, rightIcon: this.props.openButton && React.createElement("span", null), onChange: this._handleInputChange, onKeyDown: this._handleInputKey })));};_proto.renderValue = function renderValue() {var inputProps = (0, _filterProps["default"])(this.props, INPUT_PASS_PROPS);var value = this.props.value ? this.props.renderValue(this.props.value, this.props.info) : React.createElement("span", { className: _ComboBoxRendererModule["default"].placeholder }, this.props.placeholder);var isNotRecovered = !!this._error;return React.createElement(_InputLikeText["default"], _extends({ ref: this._refFocusable }, inputProps, { onClick: this._handleValueClick, onFocus: this._handleValueClick, error: isNotRecovered || this.props.error }), isNotRecovered ? this.state.searchText : value);};_proto.renderMenu = function renderMenu() {var _this2 = this;var result = this.state.result;if (!result) {return null;}var isEmptyResults = result.values.length === 0;return React.createElement(_DropdownContainer["default"], { getParent: function getParent() {return _reactDom["default"].findDOMNode(_this2);}, align: this.props.menuAlign, disablePortal: this.props.disablePortal, offsetY: 1 }, React.createElement(_Menu["default"], { ref: this._refMenu, maxHeight: 200 }, isEmptyResults ? this.renderEmptyResults() : this.renderResults(result), this.renderTotalCount(result)));};_proto.renderResults = function renderResults(result) {var _this3 = this;return mapResult(result, function (value, info, i) {if (typeof value === 'function' || React.isValidElement(value)) {var element = typeof value === 'function' ? value() : value;return React.cloneElement(element, { key: i, onClick: function onClick(event) {return _this3._handleItemClick(event, element.props);} });}return React.createElement(_MenuItem["default"], { key: i, onClick: function onClick(event) {_this3._handleItemClick(event, { value: value, info: info });} }, function (state) {return _this3.props.renderItem(value, info, state);});});};_proto.renderEmptyResults = function renderEmptyResults() {var renderNotFound = this.props.renderNotFound;if (!renderNotFound) {return null;}var searchText = this.state.searchText;return React.createElement(_MenuItem["default"], { disabled: !isFunction(renderNotFound) }, isFunction(renderNotFound) ? renderNotFound(searchText) : renderNotFound);};_proto.renderTotalCount = function renderTotalCount(result) {var renderTotalCount = this.props.renderTotalCount;if (!renderTotalCount || !result || !result.values || !result.total) {return null;}if (result.values.length === result.total) {return null;}return React.createElement(_MenuItem["default"], { disabled: true }, React.createElement("div", { className: _ComboBoxRendererModule["default"].totalCount }, renderTotalCount(result.values.length, result.total)));};_proto.componentDidMount = function componentDidMount() {this._mounted = true;if (this.props.autoFocus) {this._focus();}};_proto.componentWillUnmount = function componentWillUnmount() {this._mounted = false;};_proto._handleItemClick = function _handleItemClick(event, options) {this.setState({ searchText: '', opened: false, isEditing: false });this._change(options.value, options.info);safelyCall(options.onClick);this._handleBlur();};_proto.

  _tryRecover = function _tryRecover() {
    if (this._ignoreRecover) {
      return;
    }
    this._ignoreRecover = true;

    if (!this.props.recover) {
      this._change(null);
      this.setState({ searchText: '' });
      return;
    }

    var searchText = this.state.searchText;
    var recovered = null;

    if (typeof this.props.recover === 'function') {
      recovered = this.props.recover(searchText);
    } else if (this.props.recover === true) {
      recovered = { value: searchText };
    }

    if (recovered) {
      this._change(recovered.value, recovered.info);
    } else {
      this._change(null);
      this._setError(this.state.searchText ? 'not_recovered' : null);
    }
  };_proto.

  _setError = function _setError(error) {
    this._error = error;
    if (this._lastError !== error) {
      this._lastError = error;
      safelyCall(this.props.onError, error);
    }
  };_proto.

  _change = function _change(value, info) {
    safelyCall(this.props.onChange, { target: { value: value } }, value, info);
    this._setError(null);

    /* No need in recovers after value changes */
    this._ignoreRecover = true;
  };_proto.

  _setCurrentSearchText = function _setCurrentSearchText(value, info) {
    var valueToString = this.props.valueToString;

    if (valueToString) {
      var _searchText = value ? valueToString(value, info) : this.state.searchText;

      return this.setState({ searchText: _searchText }, this._focus);
    }

    return this.setState({ searchText: '' }, this._focus);
  };return ComboBoxRenderer;}(React.Component);_defineProperty(ComboBoxRenderer, "Item", /*#__PURE__*/function (_React$Component2) {_inheritsLoose(Item, _React$Component2);function Item() {return _React$Component2.apply(this, arguments) || this;}var _proto2 = Item.prototype;_proto2.render = function render() {return React.createElement(_MenuItem["default"], null, this.props.children);};return Item;}(React.Component));_defineProperty(ComboBoxRenderer, "defaultProps", { renderItem: renderItem, renderValue: renderValue, placeholder: '', width: 250, menuAlign: 'left', debounceInterval: 0 });


function safelyCall(fn) {
  if (fn) {for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {args[_key - 1] = arguments[_key];}
    fn.apply(void 0, args);
    return true;
  }
  return false;
}

function mapResult(result, fn) {
  return result.values.map(function (value, i) {
    var info = result.infos && result.infos[i];
    return fn(value, info, i);
  });
}

function renderValue(value, info) {
  return info;
}

function renderItem(value, info, state) {
  return info;
}

function isFunction(fn) /*: boolean %checks */{
  return typeof fn === 'function';
}var _default =

ComboBoxRenderer;exports["default"] = _default;