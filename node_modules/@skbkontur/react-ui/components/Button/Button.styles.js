"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var Emotion_1 = require("../../lib/theming/Emotion");
var Button_module_less_1 = tslib_1.__importDefault(require("./Button.module.css"));
var Mixins_1 = require("../../lib/styles/Mixins");
var Button_mixins_1 = require("./Button.mixins");
var jsClasses = {
  root: function root(t) {
    return Emotion_1.css(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["\n      ", ";\n      ", ";\n\n      width: 100%;\n      text-align: center;\n      color: ", ";\n      border-radius: ", ";\n    "], ["\n      ", ";\n      ", ";\n\n      width: 100%;\n      text-align: center;\n      color: ", ";\n      border-radius: ", ";\n    "])), Mixins_1.resetButton(), Mixins_1.resetText(), t.textColorDefault, t.btnBorderRadius);
  },
  warning: function warning(t) {
    return Emotion_1.css(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["\n      .", ":not(.", ") & {\n        box-shadow: 0 0 0 2px ", ";\n      }\n    "], ["\n      .", ":not(.", ") & {\n        box-shadow: 0 0 0 2px ", ";\n      }\n    "])), Button_module_less_1["default"].root, Button_module_less_1["default"].link, t.borderColorWarning);
  },
  error: function error(t) {
    return Emotion_1.css(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["\n      .", ":not(.", ") & {\n        box-shadow: 0 0 0 2px ", ";\n      }\n      .", " .", ".", " & {\n        background: ", ";\n      }\n    "], ["\n      .", ":not(.", ") & {\n        box-shadow: 0 0 0 2px ", ";\n      }\n      .", " .", ".", " & {\n        background: ", ";\n      }\n    "])), Button_module_less_1["default"].root, Button_module_less_1["default"].link, t.borderColorError, Button_module_less_1["default"].wrap, Button_module_less_1["default"].root, Button_module_less_1["default"].link, t.errorSecondary);
  },
  sizeSmall: function sizeSmall(t) {
    return Emotion_1.css(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["\n      border-radius: ", ";\n\n      ", ";\n\n      .", " {\n        right: ", ";\n        height: ", ";\n        width: ", ";\n        border-radius: ", ";\n      }\n\n      .", " {\n        left: ", ";\n      }\n    "], ["\n      border-radius: ", ";\n\n      ",
    ";\n\n      .", " {\n        right: ", ";\n        height: ", ";\n        width: ", ";\n        border-radius: ", ";\n      }\n\n      .", " {\n        left: ", ";\n      }\n    "])), t.btnSmallBorderRadius, Button_mixins_1.buttonSizeMixin(t.btnFontSizeSmall, t.controlHeightSmall, t.btnHeightShift, t.controlLineHeightSmall, t.btnPaddingXSmall, t.btnPaddingYSmall), Button_module_less_1["default"].arrow, t.btnSmallArrowRight, t.btnSmallArrowLength, t.btnSmallArrowLength, t.btnSmallArrowBorderRadius, Button_module_less_1["default"].arrow_left, t.btnSmallArrowLeft);
  },
  sizeMedium: function sizeMedium(t) {
    return Emotion_1.css(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject(["\n      ", ";\n\n      .", " {\n        transform: ", ";\n      }\n\n      .", " {\n        left: ", ";\n      }\n\n      .", ".", "::before {\n        left: ", ";\n      }\n    "], ["\n      ",
    ";\n\n      .", " {\n        transform: ", ";\n      }\n\n      .", " {\n        left: ", ";\n      }\n\n      .", ".", "::before {\n        left: ", ";\n      }\n    "])), Button_mixins_1.buttonSizeMixin(t.btnFontSizeMedium, t.controlHeightMedium, t.btnHeightShift, t.controlLineHeightMedium, t.btnPaddingXMedium, t.btnPaddingYMedium), Button_module_less_1["default"].arrow, t.btnMediumArrowTransform, Button_module_less_1["default"].arrow_left, t.btnMediumArrowLeft, Button_module_less_1["default"].arrow_left, Button_module_less_1["default"].arrow_loading, t.btnMediumArrowLeftLoadingLeft);
  },
  sizeLarge: function sizeLarge(t) {
    return Emotion_1.css(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject(["\n      ", ";\n\n      .", " {\n        transform: ", ";\n      }\n\n      .", " {\n        left: ", ";\n      }\n\n      .", ".", "::before {\n        background: ", ";\n      }\n    "], ["\n      ",
    ";\n\n      .", " {\n        transform: ", ";\n      }\n\n      .", " {\n        left: ", ";\n      }\n\n      .", ".", "::before {\n        background: ", ";\n      }\n    "])), Button_mixins_1.buttonSizeMixin(t.btnFontSizeLarge, t.controlHeightLarge, t.btnHeightShift, t.controlLineHeightLarge, t.btnPaddingXLarge, t.btnPaddingYLarge), Button_module_less_1["default"].arrow, t.btnLargeArrowTransform, Button_module_less_1["default"].arrow_left, t.btnLargeArrowLeft, Button_module_less_1["default"].arrow, Button_module_less_1["default"].arrow_loading, t.btnLargeArrowBg);
  },
  link: function link(t) {
    return Emotion_1.css(templateObject_7 || (templateObject_7 = tslib_1.__makeTemplateObject(["\n      &.", " {\n        color: ", ";\n        border-radius: ", ";\n\n        &:hover {\n          color: ", ";\n          text-decoration: ", ";\n        }\n        &:active {\n          color: ", ";\n        }\n      }\n    "], ["\n      &.", " {\n        color: ", ";\n        border-radius: ", ";\n\n        &:hover {\n          color: ", ";\n          text-decoration: ", ";\n        }\n        &:active {\n          color: ", ";\n        }\n      }\n    "])), Button_module_less_1["default"].link, t.linkColor, t.btnLinkBorderRadius, t.linkHoverColor, t.linkHoverTextDecoration, t.linkActiveColor);
  },
  focus: function focus(t) {
    return Emotion_1.css(templateObject_8 || (templateObject_8 = tslib_1.__makeTemplateObject(["\n      .", "& {\n        color: ", ";\n        text-decoration: ", ";\n      }\n\n      &.", ":not(.", "):not(.", "):not(.", ") {\n        border: ", ";\n\n        &,\n        &:hover,\n        &:active,\n        &.", ",\n        &.", " {\n          box-shadow: inset 0 0 0 1px ", ", 0 0 0 ", " ", ";\n\n          &.", ",\n          &.", " {\n            box-shadow: inset 0 0 0 1px ", ";\n          }\n\n          .", " {\n            box-shadow: inset -1px 1px 0 0 ", ", 2px -2px 0 0 ", ";\n\n            &.", " {\n              box-shadow: inset -1px 1px 0 0 ", ", 2px -2px 0 0 ", ";\n            }\n\n            &.", " {\n              box-shadow: inset -1px 1px 0 0 ", ", 2px -2px 0 0 ", ";\n            }\n          }\n        }\n      }\n    "], ["\n      .", "& {\n        color: ", ";\n        text-decoration: ", ";\n      }\n\n      &.", ":not(.", "):not(.", "):not(.", ") {\n        border: ", ";\n\n        &,\n        &:hover,\n        &:active,\n        &.", ",\n        &.", " {\n          box-shadow: inset 0 0 0 1px ", ", 0 0 0 ", " ", ";\n\n          &.", ",\n          &.", " {\n            box-shadow: inset 0 0 0 1px ", ";\n          }\n\n          .", " {\n            box-shadow: inset -1px 1px 0 0 ", ", 2px -2px 0 0 ", ";\n\n            &.", " {\n              box-shadow: inset -1px 1px 0 0 ", ", 2px -2px 0 0 ", ";\n            }\n\n            &.", " {\n              box-shadow: inset -1px 1px 0 0 ", ", 2px -2px 0 0 ", ";\n            }\n          }\n        }\n      }\n    "])), Button_module_less_1["default"].link, t.linkColor, t.linkHoverTextDecoration, Button_module_less_1["default"].root, Button_module_less_1["default"].disabled, Button_module_less_1["default"].loading, Button_module_less_1["default"].link, t.btnFocusBorder, Button_module_less_1["default"].active, Button_module_less_1["default"].checked, t.outlineColorFocus, t.btnFocusShadowWidth, t.borderColorFocus, Button_module_less_1["default"].warningRoot, Button_module_less_1["default"].errorRoot, t.outlineColorFocus, Button_module_less_1["default"].arrow, t.outlineColorFocus, t.borderColorFocus, Button_module_less_1["default"].arrow_warning, t.outlineColorFocus, t.borderColorWarning, Button_module_less_1["default"].arrow_error, t.outlineColorFocus, t.borderColorError);
  },
  disabled: function disabled(t) {
    return Emotion_1.css(templateObject_9 || (templateObject_9 = tslib_1.__makeTemplateObject(["\n      .", " .", "&:not(.", ") {\n        background: ", ";\n        color: ", ";\n        box-shadow: ", ";\n\n        .", " {\n          background: ", ";\n          box-shadow: ", ";\n\n          &.", " {\n            box-shadow: 2px -2px 0 0 ", ";\n          }\n\n          &.", " {\n            box-shadow: 2px -2px 0 0 ", ";\n          }\n        }\n      }\n\n      .", " &.", ".", " {\n        color: ", ";\n      }\n    "], ["\n      .", " .", "&:not(.", ") {\n        background: ", ";\n        color: ", ";\n        box-shadow: ", ";\n\n        .", " {\n          background: ", ";\n          box-shadow: ", ";\n\n          &.", " {\n            box-shadow: 2px -2px 0 0 ", ";\n          }\n\n          &.", " {\n            box-shadow: 2px -2px 0 0 ", ";\n          }\n        }\n      }\n\n      .", " &.", ".", " {\n        color: ", ";\n      }\n    "])), Button_module_less_1["default"].wrap, Button_module_less_1["default"].root, Button_module_less_1["default"].link, t.btnDisabledBg, t.btnDisabledTextColor, t.btnDisabledShadow, Button_module_less_1["default"].arrow, t.btnDisabledBg, t.btnDisabledShadowArrow, Button_module_less_1["default"].arrow_warning, t.borderColorWarning, Button_module_less_1["default"].arrow_error, t.borderColorError, Button_module_less_1["default"].wrap, Button_module_less_1["default"].root, Button_module_less_1["default"].link, t.linkDisabledColor);
  },
  arrow_warning: function arrow_warning(t) {
    return Emotion_1.css(templateObject_10 || (templateObject_10 = tslib_1.__makeTemplateObject(["\n      .", " .", " .", "& {\n        box-shadow: 2px -2px 0 0 ", ";\n      }\n    "], ["\n      .", " .", " .", "& {\n        box-shadow: 2px -2px 0 0 ", ";\n      }\n    "])), Button_module_less_1["default"].wrap, Button_module_less_1["default"].root, Button_module_less_1["default"].arrow, t.borderColorWarning);
  },
  arrow_error: function arrow_error(t) {
    return Emotion_1.css(templateObject_11 || (templateObject_11 = tslib_1.__makeTemplateObject(["\n      .", " .", " .", "& {\n        box-shadow: 2px -2px 0 0 ", ";\n      }\n    "], ["\n      .", " .", " .", "& {\n        box-shadow: 2px -2px 0 0 ", ";\n      }\n    "])), Button_module_less_1["default"].wrap, Button_module_less_1["default"].root, Button_module_less_1["default"].arrow, t.borderColorError);
  },
  "default": function _default(t) {
    return Emotion_1.css(templateObject_12 || (templateObject_12 = tslib_1.__makeTemplateObject(["\n      ", ";\n\n      ", ";\n\n      ", ";\n\n      &.", ".", " {\n        &,\n        &:not(.", "):hover {\n          .", " {\n            box-shadow: ", ";\n          }\n          .", " {\n            box-shadow: ", ";\n          }\n        }\n      }\n    "], ["\n      ",
    ";\n\n      ",
    ";\n\n      ",
    ";\n\n      &.", ".", " {\n        &,\n        &:not(.", "):hover {\n          .", " {\n            box-shadow: ", ";\n          }\n          .", " {\n            box-shadow: ", ";\n          }\n        }\n      }\n    "])), Button_mixins_1.buttonUseMixin(t.btnDefaultBg, t.btnDefaultBgStart, t.btnDefaultBgEnd, t.btnDefaultBgArrowStart, t.btnDefaultBgArrowEnd, t.btnDefaultShadow, t.btnDefaultShadowArrow, t.btnDefaultShadowArrowLeft, t.btnDefaultTextColor, t.btnDefaultBorder), Button_mixins_1.buttonHoverMixin(t.btnDefaultHoverBg, t.btnDefaultHoverBgStart, t.btnDefaultHoverBgEnd, t.btnDefaultHoverBgStart, t.btnDefaultHoverBgEnd, t.btnDefaultHoverShadow, t.btnDefaultHoverShadowArrow, t.btnDefaultHoverShadowArrowLeft, t.btnDefaultHoverBorder), Button_mixins_1.buttonActiveMixin(t.btnDefaultActiveBg, t.btnDefaultActiveBg, t.btnDefaultActiveBg, t.btnDefaultActiveShadow, t.btnDefaultActiveShadowArrow, t.btnDefaultActiveShadowArrowLeft), Button_module_less_1["default"].root, Button_module_less_1["default"].checked, Button_module_less_1["default"].focus, Button_module_less_1["default"].arrow, t.btnDefaultCheckedShadowArrow, Button_module_less_1["default"].arrow_left, t.btnDefaultCheckedShadowArrow);
  },
  primary: function primary(t) {
    return Emotion_1.css(templateObject_13 || (templateObject_13 = tslib_1.__makeTemplateObject(["\n      ", ";\n\n      ", ";\n\n      ", ";\n    "], ["\n      ",
    ";\n\n      ",
    ";\n\n      ",
    ";\n    "])), Button_mixins_1.buttonUseMixin(t.btnPrimaryBg, t.btnPrimaryBgStart, t.btnPrimaryBgEnd, t.btnPrimaryBgArrowStart, t.btnPrimaryBgArrowEnd, t.btnPrimaryShadow, t.btnPrimaryShadowArrow, t.btnPrimaryShadowArrowLeft, t.btnPrimaryTextColor, t.btnPrimaryBorder), Button_mixins_1.buttonHoverMixin(t.btnPrimaryHoverBg, t.btnPrimaryHoverBgStart, t.btnPrimaryHoverBgEnd, t.btnPrimaryHoverBgStart, t.btnPrimaryHoverBgEnd, t.btnPrimaryHoverShadow, t.btnPrimaryHoverShadowArrow, t.btnPrimaryHoverShadowArrowLeft, t.btnPrimaryHoverBorder), Button_mixins_1.buttonActiveMixin(t.btnPrimaryActiveBg, t.btnPrimaryActiveBg, t.btnPrimaryActiveBg, t.btnPrimaryActiveShadow, t.btnPrimaryActiveShadowArrow, t.btnPrimaryActiveShadowArrowLeft));
  },
  success: function success(t) {
    return Emotion_1.css(templateObject_14 || (templateObject_14 = tslib_1.__makeTemplateObject(["\n      ", ";\n\n      ", ";\n\n      ", ";\n    "], ["\n      ",
    ";\n\n      ",
    ";\n\n      ",
    ";\n    "])), Button_mixins_1.buttonUseMixin(t.btnSuccessBg, t.btnSuccessBgStart, t.btnSuccessBgEnd, t.btnSuccessBgArrowStart, t.btnSuccessBgArrowEnd, t.btnSuccessShadow, t.btnSuccessShadowArrow, t.btnSuccessShadowArrowLeft, t.btnSuccessTextColor, t.btnSuccessBorder), Button_mixins_1.buttonHoverMixin(t.btnSuccessHoverBg, t.btnSuccessHoverBgStart, t.btnSuccessHoverBgEnd, t.btnSuccessHoverBgStart, t.btnSuccessHoverBgEnd, t.btnSuccessHoverShadow, t.btnSuccessHoverShadowArrow, t.btnSuccessHoverShadowArrowLeft, t.btnSuccessHoverBorder), Button_mixins_1.buttonActiveMixin(t.btnSuccessActiveBg, t.btnSuccessActiveBg, t.btnSuccessActiveBg, t.btnSuccessActiveShadow, t.btnSuccessActiveShadowArrow, t.btnSuccessActiveShadowArrowLeft));
  },
  danger: function danger(t) {
    return Emotion_1.css(templateObject_15 || (templateObject_15 = tslib_1.__makeTemplateObject(["\n      ", ";\n\n      ", ";\n\n      ", ";\n    "], ["\n      ",
    ";\n\n      ",
    ";\n\n      ",
    ";\n    "])), Button_mixins_1.buttonUseMixin(t.btnDangerBg, t.btnDangerBgStart, t.btnDangerBgEnd, t.btnDangerBgArrowStart, t.btnDangerBgArrowEnd, t.btnDangerShadow, t.btnDangerShadowArrow, t.btnDangerShadowArrowLeft, t.btnDangerTextColor, t.btnDangerBorder), Button_mixins_1.buttonHoverMixin(t.btnDangerHoverBg, t.btnDangerHoverBgStart, t.btnDangerHoverBgEnd, t.btnDangerHoverBgStart, t.btnDangerHoverBgEnd, t.btnDangerHoverShadow, t.btnDangerHoverShadowArrow, t.btnDangerHoverShadowArrowLeft, t.btnDangerHoverBorder), Button_mixins_1.buttonActiveMixin(t.btnDangerActiveBg, t.btnDangerActiveBg, t.btnDangerActiveBg, t.btnDangerActiveShadow, t.btnDangerActiveShadowArrow, t.btnDangerActiveShadowArrowLeft));
  },
  pay: function pay(t) {
    return Emotion_1.css(templateObject_16 || (templateObject_16 = tslib_1.__makeTemplateObject(["\n      ", ";\n\n      ", ";\n\n      ", ";\n    "], ["\n      ",
    ";\n\n      ",
    ";\n\n      ",
    ";\n    "])), Button_mixins_1.buttonUseMixin(t.btnPayBg, t.btnPayBgStart, t.btnPayBgEnd, t.btnPayBgArrowStart, t.btnPayBgArrowEnd, t.btnPayShadow, t.btnPayShadowArrow, t.btnPayShadowArrowLeft, t.btnPayTextColor, t.btnPayBorder), Button_mixins_1.buttonHoverMixin(t.btnPayHoverBg, t.btnPayHoverBgStart, t.btnPayHoverBgEnd, t.btnPayHoverBgStart, t.btnPayHoverBgEnd, t.btnPayHoverShadow, t.btnPayHoverShadowArrow, t.btnPayHoverShadowArrowLeft, t.btnPayHoverBorder), Button_mixins_1.buttonActiveMixin(t.btnPayActiveBg, t.btnPayActiveBg, t.btnPayActiveBg, t.btnPayActiveShadow, t.btnPayActiveShadowArrow, t.btnPayActiveShadowArrowLeft));
  },
  checked: function checked(t) {
    return Emotion_1.css(templateObject_17 || (templateObject_17 = tslib_1.__makeTemplateObject(["\n      &.", " {\n        &,\n        &:not(.", "):hover {\n          background: ", ";\n          color: ", ";\n          box-shadow: ", ";\n\n          .", " {\n            background: ", ";\n            box-shadow: ", ";\n          }\n\n          .", " {\n            background: ", ";\n            box-shadow: ", ";\n          }\n        }\n\n        &:not(.", "):hover {\n          border-color: ", ";\n        }\n      }\n    "], ["\n      &.", " {\n        &,\n        &:not(.", "):hover {\n          background: ", ";\n          color: ", ";\n          box-shadow: ", ";\n\n          .", " {\n            background: ", ";\n            box-shadow: ", ";\n          }\n\n          .", " {\n            background: ", ";\n            box-shadow: ", ";\n          }\n        }\n\n        &:not(.", "):hover {\n          border-color: ", ";\n        }\n      }\n    "])), Button_module_less_1["default"].root, Button_module_less_1["default"].focus, t.btnCheckedBg, t.btnCheckedTextColor, t.btnCheckedShadow, Button_module_less_1["default"].arrow, t.btnCheckedBg, t.btnCheckedShadowArrow, Button_module_less_1["default"].arrow_left, t.btnCheckedBg, t.btnCheckedShadowArrowLeft, Button_module_less_1["default"].focus, t.btnCheckedHoverBorderColor);
  },
  wrap: function wrap(t) {
    return Emotion_1.css(templateObject_18 || (templateObject_18 = tslib_1.__makeTemplateObject(["\n      padding: ", ";\n    "], ["\n      padding: ", ";\n    "])), t.btnWrapPadding);
  } };

exports["default"] = jsClasses;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10, templateObject_11, templateObject_12, templateObject_13, templateObject_14, templateObject_15, templateObject_16, templateObject_17, templateObject_18;