"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var warning_1 = tslib_1.__importDefault(require("warning"));
var Token_module_less_1 = tslib_1.__importDefault(require("./Token.module.css"));
var TokenRemoveIcon_1 = tslib_1.__importDefault(require("./TokenRemoveIcon"));
var utils_1 = require("../../lib/utils");
var Emotion_1 = require("../../lib/theming/Emotion");
var Token_styles_1 = tslib_1.__importStar(require("./Token.styles"));
var ThemeConsumer_1 = require("../ThemeConsumer");
var deprecatedColorNames = {
  'i-default': 'defaultIdle',
  'a-default': 'defaultActive',
  'l-gray': 'grayIdle',
  'd-gray': 'grayActive',
  'l-blue': 'blueIdle',
  'd-blue': 'blueActive',
  'l-green': 'greenIdle',
  'd-green': 'greenActive',
  'l-yellow': 'yellowIdle',
  'd-yellow': 'yellowActive',
  'l-red': 'redIdle',
  'd-red': 'redActive' };

var Token = /** @class */function (_super) {
  tslib_1.__extends(Token, _super);
  function Token() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.onRemoveClick = function (event) {
      var _a = _this.props,disabled = _a.disabled,_b = _a.onRemove,onRemove = _b === void 0 ? utils_1.emptyHandler : _b;
      if (disabled) {
        event.preventDefault();
        return;
      }
      onRemove(event);
    };
    return _this;
  }
  Token.prototype.render = function () {
    var _this = this;
    return React.createElement(ThemeConsumer_1.ThemeConsumer, null, function (theme) {
      _this.theme = theme;
      return _this.renderMain();
    });
  };
  Token.prototype.renderMain = function () {
    var _a;
    var _b = this.props,children = _b.children,isActive = _b.isActive,colors = _b.colors,error = _b.error,warning = _b.warning,disabled = _b.disabled,_c = _b.onClick,onClick = _c === void 0 ? utils_1.emptyHandler : _c,_d = _b.onMouseEnter,onMouseEnter = _d === void 0 ? utils_1.emptyHandler : _d,_e = _b.onMouseLeave,onMouseLeave = _e === void 0 ? utils_1.emptyHandler : _e,_f = _b.onFocus,onFocus = _f === void 0 ? utils_1.emptyHandler : _f,_g = _b.onBlur,onBlur = _g === void 0 ? utils_1.emptyHandler : _g;
    if (process.env.NODE_ENV !== 'production' && colors) {
      warning_1["default"](!deprecatedColorNames[colors.idle], "Color name '" + colors.idle + "' has been deprecated, use '" + deprecatedColorNames[colors.idle] + "' instead");
      if (colors.active) {
        warning_1["default"](!deprecatedColorNames[colors.active], "Color name '" + colors.active + "' has been deprecated, use '" + deprecatedColorNames[colors.active] + "' instead");
      }
    }
    var theme = this.theme;
    var tokenClassName = disabled ? Token_styles_1.jsTokenColors.defaultDisabled(theme) : Token_styles_1.jsTokenColors.defaultIdle(theme);
    var activeTokenClassName = disabled ? Token_styles_1.jsTokenColors.defaultDisabled(theme) : Token_styles_1.jsTokenColors.defaultActive(theme);
    if (!disabled && colors) {
      var idleClassName = deprecatedColorNames[colors.idle] || colors.idle;
      tokenClassName = Token_styles_1.jsTokenColors[idleClassName](theme);
      var activeClassName = colors.active ? deprecatedColorNames[colors.active] || colors.active : idleClassName;
      activeTokenClassName = Token_styles_1.jsTokenColors[activeClassName](theme);
    }
    var tokenClassNames = Emotion_1.cx(Token_module_less_1["default"].token, tokenClassName, (_a = {},
    _a[Token_module_less_1["default"].disabled] = !!disabled,
    _a[activeTokenClassName] = !!isActive,
    _a[Token_module_less_1["default"].warning] = !!warning,
    _a[Token_module_less_1["default"].error] = !!error,
    _a[Token_styles_1["default"].disabled(theme)] = !!disabled,
    _a));
    return React.createElement("div", { className: tokenClassNames, onClick: onClick, onMouseEnter: onMouseEnter, onMouseLeave: onMouseLeave, onFocus: onFocus, onBlur: onBlur },
    React.createElement("span", { className: Token_module_less_1["default"].text }, children),
    React.createElement(TokenRemoveIcon_1["default"], { className: Token_module_less_1["default"].removeIcon, onClick: this.onRemoveClick }));
  };
  Token.__KONTUR_REACT_UI__ = 'Token';
  return Token;
}(React.Component);
exports["default"] = Token;