import * as React from 'react';
import { LocaleProviderProps } from './LocaleProvider';
import { LocaleHelper } from './LocaleHelper';
import { LangCodes, LocaleControls } from './types';
export declare function locale<C>(controlName: keyof LocaleControls, localeHelper: LocaleHelper<C>): <T extends new (...args: any[]) => React.Component<{}, {}, any>>(constructor: T) => {
    new (...args: any[]): {
        controlName: "Spinner" | "TokenInput" | "ComboBox" | "TopBar" | "Select" | "Paging" | "Logotype" | "DatePicker" | "Fias";
        localeHelper: LocaleHelper<C>;
        _localeContext: LocaleProviderProps;
        render(): JSX.Element;
        readonly locale: C;
        readonly langCode: LangCodes;
        context: any;
        setState<K extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<{}>) => {} | Pick<{}, K> | null) | Pick<{}, K> | null, callback?: (() => void) | undefined): void;
        forceUpdate(callBack?: (() => void) | undefined): void;
        readonly props: Readonly<{
            children?: React.ReactNode;
        }> & Readonly<{}>;
        state: Readonly<{}>;
        refs: {
            [key: string]: React.ReactInstance;
        };
    };
} & T;
