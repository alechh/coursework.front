"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var constants_1 = require("./constants");
var LocaleProvider_1 = require("./LocaleProvider");
function locale(controlName, localeHelper) {
  return function (constructor) {
    var LocaleDecorator = /** @class */function (_super) {
      tslib_1.__extends(class_1, _super);
      function class_1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.controlName = controlName;
        _this.localeHelper = localeHelper;
        _this._localeContext = {};
        return _this;
      }
      class_1.prototype.render = function () {
        var _this = this;
        return React.createElement(LocaleProvider_1.LocaleConsumer, null, function (localeContext) {
          _this._localeContext = localeContext;
          return _super.prototype.render.call(_this);
        });
      };
      Object.defineProperty(class_1.prototype, "locale", {
        get: function get() {
          if (this._localeContext === undefined) {
            return {};
          }
          var langCode = this._localeContext.langCode;
          var localeFromContext = this._localeContext.locale && this._localeContext.locale[this.controlName];
          return Object.assign({}, this.localeHelper.get(langCode), localeFromContext);
        },
        enumerable: true,
        configurable: true });

      Object.defineProperty(class_1.prototype, "langCode", {
        get: function get() {
          return this._localeContext.langCode || constants_1.defaultLangCode;
        },
        enumerable: true,
        configurable: true });

      return class_1;
    }(constructor);
    Object.defineProperty(LocaleDecorator, 'name', { value: constructor.name });
    return LocaleDecorator;
  };
}
exports.locale = locale;