{"version":3,"sources":["DatePickerOld.js"],"names":["INPUT_PASS_PROPS","autoFocus","disabled","warning","error","withMask","placeholder","size","onInput","onKeyDown","onKeyPress","onKeyUp","onMouseEnter","onMouseLeave","onMouseOver","DatePickerOld","props","context","value","Date","formatDate","setState","textValue","_focused","opened","onFocus","close","_handleSubmit","onBlur","input","blur","state","date","parseDate","newDate","getDateValue","onUnexpectedInput","onChange","target","isIE","setTimeout","ref","handleBlur","focus","selectAll","handleFocus","render","menuAlign","width","isDate","picker","minYear","maxYear","handlePick","className","styles","root","iconSize","openClassName","openButton","openButtonDisabled","getInputRef","handleChange","e","preventDefault","componentWillReceiveProps","newValue","oldValue","React","Component","PropTypes","bool","number","oneOf","oneOfType","string","instanceOf","func","isNaN","getTime","day","getUTCDate","toString","padStart","month","getUTCMonth","getUTCFullYear","str","withCorrection"],"mappings":"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","sourcesContent":["// @flow\r\nimport * as React from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CalendarIcon from '@skbkontur/react-icons/Calendar';\r\nimport filterProps from '../filterProps';\r\nimport Picker from './Picker';\r\nimport DateInput from './DateInput';\r\nimport dateParser from './dateParser';\r\nimport DropdownContainer from '../DropdownContainer/DropdownContainer';\r\nimport RenderLayer from '../RenderLayer';\r\nimport Center from '../Center';\r\nimport warning from 'warning';\r\nimport styles from './DatePickerOld.module.less';\r\nimport { isIE } from '../ensureOldIEClassName';\r\n\r\nconst INPUT_PASS_PROPS = {\r\n  autoFocus: true,\r\n  disabled: true,\r\n  warning: true,\r\n  error: true,\r\n  withMask: true,\r\n  placeholder: true,\r\n  size: true,\r\n\r\n  onInput: true,\r\n  onKeyDown: true,\r\n  onKeyPress: true,\r\n  onKeyUp: true,\r\n\r\n  onMouseEnter: true,\r\n  onMouseLeave: true,\r\n  onMouseOver: true,\r\n};\r\n\r\n/**\r\n * @deprecated Компонент устарел и будет удален в версии 2.0.0. Используйте актульный [DatePicker](#/Components/DatePicker).\r\n */\r\nclass DatePickerOld extends React.Component {\r\n  static __KONTUR_REACT_UI__ = 'DatePickerOld';\r\n  static __REACT_UI_COMPONENT_NAME__ = 'DatePicker';\r\n\r\n  static propTypes = {\r\n    disabled: PropTypes.bool,\r\n\r\n    error: PropTypes.bool,\r\n\r\n    /**\r\n     * Максимальный год в селекте для года.\r\n     */\r\n    maxYear: PropTypes.number,\r\n\r\n    menuAlign: PropTypes.oneOf(['left', 'right']),\r\n\r\n    /**\r\n     * Минимальный год в селекте для года.\r\n     */\r\n    minYear: PropTypes.number,\r\n\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\r\n\r\n    warning: PropTypes.bool,\r\n\r\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n\r\n    /**\r\n     * Маска ввода 99.99.9999\r\n     */\r\n    withMask: PropTypes.bool,\r\n\r\n    onBlur: PropTypes.func,\r\n\r\n    onChange: PropTypes.func,\r\n\r\n    onFocus: PropTypes.func,\r\n\r\n    onInput: PropTypes.func,\r\n\r\n    onKeyDown: PropTypes.func,\r\n\r\n    onKeyPress: PropTypes.func,\r\n\r\n    onKeyUp: PropTypes.func,\r\n\r\n    onMouseEnter: PropTypes.func,\r\n\r\n    onMouseLeave: PropTypes.func,\r\n\r\n    onMouseOver: PropTypes.func,\r\n\r\n    /**\r\n     * Если не получилось распарсить дату,\r\n     * можно получить содержимое инпута\r\n     * (например, для валидации снаружи)\r\n     */\r\n    onUnexpectedInput: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    minYear: 1900,\r\n    maxYear: 2100,\r\n    width: 120,\r\n    withMask: true,\r\n    onUnexpectedInput: () => null,\r\n  };\r\n\r\n  input;\r\n\r\n  _focusSubscription;\r\n  _focused;\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    const textValue = typeof props.value === 'string' ? props.value : formatDate(props.value);\r\n\r\n    this.state = {\r\n      opened: false,\r\n      textValue,\r\n    };\r\n\r\n    warning(\r\n      false,\r\n      'DatePickerOld is deprecated and will be removed in v2.0.0. Please, use the actual DatePicker instead.',\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  blur() {\r\n    this.handleBlur();\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   */\r\n  focus() {\r\n    this.input.selectAll();\r\n    this.handleFocus();\r\n  }\r\n\r\n  render() {\r\n    const { opened } = this.state;\r\n    const { value, menuAlign, width } = this.props;\r\n\r\n    const date = isDate(value) ? value : null;\r\n    let picker = null;\r\n    if (opened) {\r\n      picker = (\r\n        <DropdownContainer getParent={() => findDOMNode(this)} offsetY={2} align={menuAlign}>\r\n          <Picker value={date} minYear={this.props.minYear} maxYear={this.props.maxYear} onPick={this.handlePick} />\r\n        </DropdownContainer>\r\n      );\r\n    }\r\n\r\n    const className = classNames({\r\n      [styles.root]: true,\r\n      [this.props.className || '']: true,\r\n    });\r\n    const iconSize = this.props.size === 'large' ? 16 : 14;\r\n    const openClassName = classNames({\r\n      [styles.openButton]: true,\r\n      [styles.openButtonDisabled]: this.props.disabled,\r\n    });\r\n    return (\r\n      <RenderLayer active={opened}>\r\n        <label className={className} style={{ width }}>\r\n          <DateInput\r\n            {...filterProps(this.props, INPUT_PASS_PROPS)}\r\n            getInputRef={this.getInputRef}\r\n            opened={opened}\r\n            value={this.state.textValue}\r\n            onFocus={this.handleFocus}\r\n            onChange={this.handleChange}\r\n            onSubmit={this._handleSubmit}\r\n            onBlur={this.handleBlur}\r\n          />\r\n          {picker}\r\n          <Center className={openClassName} onMouseDown={e => e.preventDefault()}>\r\n            <CalendarIcon size={iconSize} />\r\n          </Center>\r\n        </label>\r\n      </RenderLayer>\r\n    );\r\n  }\r\n\r\n  componentWillReceiveProps({ value: newValue }) {\r\n    const { value: oldValue } = this.props;\r\n    if (newValue && +newValue !== +oldValue) {\r\n      const textValue = typeof newValue === 'string' ? newValue : formatDate(newValue);\r\n\r\n      this.setState({ textValue });\r\n    }\r\n  }\r\n\r\n  getValue = () => {\r\n    const value = this.props.value;\r\n    if (value instanceof Date) {\r\n      return formatDate(value);\r\n    }\r\n    if (typeof value === 'string') {\r\n      return value;\r\n    }\r\n    return '';\r\n  };\r\n\r\n  handleChange = value => {\r\n    this.setState({ textValue: value });\r\n  };\r\n\r\n  handleFocus = () => {\r\n    if (this._focused) {\r\n      return;\r\n    }\r\n\r\n    this._focused = true;\r\n\r\n    this.setState({ opened: true });\r\n\r\n    if (this.props.onFocus) {\r\n      this.props.onFocus();\r\n    }\r\n  };\r\n\r\n  handleBlur = () => {\r\n    if (!this._focused) {\r\n      return;\r\n    }\r\n\r\n    this._focused = false;\r\n\r\n    this.close(false);\r\n\r\n    this._handleSubmit();\r\n\r\n    if (this.props.onBlur) {\r\n      this.props.onBlur();\r\n    }\r\n    this.input.blur();\r\n  };\r\n\r\n  _handleSubmit = () => {\r\n    const value = this.state.textValue;\r\n    const date = parseDate(value);\r\n    const newDate = date === null ? getDateValue(value, this.props.onUnexpectedInput) : date;\r\n\r\n    const textValue = typeof newDate === 'string' ? newDate : formatDate(newDate);\r\n\r\n    this.setState({ textValue });\r\n\r\n    if (this.props.onChange) {\r\n      this.props.onChange({ target: { value: newDate } }, newDate);\r\n    }\r\n  };\r\n\r\n  handlePick = date => {\r\n    if (this.props.onChange) {\r\n      this.props.onChange({ target: { value: date } }, date);\r\n    }\r\n    this._focused = false;\r\n    this.close(false);\r\n    if (this.props.onBlur) {\r\n      this.props.onBlur();\r\n    }\r\n    if (isIE) {\r\n      // NOTE In IE can't blur input with mask https://github.com/sanniassin/react-input-mask/issues/73\r\n      setTimeout(() => this.input.blur());\r\n    } else {\r\n      this.input.blur();\r\n    }\r\n  };\r\n\r\n  handlePickerClose = () => {\r\n    this.close(false);\r\n  };\r\n\r\n  close(focus) {\r\n    this.setState({ opened: false }, () => {\r\n      if (focus) {\r\n        this.input.focus();\r\n      }\r\n    });\r\n  }\r\n\r\n  getInputRef = ref => {\r\n    this.input = ref;\r\n  };\r\n}\r\n\r\nconst getDateValue = (value, onUnexpectedInput) => {\r\n  if (value == null) {\r\n    return null;\r\n  }\r\n  if (value instanceof Date) {\r\n    return value;\r\n  }\r\n  const newDate = parseDate(value, false);\r\n  if (newDate) {\r\n    return newDate;\r\n  }\r\n  if (onUnexpectedInput) {\r\n    return onUnexpectedInput(value);\r\n  }\r\n  return null;\r\n};\r\n\r\nfunction isDate(date) /* : boolean %checks */ {\r\n  return date instanceof Date && !isNaN(date.getTime());\r\n}\r\n\r\nfunction formatDate(date) {\r\n  if (!date || !isDate(date)) {\r\n    return '';\r\n  }\r\n\r\n  const day = date\r\n    .getUTCDate()\r\n    .toString()\r\n    .padStart(2, '0');\r\n  const month = (date.getUTCMonth() + 1).toString().padStart(2, '0');\r\n  return `${day}.${month}.${date.getUTCFullYear()}`;\r\n}\r\n\r\nfunction parseDate(str, withCorrection) {\r\n  const date = dateParser(str, withCorrection);\r\n  return isDate(date) ? date : null;\r\n}\r\n\r\nexport default DatePickerOld;\r\n"]}