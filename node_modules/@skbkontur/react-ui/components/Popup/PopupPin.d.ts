import * as React from 'react';
import * as PropTypes from 'prop-types';
import { Nullable } from '../../typings/utility-types';
interface Props {
    backgroundColor: string;
    borderColor: string;
    borderWidth: number;
    offset: number;
    popupElement: Nullable<HTMLElement>;
    popupPosition: string;
    size: number;
}
export default class PopupPin extends React.Component<Props> {
    static __KONTUR_REACT_UI__: string;
    static propTypes: {
        /**
         * Цвет фон пина
         */
        backgroundColor: PropTypes.Requireable<string>;
        /**
         * Цвет границы пина
         */
        borderColor: PropTypes.Requireable<string>;
        /**
         * Ширина границы пина
         */
        borderWidth: PropTypes.Requireable<number>;
        /**
         * Смещение пина от края попапа. Край задаётся в пропе position вторым словом
         */
        offset: PropTypes.Requireable<number>;
        /**
         * Ссылка на попап
         */
        popupElement: PropTypes.Requireable<any>;
        /**
         * Позиция поапа, по которой будет вычеслено положение пина
         */
        popupPosition: PropTypes.Requireable<string>;
        /**
         * Сторона пина без учёта границы.
         * Пин представляет собой равносторонний треугольник, высота от попапа
         * до "носика" пина будет соответствовать формуле (size* √3)/2
         */
        size: PropTypes.Requireable<number>;
    };
    render(): JSX.Element | null;
    private _getPopupOppositeDirection;
    private _getWrapperStyle;
    private _getOuterStyle;
    private _getInnerStyle;
    private _getPinOptions;
    private _getPinTopCoordinate;
    private _getPinLeftCoordinate;
}
export {};
