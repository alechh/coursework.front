"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
require("../../ensureOldIEClassName");
var InputLikeText_module_less_1 = tslib_1.__importDefault(require("./InputLikeText.module.css"));
var Emotion_1 = require("../../../lib/theming/Emotion");
var Input_module_less_1 = tslib_1.__importDefault(require("../../Input/Input.module.css"));
var Input_styles_1 = tslib_1.__importDefault(require("../../Input/Input.styles"));
var ThemeConsumer_1 = require("../../ThemeConsumer");
var InputLikeText = /** @class */function (_super) {
  tslib_1.__extends(InputLikeText, _super);
  function InputLikeText() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.state = {
      blinking: false,
      focused: false };

    _this.node = null;
    _this.ref = function (el) {
      if (_this.props.innerRef) {
        _this.props.innerRef(el);
      }
      _this.node = el;
    };
    _this.handleFocus = function (event) {
      if (_this.props.disabled) {
        return;
      }
      _this.setState({ focused: true });
      if (_this.props.onFocus) {
        _this.props.onFocus(event);
      }
    };
    _this.handleBlur = function (event) {
      _this.setState({ focused: false });
      if (_this.props.onBlur) {
        _this.props.onBlur(event);
      }
    };
    return _this;
  }
  /**
     * @public
     */
  InputLikeText.prototype.focus = function () {
    if (this.node) {
      this.node.focus();
    }
  };
  /**
      * @public
      */
  InputLikeText.prototype.blur = function () {
    if (this.node) {
      this.node.blur();
    }
  };
  /**
      * @public
      */
  InputLikeText.prototype.blink = function () {
    var _this = this;
    this.setState({ blinking: true }, function () {
      _this.blinkTimeout = window.setTimeout(function () {return _this.setState({ blinking: false });}, 150);
    });
  };
  InputLikeText.prototype.getNode = function () {
    return this.node;
  };
  InputLikeText.prototype.componentWillUnmount = function () {
    if (this.blinkTimeout) {
      clearTimeout(this.blinkTimeout);
    }
  };
  InputLikeText.prototype.render = function () {
    var _this = this;
    return React.createElement(ThemeConsumer_1.ThemeConsumer, null, function (theme) {
      _this.theme = theme;
      return _this.renderMain();
    });
  };
  InputLikeText.prototype.renderMain = function () {
    var _a;
    var _b = this.props,innerRef = _b.innerRef,tabIndex = _b.tabIndex,placeholder = _b.placeholder,align = _b.align,borderless = _b.borderless,width = _b.width,children = _b.children,error = _b.error,warning = _b.warning,onChange = _b.onChange,disabled = _b.disabled,prefix = _b.prefix,suffix = _b.suffix,leftIcon = _b.leftIcon,rightIcon = _b.rightIcon,rest = tslib_1.__rest(_b, ["innerRef", "tabIndex", "placeholder", "align", "borderless", "width", "children", "error", "warning", "onChange", "disabled", "prefix", "suffix", "leftIcon", "rightIcon"]);
    var _c = this.state,focused = _c.focused,blinking = _c.blinking;
    var className = Emotion_1.cx(Input_module_less_1["default"].root, Input_styles_1["default"].root(this.theme), this.getSizeClassName(), (_a = {},
    _a[Input_module_less_1["default"].focus] = focused,
    _a[Input_module_less_1["default"].warning] = !!warning,
    _a[Input_module_less_1["default"].error] = !!error,
    _a[Input_module_less_1["default"].borderless] = !!borderless,
    _a[Input_module_less_1["default"].disabled] = !!disabled,
    _a[Input_styles_1["default"].focus(this.theme)] = focused,
    _a[Input_styles_1["default"].blink(this.theme)] = !!blinking,
    _a[Input_styles_1["default"].warning(this.theme)] = !!warning,
    _a[Input_styles_1["default"].error(this.theme)] = !!error,
    _a[Input_styles_1["default"].disabled(this.theme)] = !!disabled,
    _a));
    return React.createElement("span", tslib_1.__assign({}, rest, { className: className, style: { width: width, textAlign: align }, tabIndex: disabled ? undefined : 0, onFocus: this.handleFocus, onBlur: this.handleBlur, ref: this.ref }),
    React.createElement("span", { className: Input_module_less_1["default"].sideContainer },
    this.renderLeftIcon(),
    prefix && React.createElement("span", { className: Input_styles_1["default"].prefix(this.theme) }, prefix)),
    React.createElement("span", { className: Input_module_less_1["default"].wrapper },
    React.createElement("span", { className: Emotion_1.cx(Input_module_less_1["default"].input, InputLikeText_module_less_1["default"].input, Input_styles_1["default"].input(this.theme)) }, children),
    this.renderPlaceholder()),
    React.createElement("span", { className: Emotion_1.cx(Input_module_less_1["default"].sideContainer, Input_module_less_1["default"].rightContainer) },
    suffix && React.createElement("span", { className: Input_styles_1["default"].suffix(this.theme) }, suffix),
    this.renderRightIcon()));
  };
  InputLikeText.prototype.renderPlaceholder = function () {
    var _a = this.props,children = _a.children,placeholder = _a.placeholder;
    if (!children && placeholder) {
      return React.createElement("span", { className: Emotion_1.cx(Input_module_less_1["default"].placeholder, Input_styles_1["default"].placeholder(this.theme)) }, placeholder);
    }
    return null;
  };
  InputLikeText.prototype.getSizeClassName = function () {
    switch (this.props.size) {
      case 'large':
        return Input_styles_1["default"].sizeLarge(this.theme);
      case 'medium':
        return Input_styles_1["default"].sizeMedium(this.theme);
      case 'small':
      default:
        return Input_styles_1["default"].sizeSmall(this.theme);}

  };
  InputLikeText.prototype.renderLeftIcon = function () {
    return this.renderIcon(this.props.leftIcon, Input_module_less_1["default"].leftIcon);
  };
  InputLikeText.prototype.renderRightIcon = function () {
    return this.renderIcon(this.props.rightIcon, Input_module_less_1["default"].rightIcon);
  };
  InputLikeText.prototype.renderIcon = function (icon, className) {
    if (!icon) {
      return null;
    }
    if (icon instanceof Function) {
      return React.createElement("span", { className: className }, icon());
    }
    return React.createElement("span", { className: Emotion_1.cx(className, Input_module_less_1["default"].useDefaultColor, Input_styles_1["default"].useDefaultColor(this.theme)) }, icon);
  };
  InputLikeText.__KONTUR_REACT_UI__ = 'InputLikeText';
  InputLikeText.defaultProps = {
    size: 'small' };

  return InputLikeText;
}(React.Component);
exports["default"] = InputLikeText;