import * as React from 'react';
import { DefaultizeProps } from '../../lib/utils';
export declare type StatePropsCombinations<P, S> = Array<{
    props?: Partial<P>;
    state?: Partial<S>;
}>;
export declare type StateType<C> = C extends React.Component<any, infer S> | React.ComponentClass<any, infer S> ? S : never;
export interface ComponentTableProps<C, P, S> {
    rows?: StatePropsCombinations<P, S>;
    cols?: StatePropsCombinations<P, S>;
    presetProps: DefaultizeProps<C, P>;
    presetState: Partial<S>;
    Component: C;
}
export declare class ComponentTable<T extends React.Component<any, any, any>, C extends React.ComponentType<any>, P extends React.ComponentProps<C>> extends React.Component<ComponentTableProps<C extends React.ComponentClass<P, any> ? React.ClassType<P, T, C> : C, P, StateType<C>>> {
    static defaultProps: {
        presetProps: {};
        presetState: {};
    };
    render(): JSX.Element;
}
