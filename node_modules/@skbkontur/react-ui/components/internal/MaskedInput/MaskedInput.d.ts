import * as React from 'react';
export interface MaskedInputProps extends React.InputHTMLAttributes<HTMLInputElement> {
    mask: string;
    maskChar?: string | null;
    formatChars?: {
        [key: string]: string;
    };
    alwaysShowMask?: boolean;
    hasLeftIcon?: boolean;
    hasRightIcon?: boolean;
    onUnexpectedInput?: () => void;
}
interface MaskedInputState {
    value: string;
    emptyValue: string;
    focused: boolean;
}
export default class MaskedInput extends React.Component<MaskedInputProps, MaskedInputState> {
    static __KONTUR_REACT_UI__: string;
    input: HTMLInputElement | null;
    private theme;
    private reactInputMask;
    constructor(props: MaskedInputProps);
    componentDidMount(): void;
    componentWillReceiveProps(nextProps: MaskedInputProps): void;
    render(): JSX.Element;
    private renderMain;
    private getValue;
    private refInput;
    private refMaskedInput;
    private handleChange;
    private handleFocus;
    private handleBlur;
    private preprocess;
    private isMaskVisible;
    private handleUnexpectedInput;
}
export {};
