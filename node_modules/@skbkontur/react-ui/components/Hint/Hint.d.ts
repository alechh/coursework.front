import * as React from 'react';
import { MouseEventType } from '../../typings/event-types';
export interface HintProps {
    children?: React.ReactNode;
    manual?: boolean;
    maxWidth?: React.CSSProperties['maxWidth'];
    onMouseEnter?: (event: MouseEventType) => void;
    onMouseLeave?: (event: MouseEventType) => void;
    opened?: boolean;
    pos: 'top' | 'right' | 'bottom' | 'left' | 'top left' | 'top center' | 'top right' | 'bottom left' | 'bottom center' | 'bottom right' | 'left top' | 'left middle' | 'left bottom' | 'right top' | 'right middle' | 'right bottom';
    text: React.ReactNode;
    disableAnimations: boolean;
    useWrapper: boolean;
}
export interface HintState {
    opened: boolean;
}
declare class Hint extends React.Component<HintProps, HintState> {
    static __KONTUR_REACT_UI__: string;
    static defaultProps: {
        pos: string;
        manual: boolean;
        opened: boolean;
        maxWidth: number;
        disableAnimations: boolean;
        useWrapper: boolean;
    };
    state: HintState;
    private timer;
    componentWillReceiveProps(nextProps: HintProps): void;
    componentWillUnmount(): void;
    render(): JSX.Element;
    private renderContent;
    private getPositions;
    private handleMouseEnter;
    private handleMouseLeave;
    private open;
}
export default Hint;
