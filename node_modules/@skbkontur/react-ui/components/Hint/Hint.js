"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var Popup_1 = tslib_1.__importDefault(require("../Popup"));
var HintBox_module_less_1 = tslib_1.__importDefault(require("./HintBox.module.css"));
var Emotion_1 = require("../../lib/theming/Emotion");
var HINT_BACKGROUND_COLOR = 'rgba(51, 51, 51, 0.8)';
var HINT_BORDER_COLOR = 'transparent';
var POPUP_MARGIN = 15;
var PIN_OFFSET = 8;
var Positions = [
'top center',
'top left',
'top right',
'bottom center',
'bottom left',
'bottom right',
'left middle',
'left top',
'left bottom',
'right middle',
'right top',
'right bottom'];

var Hint = /** @class */function (_super) {
  tslib_1.__extends(Hint, _super);
  function Hint() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.state = {
      opened: _this.props.manual ? !!_this.props.opened : false };

    _this.timer = null;
    _this.getPositions = function () {
      return Positions.filter(function (x) {return x.startsWith(_this.props.pos);});
    };
    _this.handleMouseEnter = function (e) {
      if (!_this.props.manual && !_this.timer) {
        _this.timer = window.setTimeout(_this.open, 400);
      }
      if (_this.props.onMouseEnter) {
        _this.props.onMouseEnter(e);
      }
    };
    _this.handleMouseLeave = function (e) {
      if (!_this.props.manual && _this.timer) {
        clearTimeout(_this.timer);
        _this.timer = null;
        _this.setState({ opened: false });
      }
      if (_this.props.onMouseLeave) {
        _this.props.onMouseLeave(e);
      }
    };
    _this.open = function () {
      _this.setState({ opened: true });
    };
    return _this;
  }
  Hint.prototype.componentWillReceiveProps = function (nextProps) {
    if (!nextProps.manual) {
      return;
    }
    if (nextProps.opened !== this.props.opened) {
      this.setState({ opened: !!nextProps.opened });
    }
  };
  Hint.prototype.componentWillUnmount = function () {
    if (this.timer) {
      clearTimeout(this.timer);
      this.timer = null;
    }
  };
  Hint.prototype.render = function () {
    return React.createElement(Popup_1["default"], { hasPin: true, margin: POPUP_MARGIN, opened: this.state.opened, anchorElement: this.props.children, positions: this.getPositions(), backgroundColor: HINT_BACKGROUND_COLOR, borderColor: HINT_BORDER_COLOR, disableAnimations: this.props.disableAnimations, pinOffset: PIN_OFFSET, onMouseEnter: this.handleMouseEnter, onMouseLeave: this.handleMouseLeave, useWrapper: this.props.useWrapper }, this.renderContent());
  };
  Hint.prototype.renderContent = function () {
    var _a;
    if (!this.props.text) {
      return null;
    }
    var _b = this.props,pos = _b.pos,maxWidth = _b.maxWidth;
    var className = Emotion_1.cx((_a = {},
    _a[HintBox_module_less_1["default"].content] = true,
    _a[HintBox_module_less_1["default"].contentCenter] = pos === 'top' || pos === 'bottom',
    _a));
    return React.createElement("div", { className: className, style: { maxWidth: maxWidth } }, this.props.text);
  };
  Hint.__KONTUR_REACT_UI__ = 'Hint';
  Hint.defaultProps = {
    pos: 'top',
    manual: false,
    opened: false,
    maxWidth: 200,
    disableAnimations: false,
    useWrapper: true };

  return Hint;
}(React.Component);
exports["default"] = Hint;