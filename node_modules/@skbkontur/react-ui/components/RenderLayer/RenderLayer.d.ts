import * as React from 'react';
export interface RenderLayerProps {
    children: JSX.Element;
    onClickOutside?: (e: Event) => void;
    onFocusOutside?: (e: Event) => void;
    active?: boolean;
}
declare class RenderLayer extends React.Component<RenderLayerProps> {
    static __KONTUR_REACT_UI__: string;
    static propTypes: {
        active(props: RenderLayerProps, propName: "children" | "active" | "onClickOutside" | "onFocusOutside", componentName: string): Error | undefined;
    };
    static defaultProps: {
        active: boolean;
    };
    private focusOutsideListenerToken;
    componentDidMount(): void;
    componentDidUpdate(prevProps: RenderLayerProps): void;
    componentWillUnmount(): void;
    render(): JSX.Element;
    private attachListeners;
    private detachListeners;
    private getDomNode;
    private handleFocusOutside;
    private handleNativeDocClick;
}
export default RenderLayer;
