"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var identifiers_1 = require("../../lib/events/keyboard/identifiers");
var ButtonItem_1 = tslib_1.__importDefault(require("./ButtonItem"));
var DropdownMenu_1 = tslib_1.__importDefault(require("../DropdownMenu"));
var TopBarDropdown = /** @class */function (_super) {
  tslib_1.__extends(TopBarDropdown, _super);
  function TopBarDropdown() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.dropdownMenu = null;
    _this.open = function () {
      if (_this.dropdownMenu) {
        _this.dropdownMenu.open();
      }
    };
    _this.close = function () {
      if (_this.dropdownMenu) {
        _this.dropdownMenu.close();
      }
    };
    _this.refDropdownMenu = function (ref) {return _this.dropdownMenu = ref;};
    _this.renderButton = function (captionProps) {
      var handleKeyDown = function handleKeyDown(event) {
        _this.handleKeyDown(event, captionProps.openMenu);
      };
      return React.createElement(ButtonItem_1["default"], { active: captionProps.opened, icon: _this.props.icon, minWidth: _this.props.minWidth ? _this.props.minWidth : undefined, tabIndex: 0, use: _this.props.use, onClick: captionProps.toggleMenu, onKeyDown: handleKeyDown }, _this.props.label);
    };
    _this.handleKeyDown = function (e, openMenu) {
      if (identifiers_1.someKeys(identifiers_1.isKeyEnter, identifiers_1.isKeySpace, identifiers_1.isKeyArrowVertical)(e)) {
        e.preventDefault();
        openMenu(true);
      }
    };
    return _this;
  }
  TopBarDropdown.prototype.render = function () {
    return React.createElement(DropdownMenu_1["default"], tslib_1.__assign({}, this.props, { ref: this.refDropdownMenu, caption: this.renderButton }), this.props.children);
  };
  TopBarDropdown.__KONTUR_REACT_UI__ = 'TopBarDropdown';
  TopBarDropdown.defaultProps = {
    use: 'default' };

  return TopBarDropdown;
}(React.Component);
exports["default"] = TopBarDropdown;