"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var ArrowChevronDown_1 = tslib_1.__importDefault(require("@skbkontur/react-icons/ArrowChevronDown"));
var TopBarDropdown_1 = tslib_1.__importDefault(require("./TopBarDropdown"));
var TopBar_module_less_1 = tslib_1.__importDefault(require("./TopBar.module.css"));
var Organizations = /** @class */function (_super) {
  tslib_1.__extends(Organizations, _super);
  function Organizations() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.state = {
      captionWhiteSpace: 'normal',
      minWidth: null };

    _this._getCaptionRef = function (element) {
      _this._caption = element;
    };
    _this._getCommentRef = function (element) {
      _this._comment = element;
    };
    return _this;
  }
  Organizations.prototype.componentDidMount = function () {
    this._recalculateWidth();
  };
  Organizations.prototype.componentDidUpdate = function (prevProps) {
    if (prevProps.caption !== this.props.caption) {
      this._recalculateWidth();
    }
  };
  Organizations.prototype.render = function () {
    var _a = this.props,caption = _a.caption,comment = _a.comment;
    var title = React.createElement("div", null,
    React.createElement("span", { className: TopBar_module_less_1["default"].organizationsTitle, style: {
        paddingRight: this._comment ? this._comment.offsetWidth + 30 : undefined } },

    React.createElement("span", { ref: this._getCaptionRef }, caption),
    comment && React.createElement("span", { className: TopBar_module_less_1["default"].organizationsComment, ref: this._getCommentRef }, comment),
    React.createElement("span", { className: TopBar_module_less_1["default"].organizationsArrow },
    React.createElement(ArrowChevronDown_1["default"], { color: "#aaa", size: 14 }))),
    React.createElement("div", { className: TopBar_module_less_1["default"].organizationsTitleDummy, style: { whiteSpace: this.state.captionWhiteSpace } },
    React.createElement("span", null, caption),
    comment && React.createElement("span", { className: TopBar_module_less_1["default"].organizationsCommentDummy }, comment)));
    return React.createElement(TopBarDropdown_1["default"], tslib_1.__assign({}, this.props, { label: title, minWidth: this.state.minWidth }), this.props.children);
  };
  Organizations.prototype._recalculateWidth = function () {
    var commentWidth = this._comment ? this._comment.offsetWidth : 0;
    if (!this._caption) {
      return;
    }
    // 360 is minWidth from guides. Apply it when content is bigger.
    // 315 is because of 15px left padding and 30px arrow.
    if (this._caption.offsetWidth + commentWidth > 315) {
      this.setState({
        captionWhiteSpace: 'normal',
        minWidth: 360 });

    } else
    {
      this.setState({
        captionWhiteSpace: 'nowrap',
        minWidth: null });

    }
  };
  Organizations.__KONTUR_REACT_UI__ = 'TopBarOrganizations';
  return Organizations;
}(React.Component);
exports["default"] = Organizations;