"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var PropTypes = tslib_1.__importStar(require("prop-types"));
var EyeOpened_1 = tslib_1.__importDefault(require("@skbkontur/react-icons/EyeOpened"));
var EyeClosed_1 = tslib_1.__importDefault(require("@skbkontur/react-icons/EyeClosed"));
var identifiers_1 = require("../../lib/events/keyboard/identifiers");
var KeyboardEventCodes_1 = tslib_1.__importDefault(require("../../lib/events/keyboard/KeyboardEventCodes"));
var Input_1 = tslib_1.__importDefault(require("../Input"));
var PasswordInputFallback_1 = tslib_1.__importDefault(require("./PasswordInputFallback"));
var ensureOldIEClassName_1 = require("../ensureOldIEClassName");
var PasswordInput_module_less_1 = tslib_1.__importDefault(require("./PasswordInput.module.css"));
/**
                                                                                                   * **DRAFT**
                                                                                                   */
var PasswordInput = /** @class */function (_super) {
  tslib_1.__extends(PasswordInput, _super);
  function PasswordInput() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.state = {
      visible: false,
      capsLockEnabled: false };

    /**
                                 * @public
                                 */
    _this.focus = function () {
      if (_this.input) {
        _this.input.focus();
      }
    };
    /**
        * @public
        */
    _this.blur = function () {
      _this.handleBlur();
    };
    _this.handleKeyPress = function (e) {
      var _a = _this.props,onKeyPress = _a.onKeyPress,detectCapsLock = _a.detectCapsLock;
      if (onKeyPress) {
        onKeyPress(e);
      }
      if (!detectCapsLock) {
        return;
      }
      var capsLockEnabled = e.getModifierState(KeyboardEventCodes_1["default"].CapsLock);
      _this.setState({ capsLockEnabled: capsLockEnabled });
    };
    _this.handleKeydown = function (e) {
      var _a = _this,_b = _a.props,detectCapsLock = _b.detectCapsLock,onKeyDown = _b.onKeyDown,capsLockEnabled = _a.state.capsLockEnabled;
      if (onKeyDown) {
        onKeyDown(e);
      }
      if (!detectCapsLock) {
        return;
      }
      if (identifiers_1.isKeyCapsLock(e) && capsLockEnabled != null) {
        _this.setState({ capsLockEnabled: !capsLockEnabled });
      }
    };
    _this.handleToggleVisibility = function () {
      _this.setState(function (prevState) {return { visible: !prevState.visible };}, _this.handleFocus);
    };
    _this.handleFocus = function () {
      if (_this.input) {
        _this.input.focus();
      }
    };
    _this.handleBlur = function () {
      if (_this.input) {
        _this.input.blur();
      }
    };
    _this.renderEye = function () {
      var capsLockEnabled = _this.state.capsLockEnabled;
      return React.createElement("span", { className: PasswordInput_module_less_1["default"].iconWrapper },
      capsLockEnabled && React.createElement("span", { className: PasswordInput_module_less_1["default"].capsLockDetector }),
      React.createElement("span", { "data-tid": "PasswordInputEyeIcon", className: PasswordInput_module_less_1["default"].toggleVisibility, onClick: _this.handleToggleVisibility }, _this.state.visible ? React.createElement(EyeOpened_1["default"], { size: 14 }) : React.createElement(EyeClosed_1["default"], { size: 14 })));
    };
    _this.refInput = function (element) {
      _this.input = element;
    };
    return _this;
  }
  PasswordInput.prototype.componentWillMount = function () {
    if (this.props.detectCapsLock) {
      this.setState({ capsLockEnabled: null });
    }
    // @ts-ignore
    if (ensureOldIEClassName_1.isIE && !window.document.msCapsLockWarningOff) {
      // turns off default ie capslock warning
      // @ts-ignore
      window.document.msCapsLockWarningOff = true;
    }
  };
  PasswordInput.prototype.render = function () {
    return React.createElement("div", { className: PasswordInput_module_less_1["default"].root }, this.renderInput());
  };
  PasswordInput.prototype.renderInput = function () {
    var _a = this.props,detectCapsLock = _a.detectCapsLock,props = tslib_1.__rest(_a, ["detectCapsLock"]);
    var inputProps = tslib_1.__assign({}, props, { onKeyDown: this.handleKeydown, onKeyPress: this.handleKeyPress, rightIcon: this.renderEye() });
    if (ensureOldIEClassName_1.isIE && ensureOldIEClassName_1.ieVerison === 8) {
      return React.createElement(PasswordInputFallback_1["default"], tslib_1.__assign({ refInput: this.refInput, visible: this.state.visible }, inputProps));
    }
    return React.createElement(Input_1["default"], tslib_1.__assign({ ref: this.refInput, type: this.state.visible ? 'text' : 'password' }, inputProps));
  };
  PasswordInput.__KONTUR_REACT_UI__ = 'PasswordInput';
  PasswordInput.propTypes = {
    /**
                               * Включает CapsLock детектор
                               */
    detectCapsLock: PropTypes.bool };

  PasswordInput.defaultProps = {
    size: 'small' };

  return PasswordInput;
}(React.Component);
exports["default"] = PasswordInput;