import * as React from 'react';
import * as PropTypes from 'prop-types';
interface LogotypePropLocale {
    suffix: string;
    prefix: string;
}
export interface LogotypeProps {
    /**
     * Цвет логотипа в rgb, rgba, hex
     */
    color: string;
    component: React.ComponentType<any> | string;
    /**
     * Адрес ссылки
     */
    href: string;
    /**
     * Суффикс сервиса
     */
    suffix?: string;
    /**
     * Размер шрифта логотипа в пикселях.
     * @default 22
     */
    size: number;
    /**
     * Цвет логотипа Контура в rgb, rgba, hex
     */
    textColor: string;
    /**
     * Наличие виджета с продуктами
     */
    withWidget?: boolean;
    /**
     * нажатие по кнопке открытия виджета
     */
    onArrowClick?: React.MouseEventHandler<HTMLButtonElement>;
    /**
     * Словарь текстовых констант
     * @default { prefix: 'к', suffix: 'нтур' }
     */
    locale?: LogotypePropLocale;
}
declare class Logotype extends React.Component<LogotypeProps> {
    static __KONTUR_REACT_UI__: string;
    static propTypes: {
        color: PropTypes.Requireable<string>;
        href: PropTypes.Requireable<string>;
        suffix: PropTypes.Requireable<string>;
        size: PropTypes.Requireable<number>;
        textColor: PropTypes.Requireable<string>;
        withWidget: PropTypes.Requireable<boolean>;
        locale: PropTypes.Requireable<PropTypes.InferProps<{
            prefix: PropTypes.Requireable<string>;
            suffix: PropTypes.Requireable<string>;
        }>>;
    };
    static defaultProps: {
        color: string;
        size: number;
        textColor: string;
        component: string;
        href: string;
    };
    private theme;
    private readonly locale;
    private logoWrapper;
    private isWidgetInited;
    componentDidMount(): void;
    componentDidUpdate(): void;
    render(): JSX.Element;
    private renderMain;
    private refLogoWrapper;
    private handleNativeLogoClick;
    private initWidget;
}
export default Logotype;
