{"version":3,"sources":["KladrAPI.js"],"names":["kladrUrl","LIMIT","search","searchText","levels","parentCode","data","createQuery","prefix","parentKladr","limit","desiredAoLevels","strictSubordination","then","res","json","toJS","searchIndex","code","house","response","text","verify","req","method","body","JSON","stringify","toJSON","address","params","key","hasOwnProperty","push","encodeURIComponent","join","obj","Array","isArray","map","ret","charAt","toUpperCase","substr","toLowerCase"],"mappings":"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","sourcesContent":["// @flow\r\n\r\nimport fetch from '../../lib/net/fetch-cors';\r\n\r\nimport type { Address, VerifyResult } from './Types';\r\n\r\nconst kladrUrl = 'https://kladr.kontur.ru/v1/';\r\nconst LIMIT = 50;\r\n\r\nexport function search(searchText: string, levels: string, parentCode: ?string): Promise<Array<Address>> {\r\n  const data = createQuery({\r\n    prefix: searchText,\r\n    parentKladr: parentCode || '',\r\n    limit: LIMIT,\r\n    desiredAoLevels: levels,\r\n    strictSubordination: 'false',\r\n  });\r\n  return fetch(`${kladrUrl}suggest?${data}`)\r\n    .then(res => res.json())\r\n    .then(toJS);\r\n}\r\n\r\nexport function searchIndex(code: string, house: ?string) {\r\n  const data = createQuery({\r\n    code,\r\n    house: house || '',\r\n  });\r\n\r\n  return fetch(`${kladrUrl}kladr/index?${data}`).then(response => response.text());\r\n}\r\n\r\nexport function verify(req: Address): Promise<VerifyResult> {\r\n  return fetch(`${kladrUrl}verify/`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(toJSON({ address: req })),\r\n  })\r\n    .then(res => res.json())\r\n    .then(toJS);\r\n}\r\n\r\nfunction createQuery(data) {\r\n  const params = [];\r\n  for (const key in data) {\r\n    if (data.hasOwnProperty) {\r\n      params.push(`${key}=${encodeURIComponent(data[key])}`);\r\n    }\r\n  }\r\n  return params.join('&');\r\n}\r\n\r\nfunction toJSON(obj) {\r\n  if (Array.isArray(obj)) {\r\n    return obj.map(toJSON);\r\n  } else if (obj && typeof obj === 'object') {\r\n    const ret = {};\r\n    for (const key in obj) {\r\n      ret[key.charAt(0).toUpperCase() + key.substr(1)] = toJSON(obj[key]);\r\n    }\r\n    return ret;\r\n  }\r\n  return obj;\r\n}\r\n// eslint-disable-next-line flowtype/no-weak-types\r\nfunction toJS(obj): any {\r\n  if (Array.isArray(obj)) {\r\n    return obj.map(toJS);\r\n  } else if (obj && typeof obj === 'object') {\r\n    const ret = {};\r\n    for (const key in obj) {\r\n      ret[key.charAt(0).toLowerCase() + key.substr(1)] = toJS(obj[key]);\r\n    }\r\n    return ret;\r\n  }\r\n  return obj;\r\n}\r\n"]}