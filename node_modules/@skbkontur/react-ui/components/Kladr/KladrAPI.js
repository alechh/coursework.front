"use strict";exports.__esModule = true;exports.search = search;exports.searchIndex = searchIndex;exports.verify = verify;

var _fetchCors = _interopRequireDefault(require("../../lib/net/fetch-cors"));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { "default": obj };}



var kladrUrl = 'https://kladr.kontur.ru/v1/';
var LIMIT = 50;

function search(searchText, levels, parentCode) {
  var data = createQuery({
    prefix: searchText,
    parentKladr: parentCode || '',
    limit: LIMIT,
    desiredAoLevels: levels,
    strictSubordination: 'false' });

  return (0, _fetchCors["default"])(kladrUrl + "suggest?" + data).
  then(function (res) {return res.json();}).
  then(toJS);
}

function searchIndex(code, house) {
  var data = createQuery({
    code: code,
    house: house || '' });


  return (0, _fetchCors["default"])(kladrUrl + "kladr/index?" + data).then(function (response) {return response.text();});
}

function verify(req) {
  return (0, _fetchCors["default"])(kladrUrl + "verify/", {
    method: 'POST',
    body: JSON.stringify(toJSON({ address: req })) }).

  then(function (res) {return res.json();}).
  then(toJS);
}

function createQuery(data) {
  var params = [];
  for (var key in data) {
    if (data.hasOwnProperty) {
      params.push(key + "=" + encodeURIComponent(data[key]));
    }
  }
  return params.join('&');
}

function toJSON(obj) {
  if (Array.isArray(obj)) {
    return obj.map(toJSON);
  } else if (obj && typeof obj === 'object') {
    var ret = {};
    for (var key in obj) {
      ret[key.charAt(0).toUpperCase() + key.substr(1)] = toJSON(obj[key]);
    }
    return ret;
  }
  return obj;
}
// eslint-disable-next-line flowtype/no-weak-types
function toJS(obj) {
  if (Array.isArray(obj)) {
    return obj.map(toJS);
  } else if (obj && typeof obj === 'object') {
    var ret = {};
    for (var key in obj) {
      ret[key.charAt(0).toLowerCase() + key.substr(1)] = toJS(obj[key]);
    }
    return ret;
  }
  return obj;
}