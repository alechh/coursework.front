import { APIProvider, AddressResponse, SearchOptions, VerifyResponse, APIResult, FetchFn, FiasCountry } from '../types';
import { Address } from '../models/Address';
export declare class FiasAPI implements APIProvider {
    private baseUrl;
    private version?;
    private fetchFn;
    private static searchStopWords;
    private static createQuery;
    private static trimSearchText;
    private regionsPromise;
    constructor(baseUrl?: string, version?: string | undefined, fetchFn?: FetchFn);
    verify: (address: Address) => Promise<APIResult<VerifyResponse>>;
    search: ({ fiasId, searchText, field, parentFiasId, limit, fullAddress, directParent, }: SearchOptions) => Promise<APIResult<AddressResponse[]>>;
    searchCountry: (query: {
        prefix: string;
        limit?: number | undefined;
    }) => Promise<APIResult<FiasCountry[]>>;
    private send;
    private resolveFiasId;
    private searchAddressObject;
    private resolveAddress;
    private searchStead;
    private searchHouse;
    private searchRoom;
    private searchRegions;
}
export default FiasAPI;
