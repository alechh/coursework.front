"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var APIResultFactory_1 = require("./APIResultFactory");
var addresses = require('./data.json');
var MockAPI = /** @class */function () {
  function MockAPI() {
    var _this = this;
    this.verify = function (address) {return tslib_1.__awaiter(_this, void 0, void 0, function () {
        return tslib_1.__generator(this, function (_a) {
          return [2 /*return*/, Promise.resolve(APIResultFactory_1.APIResultFactory.success({
            address: {},
            isValid: true }))];

        });
      });};
    this.search = function (_a) {
      var fiasId = _a.fiasId,searchText = _a.searchText,field = _a.field,parentFiasId = _a.parentFiasId,limit = _a.limit,fullAddress = _a.fullAddress;
      return tslib_1.__awaiter(_this, void 0, void 0, function () {
        var data;
        return tslib_1.__generator(this, function (_b) {
          data = [];
          if (fiasId) {
            data = [addresses[0]];
          }
          if (searchText) {
            if (field) {
              data = this.getAddresses(field, fullAddress);
            } else
            {
              data = addresses;
            }
          }
          return [2 /*return*/, Promise.resolve(APIResultFactory_1.APIResultFactory.success(data))];
        });
      });
    };
    this.searchCountry = function (options) {return tslib_1.__awaiter(_this, void 0, void 0, function () {
        return tslib_1.__generator(this, function (_a) {
          return [2 /*return*/, Promise.resolve(APIResultFactory_1.APIResultFactory.success([]))];
        });
      });};
    this.getAddresses = function (field, fullAddress) {
      return addresses.filter(function (address) {return address[field];}).map(function (address) {
        var _a;
        return fullAddress ?
        address : (
        _a = {},
        _a[field] = address[field],
        _a);
      });
    };
  }
  return MockAPI;
}();
exports.MockAPI = MockAPI;
exports["default"] = MockAPI;