"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var warning_1 = tslib_1.__importDefault(require("warning"));
var Link_1 = tslib_1.__importDefault(require("../Link"));
var LocaleProvider_1 = tslib_1.__importDefault(require("../LocaleProvider"));
var decorators_1 = require("../LocaleProvider/decorators");
var locale_1 = require("./locale");
var types_1 = require("./types");
var Edit_1 = tslib_1.__importDefault(require("@skbkontur/react-icons/Edit"));
var FiasModal_1 = tslib_1.__importDefault(require("./FiasModal"));
var FiasForm_1 = tslib_1.__importDefault(require("./Form/FiasForm"));
var FiasAPI_1 = require("./api/FiasAPI");
var Address_1 = require("./models/Address");
var lodash_isequal_1 = tslib_1.__importDefault(require("lodash.isequal"));
var Logger_1 = require("./logger/Logger");
var Emotion_1 = require("../../lib/theming/Emotion");
var Fias_styles_1 = tslib_1.__importDefault(require("./Fias.styles"));
var ThemeConsumer_1 = require("../ThemeConsumer");
function deepMerge(dst) {
  var src = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    src[_i - 1] = arguments[_i];
  }
  src.forEach(function (obj) {
    for (var k in obj) {
      if (dst[k] != null && typeof obj[k] === 'object') {
        dst[k] = deepMerge(dst[k], obj[k]);
      } else
      {
        dst[k] = obj[k];
      }
    }
  });
  return dst;
}
var Fias = /** @class */function (_super) {
  tslib_1.__extends(Fias, _super);
  function Fias(props) {
    var _this = _super.call(this, props) || this;
    _this.state = {
      opened: false,
      address: new Address_1.Address(),
      locale: _this.getLocaleMix(),
      fieldsSettings: _this.fieldsSettings };

    _this.api = _this.props.api || new FiasAPI_1.FiasAPI(_this.props.baseUrl, _this.props.version);
    _this.form = null;
    _this.componentDidMount = function () {
      _this.updateLocale();
      _this.init();
      warning_1["default"](_this.props.locale === undefined, "[Fias]: Prop 'locale' has been deprecated. See 'LocaleProvider'");
    };
    _this.componentDidUpdate = function (prevProps, prevState) {
      if (!lodash_isequal_1["default"](prevProps.value, _this.props.value)) {
        _this.updateAddress();
      }
      var nextLocale = _this.getLocaleMix(_this.locale);
      if (!lodash_isequal_1["default"](prevState.locale, nextLocale)) {
        _this.updateLocale(nextLocale);
      }
      if (!lodash_isequal_1["default"](prevProps.fieldsSettings, _this.props.fieldsSettings)) {
        _this.updateFieldsSettings();
      }
    };
    _this.init = function () {return tslib_1.__awaiter(_this, void 0, void 0, function () {
        var address;
        return tslib_1.__generator(this, function (_a) {
          switch (_a.label) {
            case 0:return [4 /*yield*/, this.updateAddress()];
            case 1:
              address = _a.sent();
              if (this.props.onInit) {
                this.props.onInit(address.getValue(this.isFieldVisible(types_1.ExtraFields.postalcode)));
              }
              return [2 /*return*/];}

        });
      });};
    _this.updateAddress = function () {return tslib_1.__awaiter(_this, void 0, void 0, function () {
        var address;
        return tslib_1.__generator(this, function (_a) {
          switch (_a.label) {
            case 0:return [4 /*yield*/, Address_1.Address.getAddress(this.api, this.props.value, this.state.fieldsSettings)];
            case 1:
              address = _a.sent();
              this.setState({
                address: address });

              return [2 /*return*/, address];}

        });
      });};
    _this.updateLocale = function (nextLocale) {
      if (nextLocale === void 0) {nextLocale = _this.getLocaleMix();}
      _this.setState({ locale: nextLocale });
    };
    _this.updateFieldsSettings = function () {
      _this.setState({
        fieldsSettings: _this.fieldsSettings });

    };
    _this.handleOpen = function () {
      _this.setState({ opened: true });
    };
    _this.handleClose = function () {
      _this.setState({ opened: false });
      var onClose = _this.props.onClose;
      if (onClose) {
        onClose();
      }
    };
    _this.handleSave = function () {return tslib_1.__awaiter(_this, void 0, void 0, function () {
        var address;
        return tslib_1.__generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              if (!this.form) return [3 /*break*/, 2];
              return [4 /*yield*/, this.form.submit()];
            case 1:
              address = _a.sent();
              if (address.hasErrors && this.props.allowNotVerified === false) {
                return [2 /*return*/];
              }
              this.handleChange(address);
              _a.label = 2;
            case 2:
              this.handleClose();
              return [2 /*return*/];}

        });
      });};
    _this.handleChange = function (address) {
      if (_this.props.onChange) {
        _this.props.onChange(address.getValue(_this.isFieldVisible(types_1.ExtraFields.postalcode)));
      }
    };
    _this.refForm = function (element) {
      _this.form = element;
    };
    if (!props.baseUrl && !props.api) {
      Logger_1.Logger.log(Logger_1.Logger.warnings.baseUrlOrApiIsRequired);
    }
    return _this;
  }
  Object.defineProperty(Fias.prototype, "fieldsSettings", {
    get: function get() {
      var _a;
      var _b = this.props,userSettings = _b.fieldsSettings,countrySelector = _b.countrySelector;
      // TODO: implement deepMerge with clone
      var defaultSettings = Address_1.Address.ALL_FIELDS.reduce(function (settings, field) {
        var _a;
        return tslib_1.__assign({}, settings, (_a = {}, _a[field] = {
          visible: true },
        _a));
      }, {});
      return deepMerge(defaultSettings, (_a = {},
      _a[types_1.ExtraFields.postalcode] = {
        visible: Boolean(countrySelector) },

      _a), userSettings);
    },
    enumerable: true,
    configurable: true });

  Fias.prototype.isFieldVisible = function (field) {
    return Address_1.Address.isFieldVisible(field, this.state.fieldsSettings);
  };
  Fias.prototype.render = function () {
    var _this = this;
    return React.createElement(ThemeConsumer_1.ThemeConsumer, null, function (theme) {
      _this.theme = theme;
      return _this.renderMain();
    });
  };
  Fias.prototype.renderMain = function () {
    var _a;
    var _b = this.props,showAddressText = _b.showAddressText,label = _b.label,icon = _b.icon,error = _b.error,warning = _b.warning,feedback = _b.feedback;
    var _c = this.state,opened = _c.opened,address = _c.address;
    var linkText = label || (address.isEmpty ? this.state.locale.addressFill : this.state.locale.addressEdit);
    var validation = (error || warning) && feedback ? React.createElement("span", { className: Emotion_1.cx((_a = {}, _a[Fias_styles_1["default"].error(this.theme)] = !!error, _a[Fias_styles_1["default"].warning(this.theme)] = !!warning, _a)) }, feedback) : null;
    return React.createElement(LocaleProvider_1["default"], { locale: { Fias: this.state.locale } },
    React.createElement("div", null,
    showAddressText && React.createElement("span", null, address.getFullText(this.isFieldVisible(types_1.ExtraFields.postalcode))),
    !this.props.readonly && React.createElement("div", null,
    React.createElement(Link_1["default"], { icon: icon, onClick: this.handleOpen }, linkText)),
    validation,
    opened && this.renderModal()));
  };
  Fias.prototype.getLocaleMix = function (localeFromContext) {
    if (localeFromContext === void 0) {localeFromContext = locale_1.FiasLocaleHelper.get();}
    return tslib_1.__assign({}, localeFromContext, this.props.locale);
  };
  Fias.prototype.renderModal = function () {
    var _a = this.state,address = _a.address,fieldsSettings = _a.fieldsSettings;
    var _b = this.props,search = _b.search,limit = _b.limit,formValidation = _b.formValidation,countrySelector = _b.countrySelector;
    return React.createElement(FiasModal_1["default"], { onClose: this.handleClose, onSave: this.handleSave },
    React.createElement(FiasForm_1["default"], { ref: this.refForm, address: address, api: this.api, search: search, limit: limit, validationLevel: formValidation, fieldsSettings: fieldsSettings, countrySelector: countrySelector }));
  };
  Fias.__KONTUR_REACT_UI__ = 'Fias';
  Fias.defaultProps = {
    showAddressText: true,
    error: false,
    warning: false,
    readonly: false,
    search: false,
    icon: React.createElement(Edit_1["default"], null),
    allowNotVerified: true,
    fieldsSettings: {},
    countrySelector: false };

  Fias = tslib_1.__decorate([
  decorators_1.locale('Fias', locale_1.FiasLocaleHelper)],
  Fias);
  return Fias;
}(React.Component);
exports.Fias = Fias;
exports["default"] = Fias;