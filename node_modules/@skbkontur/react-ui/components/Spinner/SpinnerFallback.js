"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var PropTypes = tslib_1.__importStar(require("prop-types"));
var settings_1 = require("./settings");
var fallback_circle_png_1 = tslib_1.__importDefault(require("./fallback_circle.png"));
var fallback_circle_dimmed_png_1 = tslib_1.__importDefault(require("./fallback_circle_dimmed.png"));
var fallback_cloud_big_png_1 = tslib_1.__importDefault(require("./fallback_cloud_big.png"));
var fallback_cloud_normal_png_1 = tslib_1.__importDefault(require("./fallback_cloud_normal.png"));
var Spinner_module_less_1 = tslib_1.__importDefault(require("./Spinner.module.css"));
var SpinnerFallback = /** @class */function (_super) {
  tslib_1.__extends(SpinnerFallback, _super);
  function SpinnerFallback() {
    var _a, _b;
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.state = {
      frame: 0 };

    _this._mounted = false;
    _this._framesCount = (_a = {},
    _a[settings_1.types.mini] = 180,
    _a[settings_1.types.normal] = 60,
    _a[settings_1.types.big] = 60,
    _a.dimmed = 60,
    _a);
    _this._imageUrls = (_b = {},
    _b[settings_1.types.mini] = fallback_circle_png_1["default"],
    _b[settings_1.types.normal] = fallback_cloud_normal_png_1["default"],
    _b[settings_1.types.big] = fallback_cloud_big_png_1["default"],
    _b.dimmed = fallback_circle_dimmed_png_1["default"],
    _b);
    _this.animate = function () {
      if (!_this._mounted) {
        return;
      }
      var frame = _this.state.frame;
      var framesCount = _this._framesCount[_this.getSpriteSettingsKey()];
      var nextFrame = frame < framesCount ? frame + 1 : 0;
      _this.setState({ frame: nextFrame });
      setTimeout(_this.animate, 1000 / 25);
    };
    _this.getSpriteSettingsKey = function () {
      return _this.props.type === settings_1.types.mini && _this.props.dimmed ? 'dimmed' : _this.props.type;
    };
    return _this;
  }
  SpinnerFallback.prototype.componentDidMount = function () {
    this._mounted = true;
    this.animate();
  };
  SpinnerFallback.prototype.componentWillUnmount = function () {
    this._mounted = false;
  };
  SpinnerFallback.prototype.render = function () {
    var type = this.props.type;
    var frame = this.state.frame;
    var size = settings_1.sizeMaps[type];
    var cssSet = {
      backgroundImage: "url('" + this._imageUrls[this.getSpriteSettingsKey()] + "')",
      height: size.height,
      top: type === 'mini' ? 2 : 0,
      width: size.width };

    if (!process.env.enableReactTesting) {
      cssSet.backgroundPosition = "0 -" + frame * size.height + "px";
    }
    return React.createElement("span", { className: Spinner_module_less_1["default"].fallback, style: cssSet });
  };
  SpinnerFallback.__KONTUR_REACT_UI__ = 'SpinnerFallback';
  SpinnerFallback.propTypes = {
    type: PropTypes.oneOf(Object.keys(settings_1.types)),
    dimmed: PropTypes.bool };

  return SpinnerFallback;
}(React.Component);
exports["default"] = SpinnerFallback;