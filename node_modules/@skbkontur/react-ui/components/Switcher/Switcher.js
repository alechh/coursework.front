"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var PropTypes = tslib_1.__importStar(require("prop-types"));
var identifiers_1 = require("../../lib/events/keyboard/identifiers");
var Group_1 = tslib_1.__importDefault(require("../Group"));
var Button_1 = tslib_1.__importDefault(require("../Button"));
var Switcher_module_less_1 = tslib_1.__importDefault(require("./Switcher.module.css"));
var Emotion_1 = require("../../lib/theming/Emotion");
var Switcher_styles_1 = tslib_1.__importDefault(require("./Switcher.styles"));
var ThemeConsumer_1 = require("../ThemeConsumer");
var Switcher = /** @class */function (_super) {
  tslib_1.__extends(Switcher, _super);
  function Switcher() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.state = {
      focusedIndex: null };

    _this.selectItem = function (value) {
      if (_this.props.onChange) {
        _this.props.onChange({ target: { value: value } }, value);
      }
    };
    _this._extractPropsFromItem = function (item) {
      return typeof item === 'object' ? item : { label: item, value: item };
    };
    _this._extractValuesFromItems = function () {
      return _this.props.items.map(function (item) {
        var value = _this._extractPropsFromItem(item).value;
        return value;
      });
    };
    _this.move = function (step) {
      var selectedIndex = _this.state.focusedIndex;
      if (typeof selectedIndex !== 'number') {
        return;
      }
      var items = _this._extractValuesFromItems();
      selectedIndex += step;
      if (selectedIndex < 0) {
        selectedIndex = items.length - 1;
      } else
      if (selectedIndex >= items.length) {
        selectedIndex = 0;
      }
      _this._focus(selectedIndex);
    };
    _this._focus = function (index) {
      _this.setState({ focusedIndex: index });
    };
    _this.handleKey = function (e) {
      var focusedIndex = _this.state.focusedIndex;
      if (typeof focusedIndex !== 'number') {
        return;
      }
      if (identifiers_1.isKeyEnter(e)) {
        if (_this.props.onChange) {
          var value = _this._extractPropsFromItem(_this.props.items[focusedIndex]).value;
          _this.selectItem(value);
        }
        return;
      }
      if (identifiers_1.isKeyArrowHorizontal(e)) {
        e.preventDefault();
        _this.move(identifiers_1.isKeyArrowLeft(e) ? -1 : 1);
      }
    };
    _this._handleFocus = function () {
      var value = _this.props.value;
      var items = _this._extractValuesFromItems();
      var currentIndex = items.slice().indexOf(value);
      var index = currentIndex > -1 ? currentIndex : 0;
      _this.setState({ focusedIndex: index });
    };
    _this._handleBlur = function () {
      _this.setState({ focusedIndex: null });
    };
    _this._renderItems = function () {
      return _this.props.items.map(function (item, i) {
        var _a = _this._extractPropsFromItem(item),label = _a.label,value = _a.value;
        var buttonProps = {
          checked: _this.props.value === value,
          visuallyFocused: _this.state.focusedIndex === i,
          onClick: function onClick() {
            _this.selectItem(value);
          },
          disableFocus: true,
          size: _this.props.size };

        return React.createElement(Button_1["default"], tslib_1.__assign({ key: value }, buttonProps), label);
      });
    };
    return _this;
  }
  Switcher.prototype.render = function () {
    var _this = this;
    return React.createElement(ThemeConsumer_1.ThemeConsumer, null, function (theme) {
      _this.theme = theme;
      return _this.renderMain();
    });
  };
  Switcher.prototype.renderMain = function () {
    var _a;
    var listClassNames = Emotion_1.cx((_a = {},
    _a[Switcher_module_less_1["default"].error] = !!this.props.error,
    _a[Switcher_styles_1["default"].error(this.theme)] = !!this.props.error,
    _a));
    var inputProps = {
      type: 'checkbox',
      onKeyDown: this.handleKey,
      onFocus: this._handleFocus,
      onBlur: this._handleBlur,
      className: Switcher_module_less_1["default"].input };

    return React.createElement("div", null,
    this.props.label ? React.createElement("div", { className: Switcher_module_less_1["default"].label }, this.props.label) : null,
    React.createElement("div", { className: Switcher_module_less_1["default"].wrap },
    React.createElement("input", tslib_1.__assign({}, inputProps)),
    React.createElement("div", { className: listClassNames },
    React.createElement(Group_1["default"], null, this._renderItems()))));
  };
  Switcher.__KONTUR_REACT_UI__ = 'Switcher';
  Switcher.propTypes = {
    error: PropTypes.bool,
    items: PropTypes.oneOfType([
    PropTypes.arrayOf(PropTypes.string),
    PropTypes.arrayOf(PropTypes.shape({
      label: PropTypes.string,
      value: PropTypes.string }))]).

    isRequired,
    label: PropTypes.string,
    value: PropTypes.string,
    onChange: PropTypes.func };

  return Switcher;
}(React.Component);
exports["default"] = Switcher;