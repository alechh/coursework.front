import { Nullable } from '../../typings/utility-types';
export interface CalendarDateShape {
    year: number;
    month: number;
    date: number;
}
export declare const isEqual: (a: Nullable<CalendarDateShape>, b: Nullable<CalendarDateShape>) => boolean | null | undefined;
export declare const comparator: (a: CalendarDateShape, b: CalendarDateShape) => 0 | 1 | -1;
export declare const create: (date: number, month: number, year: number) => CalendarDateShape;
export declare const isLess: (left: CalendarDateShape, right: CalendarDateShape) => boolean;
export declare const isLessOrEqual: (left: CalendarDateShape, right: CalendarDateShape) => boolean | null | undefined;
export declare const isGreater: (left: CalendarDateShape, right: CalendarDateShape) => boolean;
export declare const isGreaterOrEqual: (left: CalendarDateShape, right: CalendarDateShape) => boolean;
export declare const isBetween: (date: CalendarDateShape, left?: Nullable<CalendarDateShape>, right?: Nullable<CalendarDateShape>) => boolean;
