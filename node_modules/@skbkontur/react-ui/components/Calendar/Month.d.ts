import * as React from 'react';
import * as CDS from './CalendarDateShape';
import { MonthViewModel } from './MonthViewModel';
import { Nullable } from '../../typings/utility-types';
interface MonthProps {
    top: number;
    month: MonthViewModel;
    maxDate?: CDS.CalendarDateShape;
    minDate?: CDS.CalendarDateShape;
    today?: CDS.CalendarDateShape;
    value?: Nullable<CDS.CalendarDateShape>;
    onDateClick?: (date: CDS.CalendarDateShape) => void;
    onMonthYearChange: (month: number, year: number) => void;
    isHoliday?: (day: CDS.CalendarDateShape & {
        isWeekend: boolean;
    }) => boolean;
}
export declare class Month extends React.Component<MonthProps> {
    private monthSelect;
    private yearSelect;
    shouldComponentUpdate(nextProps: MonthProps): boolean;
    componentDidMount(): void;
    render(): JSX.Element;
    private renderCells;
    private closeSelects;
    private monthRef;
    private yearRef;
    private handleMonthSelect;
    private handleYearSelect;
}
export {};
