"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var config_1 = tslib_1.__importDefault(require("./config"));
var MonthViewModel_1 = require("./MonthViewModel");
exports.calculateScrollPosition = function (months, scrollPosition, deltaY) {
  var scrollDirection = deltaY > 0 ? 1 : -1;
  var nextScrollPosition = scrollPosition - deltaY;
  var nextMonths = months;
  var firstMonth = months[0];
  if (scrollDirection < 0 && nextScrollPosition >= firstMonth.height) {
    do {
      nextScrollPosition -= nextMonths[0].height;
      nextMonths = exports.getMonths(firstMonth.month, firstMonth.year);
    } while (nextScrollPosition >= nextMonths[0].height);
  }
  var lastMonth = months[months.length - 1];
  if (scrollDirection > 0 && nextScrollPosition < 0) {
    do {
      nextScrollPosition += nextMonths[1].height;
      nextMonths = exports.getMonths(lastMonth.month, lastMonth.year);
    } while (nextScrollPosition < 0);
  }
  return {
    scrollPosition: nextScrollPosition,
    months: nextMonths,
    scrollDirection: scrollDirection };

};
exports.applyDelta = function (deltaY) {return function (_a, _b) {
    var scrollPosition = _a.scrollPosition,months = _a.months;
    var minDate = _b.minDate,maxDate = _b.maxDate;
    var scrollDirection = deltaY > 0 ? 1 : -1;
    var isMinDateExceeded = minDate && scrollDirection < 0 && minDate.year * 12 + minDate.month > months[0].year * 12 + months[0].month;
    var isMaxDateExceeded = maxDate && scrollDirection > 0 && maxDate.year * 12 + maxDate.month < months[1].year * 12 + months[1].month;
    if (isMinDateExceeded) {
      return { scrollPosition: 0, scrollDirection: scrollDirection };
    }
    if (isMaxDateExceeded) {
      return { scrollPosition: months[2].height, scrollDirection: scrollDirection };
    }
    return exports.calculateScrollPosition(months, scrollPosition, deltaY);
  };};
exports.isMonthVisible = function (top, month) {
  return top < config_1["default"].WRAPPER_HEIGHT && top > -month.height;
};
exports.getMonthsHeight = function (months) {return months.reduce(function (a, b) {return a + b.height;}, 0);};
exports.getMonths = function (month, year) {
  return [-1, 0, 1].map(function (x) {return MonthViewModel_1.MonthViewModel.create(month + x, year);});
};