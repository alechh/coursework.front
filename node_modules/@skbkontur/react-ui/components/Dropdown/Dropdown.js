"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var PropTypes = tslib_1.__importStar(require("prop-types"));
var filterProps_1 = tslib_1.__importDefault(require("../filterProps"));
var MenuHeader_1 = tslib_1.__importDefault(require("../MenuHeader/MenuHeader"));
var MenuItem_1 = tslib_1.__importDefault(require("../MenuItem/MenuItem"));
var MenuSeparator_1 = tslib_1.__importDefault(require("../MenuSeparator/MenuSeparator"));
var Select_1 = tslib_1.__importDefault(require("../Select"));
var PASS_PROPS = {
  _renderButton: true,
  error: true,
  disabled: true,
  disablePortal: true,
  menuAlign: true,
  menuWidth: true,
  maxMenuHeight: true,
  use: true,
  size: true,
  warning: true,
  width: true,
  onOpen: true,
  onClose: true,
  onMouseEnter: true,
  onMouseLeave: true,
  onMouseOver: true,
  diadocLink: true,
  diadocLinkIcon: true };

/**
                           * Выпадающее меню.
                           */
var Dropdown = /** @class */function (_super) {
  tslib_1.__extends(Dropdown, _super);
  function Dropdown() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this._refSelect = function (element) {
      _this._select = element;
    };
    return _this;
  }
  Dropdown.prototype.render = function () {
    var items = React.Children.map(this.props.children, function (item) {return item;});
    return React.createElement(Select_1["default"], tslib_1.__assign({ ref: this._refSelect }, filterProps_1["default"](this.props, PASS_PROPS), { value: this.props.caption, items: items, _icon: this.props.icon, renderValue: renderValue }));
  };
  /**
      * @public
      */
  Dropdown.prototype.open = function () {
    if (this._select) {
      this._select.open();
    }
  };
  /**
      * @public
      */
  Dropdown.prototype.close = function () {
    if (this._select) {
      this._select.close();
    }
  };
  Dropdown.__KONTUR_REACT_UI__ = 'Dropdown';
  Dropdown.Header = MenuHeader_1["default"];
  Dropdown.MenuItem = MenuItem_1["default"];
  Dropdown.Separator = MenuSeparator_1["default"];
  Dropdown.propTypes = {
    /**
                          * Подпись на кнопке.
                          */
    caption: PropTypes.node.isRequired,
    /**
                                         * Отключает использование портала
                                         */
    disablePortal: PropTypes.bool,
    /**
                                    * Визуально отключает Dropdown
                                    */
    disabled: PropTypes.bool,
    /**
                               * Визуально показать наличие ошибки.
                               */
    error: PropTypes.bool,
    /**
                            * Иконка слева от текста кнопки
                            */
    icon: PropTypes.node,
    maxMenuHeight: PropTypes.number,
    menuAlign: PropTypes.oneOf(['left', 'right']),
    menuWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    size: PropTypes.oneOf(['small', 'medium', 'large']),
    /**
                                                          * Смотри Button.
                                                          */
    use: PropTypes.any,
    /**
                         * Визуально показать наличие предупреждения.
                         */
    warning: PropTypes.bool,
    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    /**
                                                                       * Вызывается при закрытии меню.
                                                                       */
    onClose: PropTypes.func,
    onMouseEnter: PropTypes.func,
    onMouseLeave: PropTypes.func,
    onMouseOver: PropTypes.func,
    /**
                                  * Вызывается при открытии меню.
                                  */
    onOpen: PropTypes.func };

  return Dropdown;
}(React.Component);
exports["default"] = Dropdown;
function renderValue(value) {
  return value;
}