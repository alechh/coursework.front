"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var create_react_context_1 = tslib_1.__importDefault(require("create-react-context"));
var ZIndexStorage_1 = require("./ZIndexStorage");
var ZIndexContext = create_react_context_1["default"]({ parentLayerZIndex: 0, maxZIndex: Infinity });
var ZIndex = /** @class */function (_super) {
  tslib_1.__extends(ZIndex, _super);
  function ZIndex(props) {
    var _this = _super.call(this, props) || this;
    _this.zIndex = 0;
    _this.zIndex = ZIndexStorage_1.incrementZIndex(props.priority, props.delta);
    return _this;
  }
  ZIndex.prototype.componentWillUnmount = function () {
    ZIndexStorage_1.removeZIndex(this.zIndex);
  };
  ZIndex.prototype.render = function () {
    var _this = this;
    var _a = this.props,style = _a.style,children = _a.children,delta = _a.delta,priority = _a.priority,applyZIndex = _a.applyZIndex,coverChildren = _a.coverChildren,createStackingContext = _a.createStackingContext,wrapperRef = _a.wrapperRef,props = tslib_1.__rest(_a, ["style", "children", "delta", "priority", "applyZIndex", "coverChildren", "createStackingContext", "wrapperRef"]);
    var wrapperStyle = {};
    return React.createElement(ZIndexContext.Consumer, null, function (_a) {
      var parentLayerZIndex = _a.parentLayerZIndex,maxZIndex = _a.maxZIndex;
      var zIndexContexValue = { parentLayerZIndex: parentLayerZIndex, maxZIndex: maxZIndex };
      if (applyZIndex) {
        var newZIndex = _this.calcZIndex(parentLayerZIndex, maxZIndex);
        wrapperStyle.zIndex = newZIndex;
        zIndexContexValue = coverChildren ?
        { parentLayerZIndex: parentLayerZIndex, maxZIndex: newZIndex } :
        { parentLayerZIndex: newZIndex, maxZIndex: Number.isFinite(maxZIndex) ? newZIndex : Infinity };
        if (createStackingContext) {
          'isolation' in document.body.style ?
          wrapperStyle.isolation = 'isolate' :
          wrapperStyle.transform = 'rotate(0)';
        }
      }
      return React.createElement(ZIndexContext.Provider, { value: zIndexContexValue },
      React.createElement("div", tslib_1.__assign({ style: tslib_1.__assign({}, style, wrapperStyle), ref: wrapperRef }, props), children));
    });
  };
  ZIndex.prototype.calcZIndex = function (parentLayerZIndex, maxZIndex) {
    var newZIndex = this.zIndex;
    if (Number.isFinite(maxZIndex)) {
      var allowedValuesIntervalLength = maxZIndex - parentLayerZIndex;
      var scale = ZIndexStorage_1.upperBorder / allowedValuesIntervalLength;
      newZIndex = Math.ceil(newZIndex / scale);
    }
    newZIndex += parentLayerZIndex;
    return newZIndex;
  };
  ZIndex.__KONTUR_REACT_UI__ = 'ZIndex';
  ZIndex.defaultProps = {
    delta: 10,
    priority: 0,
    style: {},
    applyZIndex: true,
    coverChildren: false,
    createStackingContext: false };

  ZIndex.propTypes = {
    delta: function delta(props) {
      if (props.delta <= 0) {
        return new Error("[ZIndex]: Prop 'delta' must be greater than 0, received " + props.delta);
      }
      if (Math.trunc(props.delta) !== props.delta) {
        return new Error("[ZIndex]: Prop 'delta' must be integer, received " + props.delta);
      }
    } };

  return ZIndex;
}(React.Component);
exports["default"] = ZIndex;