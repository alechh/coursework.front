import * as React from 'react';
import * as PropTypes from 'prop-types';
import { Override } from '../../typings/utility-types';
export declare type LinkProps = Override<React.AnchorHTMLAttributes<HTMLAnchorElement>, {
    /** Неактивное состояние */
    disabled?: boolean;
    /** href */
    href?: string;
    /** Иконка */
    icon?: React.ReactElement<any>;
    /** Тип */
    use?: 'default' | 'success' | 'danger' | 'grayed';
    _button?: boolean;
    _buttonOpened?: boolean;
    tabIndex?: number;
    /** onClick */
    onClick?: (event?: React.MouseEvent<HTMLAnchorElement>) => void;
}>;
export interface LinkState {
    focusedByTab: boolean;
}
/**
 * Стандартная ссылка.
 * Интерфес пропсов наследуется от `React.AnchorHTMLAttributes<HTMLAnchorElement>`.
 * Все свойства передаются в элемент `<a>`.
 * `className` и `style` не поддерживаются
 */
declare class Link extends React.Component<LinkProps, LinkState> {
    static __KONTUR_REACT_UI__: string;
    static __ADAPTER__: any;
    static propTypes: {
        disabled: PropTypes.Requireable<boolean>;
        href: PropTypes.Requireable<string>;
        icon: PropTypes.Requireable<string | number | boolean | {} | PropTypes.ReactElementLike | PropTypes.ReactNodeArray>;
        use: PropTypes.Requireable<string>;
    };
    static defaultProps: {
        href: string;
        use: string;
    };
    state: {
        focusedByTab: boolean;
    };
    private theme;
    private getProps;
    render(): JSX.Element;
    private renderMain;
    private _handleFocus;
    private _handleBlur;
    private _handleClick;
}
export default Link;
