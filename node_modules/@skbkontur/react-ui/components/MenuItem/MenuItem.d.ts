import * as React from 'react';
import * as PropTypes from 'prop-types';
export declare type MenuItemState = null | 'hover' | 'selected' | void;
export declare type MenuItemElement = HTMLAnchorElement | HTMLSpanElement;
export interface MenuItemProps {
    /** @ignore */
    _enableIconPadding?: boolean;
    /** @ignore */
    alkoLink?: boolean;
    comment?: React.ReactNode;
    disabled?: boolean;
    icon?: React.ReactElement<any>;
    link?: boolean;
    /** @ignore */
    loose?: boolean;
    /** @ignore */
    state?: MenuItemState;
    onClick?: (event: React.SyntheticEvent<HTMLElement>) => void;
    children?: React.ReactNode | ((state: MenuItemState) => React.ReactNode);
    target?: React.AnchorHTMLAttributes<HTMLAnchorElement>['target'];
    title?: React.AnchorHTMLAttributes<HTMLAnchorElement>['title'];
    href?: React.AnchorHTMLAttributes<HTMLAnchorElement>['href'];
    onMouseEnter?: React.MouseEventHandler;
    onMouseLeave?: React.MouseEventHandler;
    component?: React.ComponentType<any>;
}
/**
 * Элемент меню.
 */
export default class MenuItem extends React.Component<MenuItemProps> {
    static __KONTUR_REACT_UI__: string;
    static __MENU_ITEM__: boolean;
    static propTypes: {
        alkoLink: PropTypes.Requireable<boolean>;
        comment: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        disabled: PropTypes.Requireable<boolean>;
        href: PropTypes.Requireable<string>;
        icon: PropTypes.Requireable<string | number | boolean | {} | PropTypes.ReactElementLike | PropTypes.ReactNodeArray>;
        loose: PropTypes.Requireable<boolean>;
        state: PropTypes.Requireable<string>;
        target: PropTypes.Requireable<string>;
        onClick: PropTypes.Requireable<(...args: any[]) => any>;
    };
    private theme;
    private mouseEntered;
    render(): JSX.Element;
    private renderMain;
    private handleMouseEnterFix;
    private handleMouseLeave;
    private getComponent;
}
export declare const isMenuItem: (child: React.ReactChild) => child is React.ReactElement<MenuItemProps>;
