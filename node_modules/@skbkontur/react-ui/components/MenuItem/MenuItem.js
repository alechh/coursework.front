"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var PropTypes = tslib_1.__importStar(require("prop-types"));
var warning_1 = tslib_1.__importDefault(require("warning"));
var utils_1 = require("../../lib/utils");
var MenuItem_module_less_1 = tslib_1.__importDefault(require("./MenuItem.module.css"));
var Emotion_1 = require("../../lib/theming/Emotion");
var MenuItem_styles_1 = tslib_1.__importDefault(require("./MenuItem.styles"));
var ThemeConsumer_1 = require("../ThemeConsumer");
/**
                                                    * Элемент меню.
                                                    */
var MenuItem = /** @class */function (_super) {
  tslib_1.__extends(MenuItem, _super);
  function MenuItem() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.mouseEntered = false;
    // https://github.com/facebook/react/issues/10109
    // Mouseenter event not triggered when cursor moves from disabled button
    _this.handleMouseEnterFix = function (e) {
      if (!_this.mouseEntered && _this.props.onMouseEnter) {
        _this.mouseEntered = true;
        _this.props.onMouseEnter(e);
      }
    };
    _this.handleMouseLeave = function (e) {
      _this.mouseEntered = false;
      if (_this.props.onMouseLeave) {
        _this.props.onMouseLeave(e);
      }
    };
    _this.getComponent = function () {
      var _a = _this.props,disabled = _a.disabled,component = _a.component,href = _a.href;
      if (disabled) {
        return 'button';
      }
      if (component) {
        return component;
      }
      if (href) {
        return 'a';
      }
      return 'button';
    };
    return _this;
  }
  MenuItem.prototype.render = function () {
    var _this = this;
    return React.createElement(ThemeConsumer_1.ThemeConsumer, null, function (theme) {
      _this.theme = theme;
      return _this.renderMain();
    });
  };
  MenuItem.prototype.renderMain = function () {
    var _a, _b;
    var _c = this.props,alkoLink = _c.alkoLink,link = _c.link,comment = _c.comment,icon = _c.icon,loose = _c.loose,state = _c.state,children = _c.children,_enableIconPadding = _c._enableIconPadding,component = _c.component,onMouseEnter = _c.onMouseEnter,onMouseLeave = _c.onMouseLeave,rest = tslib_1.__rest(_c, ["alkoLink", "link", "comment", "icon", "loose", "state", "children", "_enableIconPadding", "component", "onMouseEnter", "onMouseLeave"]);
    warning_1["default"](alkoLink === undefined, "[MenuItem]: Prop 'alkoLink' was deprecated please use 'link' instead");
    var hover = state === 'hover' && !this.props.disabled;
    var iconElement = null;
    if (icon) {
      iconElement = React.createElement("div", { className: MenuItem_module_less_1["default"].icon }, icon);
    }
    var className = Emotion_1.cx((_a = {},
    _a[MenuItem_module_less_1["default"].root] = true,
    _a[MenuItem_styles_1["default"].root(this.theme)] = true,
    _a[MenuItem_module_less_1["default"].disabled] = !!this.props.disabled,
    _a[MenuItem_module_less_1["default"].loose] = !!loose,
    _a[MenuItem_styles_1["default"].hover(this.theme)] = hover,
    _a[MenuItem_styles_1["default"].selected(this.theme)] = state === 'selected',
    _a[MenuItem_styles_1["default"].link(this.theme)] = !!link || !!alkoLink,
    _a[MenuItem_styles_1["default"].withIcon(this.theme)] = Boolean(iconElement) || !!_enableIconPadding,
    _a[MenuItem_styles_1["default"].disabled(this.theme)] = !!this.props.disabled,
    _a));
    var content = children;
    if (utils_1.isFunction(children)) {
      content = children(this.props.state);
    }
    var Component = this.getComponent();
    return React.createElement(Component, tslib_1.__assign({}, rest, { onMouseOver: this.handleMouseEnterFix, onMouseLeave: this.handleMouseLeave, className: className, tabIndex: -1 }),
    iconElement,
    content,
    this.props.comment && React.createElement("div", { className: Emotion_1.cx((_b = {},
      _b[MenuItem_module_less_1["default"].comment] = true,
      _b[MenuItem_module_less_1["default"].commentHover] = hover,
      _b)) }, comment));
  };
  MenuItem.__KONTUR_REACT_UI__ = 'MenuItem';
  MenuItem.__MENU_ITEM__ = true;
  MenuItem.propTypes = {
    alkoLink: PropTypes.bool,
    comment: PropTypes.node,
    disabled: PropTypes.bool,
    href: PropTypes.string,
    icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
    loose: PropTypes.bool,
    state: PropTypes.string,
    target: PropTypes.string,
    onClick: PropTypes.func };

  return MenuItem;
}(React.Component);
exports["default"] = MenuItem;
exports.isMenuItem = function (child) {
  return React.isValidElement(child) ? child.type.hasOwnProperty('__MENU_ITEM__') : false;
};