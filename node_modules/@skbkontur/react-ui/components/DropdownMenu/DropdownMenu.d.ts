import * as React from 'react';
import { PopupMenuProps } from '../internal/PopupMenu';
import { PopupPosition } from '../Popup';
export interface DropdownMenuProps {
    /** Максимальная высота меню */
    menuMaxHeight?: React.CSSProperties['maxWidth'];
    /** Ширина меню */
    menuWidth?: React.CSSProperties['width'];
    /**
     * Элемент или функция возвращающая элемент,
     * если передана, используется вместо ```caption```,
     * в таком случае управлять открытием и закрытием меню
     * придется в этой функции
     */
    caption: PopupMenuProps['caption'];
    header?: React.ReactNode;
    footer?: React.ReactNode;
    /**
     * Массив разрешенных положений меню относительно caption'а.
     * @default ['bottom left', 'bottom right', 'top left', 'top right']
     */
    positions?: PopupPosition[];
    onOpen?: () => void;
    onClose?: () => void;
    /**
     * Не показывать анимацию
     */
    disableAnimations: boolean;
}
/**
 * Меню, раскрывающееся по клику на переданный в ```caption``` элемент
 */
export default class DropdownMenu extends React.Component<DropdownMenuProps> {
    static __KONTUR_REACT_UI__: string;
    static defaultProps: {
        disableAnimations: boolean;
        positions: string[];
    };
    private popupMenu;
    constructor(props: DropdownMenuProps);
    render(): JSX.Element | null;
    open: () => void;
    close: () => void;
    private refPopupMenu;
    private handleChangeMenuState;
}
