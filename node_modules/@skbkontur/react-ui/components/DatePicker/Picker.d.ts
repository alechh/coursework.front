import * as React from 'react';
import { CalendarDateShape } from '../Calendar';
import { Nullable } from '../../typings/utility-types';
interface Props {
    maxDate?: CalendarDateShape;
    minDate?: CalendarDateShape;
    value: Nullable<CalendarDateShape>;
    onPick: (date: CalendarDateShape) => void;
    onSelect?: (date: CalendarDateShape) => void;
    enableTodayLink?: boolean;
    isHoliday?: (day: CalendarDateShape & {
        isWeekend: boolean;
    }) => boolean;
}
interface State {
    date: CalendarDateShape;
    today: CalendarDateShape;
}
export default class Picker extends React.Component<Props, State> {
    static __KONTUR_REACT_UI__: string;
    private theme;
    private calendar;
    private readonly locale;
    constructor(props: Props);
    componentDidUpdate(prevProps: Props): void;
    render(): JSX.Element;
    private renderMain;
    private scrollToMonth;
    private renderTodayLink;
    private handleSelectToday;
    private getInitialDate;
}
export {};
