"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var react_dom_1 = tslib_1.__importDefault(require("react-dom"));
var RenderContainerFallback_1 = require("./RenderContainerFallback");
var RenderContainerNative_1 = require("./RenderContainerNative");
var HAS_BUILTIN_PORTAL = !!react_dom_1["default"].createPortal;
var RenderInnerContainer = HAS_BUILTIN_PORTAL ? RenderContainerNative_1.RenderInnerContainer : RenderContainerFallback_1.RenderInnerContainer;
var RenderContainer = /** @class */function (_super) {
  tslib_1.__extends(RenderContainer, _super);
  function RenderContainer(props) {
    var _this = _super.call(this, props) || this;
    _this.domContainer = null;
    _this.rootId = RenderContainer.getRootId();
    if (props.children) {
      _this.mountContainer();
    }
    return _this;
  }
  RenderContainer.prototype.componentWillReceiveProps = function (nextProps) {
    if (!this.props.children && nextProps.children) {
      this.mountContainer();
    }
    if (this.props.children && !nextProps.children) {
      this.unmountContainer();
    }
  };
  RenderContainer.prototype.componentWillUnmount = function () {
    this.destroyContainer();
  };
  RenderContainer.prototype.render = function () {
    return React.createElement(RenderInnerContainer, tslib_1.__assign({}, this.props, { domContainer: this.domContainer, rootId: this.rootId }));
  };
  RenderContainer.prototype.createContainer = function () {
    if (!document || !document.body) {
      throw Error('There is no "body" in "document"');
    }
    if (!this.domContainer) {
      var domContainer = document.createElement('div');
      domContainer.setAttribute('class', 'react-ui');
      domContainer.setAttribute('data-rendered-container-id', "" + this.rootId);
      this.domContainer = domContainer;
    }
  };
  RenderContainer.prototype.mountContainer = function () {
    if (!this.domContainer) {
      this.createContainer();
    }
    if (this.domContainer && this.domContainer.parentNode !== document.body) {
      document.body.appendChild(this.domContainer);
      if (window.ReactTesting) {
        window.ReactTesting.addRenderContainer(this.rootId, this);
      }
    }
  };
  RenderContainer.prototype.destroyContainer = function () {
    if (this.domContainer) {
      this.unmountContainer();
      this.domContainer = null;
    }
  };
  RenderContainer.prototype.unmountContainer = function () {
    if (this.domContainer && this.domContainer.parentNode) {
      this.domContainer.parentNode.removeChild(this.domContainer);
      if (window.ReactTesting) {
        window.ReactTesting.removeRenderContainer(this.rootId);
      }
    }
  };
  RenderContainer.__KONTUR_REACT_UI__ = 'RenderContainer';
  RenderContainer.getRootId = function () {return Math.random().toString(16).slice(2, 6);};
  return RenderContainer;
}(React.Component);
exports.RenderContainer = RenderContainer;
exports["default"] = RenderContainer;