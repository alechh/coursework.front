"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var identifiers_1 = require("../../lib/events/keyboard/identifiers");
var LayoutEvents_1 = tslib_1.__importDefault(require("../../lib/LayoutEvents"));
var stopPropagation_1 = tslib_1.__importDefault(require("../../lib/events/stopPropagation"));
var HideBodyVerticalScroll_1 = tslib_1.__importDefault(require("../HideBodyVerticalScroll/HideBodyVerticalScroll"));
var ModalStack_1 = tslib_1.__importDefault(require("../ModalStack"));
var RenderContainer_1 = tslib_1.__importDefault(require("../RenderContainer/RenderContainer"));
var RenderLayer_1 = tslib_1.__importDefault(require("../RenderLayer"));
var ZIndex_1 = tslib_1.__importDefault(require("../ZIndex"));
var SidePageBody_1 = require("./SidePageBody");
var SidePageContainer_1 = tslib_1.__importDefault(require("./SidePageContainer"));
var SidePageContext_1 = require("./SidePageContext");
var SidePageFooter_1 = require("./SidePageFooter");
var SidePageHeader_1 = tslib_1.__importDefault(require("./SidePageHeader"));
var react_transition_group_1 = require("react-transition-group");
var SidePage_module_less_1 = tslib_1.__importDefault(require("./SidePage.module.css"));
var Emotion_1 = require("../../lib/theming/Emotion");
var SidePage_styles_1 = tslib_1.__importDefault(require("./SidePage.styles"));
var ThemeConsumer_1 = require("../ThemeConsumer");
var TRANSITION_TIMEOUT = 200;
/**
                               * Сайдпейдж
                               *
                               * Содержит в себе три компоненты: **SidePage.Header**,
                               * **SidePage.Body** и **SidePage.Footer**
                               *
                               * Для отображения серой плашки в футере в компонент
                               * **Footer** необходимо передать пропс **panel**
                               */
var SidePage = /** @class */function (_super) {
  tslib_1.__extends(SidePage, _super);
  function SidePage() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.state = {};
    _this.stackSubscription = null;
    _this.layoutRef = null;
    _this.footer = null;
    /**
                          * Обновляет разметку компонента.
                          * @public
                          */
    _this.updateLayout = function () {
      if (_this.footer) {
        _this.footer.update();
      }
    };
    _this.getWidth = function () {
      if (!_this.layoutRef) {
        return 'auto';
      }
      return _this.layoutRef.getBoundingClientRect().width;
    };
    _this.handleStackChange = function (stack) {
      var sidePages = stack.filter(function (x) {return x instanceof SidePage;});
      var currentSidePagePosition = sidePages.indexOf(_this);
      var isSidePageOnStackTop = stack[0] instanceof SidePage;
      var hasMargin = sidePages.length > 1 && currentSidePagePosition === sidePages.length - 1;
      var hasShadow = sidePages.length < 3 || currentSidePagePosition > sidePages.length - 3;
      var hasBackground = currentSidePagePosition === sidePages.length - 1 && isSidePageOnStackTop;
      _this.setState({
        stackPosition: stack.indexOf(_this),
        hasMargin: hasMargin,
        hasShadow: hasShadow,
        hasBackground: hasBackground });

    };
    _this.handleClickOutside = function () {
      if (_this.state.stackPosition === 0 && !_this.props.ignoreBackgroundClick) {
        _this.requestClose();
      }
    };
    _this.handleKeyDown = function (e) {
      if (_this.state.stackPosition !== 0) {
        return;
      }
      if (identifiers_1.isKeyEscape(e)) {
        stopPropagation_1["default"](e);
        _this.requestClose();
      }
    };
    _this.requestClose = function () {
      if (_this.props.disableClose) {
        return;
      }
      if (_this.props.onClose) {
        _this.props.onClose();
      }
    };
    _this.footerRef = function (ref) {
      _this.footer = ref;
    };
    return _this;
  }
  SidePage.prototype.componentDidMount = function () {
    window.addEventListener('keydown', this.handleKeyDown);
    this.stackSubscription = ModalStack_1["default"].add(this, this.handleStackChange);
  };
  SidePage.prototype.componentWillUnmount = function () {
    window.removeEventListener('keydown', this.handleKeyDown);
    if (this.stackSubscription != null) {
      this.stackSubscription.remove();
    }
    ModalStack_1["default"].remove(this);
  };
  SidePage.prototype.render = function () {
    var _this = this;
    return React.createElement(ThemeConsumer_1.ThemeConsumer, null, function (theme) {
      _this.theme = theme;
      return _this.renderMain();
    });
  };
  SidePage.prototype.renderMain = function () {
    var disableAnimations = this.props.disableAnimations;
    return React.createElement(RenderContainer_1["default"], null,
    React.createElement("div", null,
    this.renderShadow(),
    React.createElement(react_transition_group_1.CSSTransition, { "in": true, classNames: this.getTransitionNames(), appear: !disableAnimations, enter: !disableAnimations, exit: false, timeout: {
        enter: TRANSITION_TIMEOUT,
        exit: TRANSITION_TIMEOUT } },
    this.renderContainer())));
  };
  SidePage.prototype.getZIndexProps = function () {
    var _a;
    var fromLeft = this.props.fromLeft;
    return {
      classes: Emotion_1.cx(SidePage_module_less_1["default"].root, (_a = {},
      _a[SidePage_module_less_1["default"].leftSide] = !!fromLeft,
      _a)) };

  };
  SidePage.prototype.renderContainer = function () {
    var _this = this;
    var classes = this.getZIndexProps().classes;
    return React.createElement(ZIndex_1["default"], { priority: 'Sidepage', className: classes, onScroll: LayoutEvents_1["default"].emit, createStackingContext: true },
    React.createElement(RenderLayer_1["default"], { onClickOutside: this.handleClickOutside, active: true },
    React.createElement("div", { className: Emotion_1.cx(SidePage_module_less_1["default"].container, SidePage_styles_1["default"].container(this.theme), this.state.hasShadow && SidePage_styles_1["default"].shadow(this.theme)), style: this.getSidebarStyle() },
    React.createElement("div", { ref: function ref(_) {return _this.layoutRef = _;} },
    React.createElement(SidePageContext_1.SidePageContext.Provider, { value: {
        requestClose: this.requestClose,
        getWidth: this.getWidth,
        updateLayout: this.updateLayout,
        footerRef: this.footerRef } },

    React.createElement("div", { className: SidePage_module_less_1["default"].layout }, this.props.children))))));
  };
  SidePage.prototype.renderShadow = function () {
    var _a = this.getZIndexProps(),classes = _a.classes,style = _a.style;
    var blockBackground = this.props.blockBackground;
    return React.createElement(ZIndex_1["default"], { priority: 'Sidepage', className: classes, onScroll: LayoutEvents_1["default"].emit, style: style }, blockBackground && [
    React.createElement(HideBodyVerticalScroll_1["default"], { key: "hbvs" }),
    React.createElement("div", { key: "overlay", className: Emotion_1.cx(SidePage_module_less_1["default"].background, this.state.hasBackground && SidePage_module_less_1["default"].gray) })]);

  };
  SidePage.prototype.getSidebarStyle = function () {
    var sidePageStyle = {
      width: this.props.width || (this.props.blockBackground ? 800 : 500) };

    if (this.state.hasMargin) {
      if (this.props.fromLeft) {
        sidePageStyle.marginLeft = 20;
      } else
      {
        sidePageStyle.marginRight = 20;
      }
    }
    return sidePageStyle;
  };
  SidePage.prototype.getTransitionNames = function () {
    var direction = this.props.fromLeft ? 'right' : 'left';
    var transitionEnter = Emotion_1.cx(SidePage_module_less_1["default"]['transition-enter-' + direction]);
    var transitionAppear = Emotion_1.cx(SidePage_module_less_1["default"]['transition-appear-' + direction]);
    return {
      enter: transitionEnter,
      enterActive: SidePage_module_less_1["default"]['transition-enter-active'],
      exit: SidePage_module_less_1["default"]['transition-leave'],
      exitActive: SidePage_module_less_1["default"]['transition-leave-active'],
      appear: transitionAppear,
      appearActive: SidePage_module_less_1["default"]['transition-appear-active'] };

  };
  SidePage.__KONTUR_REACT_UI__ = 'SidePage';
  SidePage.Header = SidePageHeader_1["default"];
  SidePage.Body = SidePageBody_1.SidePageBodyWithContext;
  SidePage.Footer = SidePageFooter_1.SidePageFooterWithContext;
  SidePage.Container = SidePageContainer_1["default"];
  return SidePage;
}(React.Component);
exports["default"] = SidePage;