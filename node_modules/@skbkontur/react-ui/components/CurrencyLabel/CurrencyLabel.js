"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var constants_1 = require("../CurrencyInput/constants");
var CurrencyHelper_1 = tslib_1.__importDefault(require("../CurrencyInput/CurrencyHelper"));
exports.defaultProps = {
  fractionDigits: 2 };

exports.CurrencyLabel = function (_a) {
  var value = _a.value,fractionDigits = _a.fractionDigits,currencySymbol = _a.currencySymbol;
  return React.createElement("span", null,
  CurrencyHelper_1["default"].format(value, { fractionDigits: fractionDigits }),
  currencySymbol && String.fromCharCode(0xa0) /* &nbsp; */,
  currencySymbol);
};
exports.CurrencyLabel.__KONTUR_REACT_UI__ = 'CurrencyLabel';
exports.CurrencyLabel.defaultProps = exports.defaultProps;
exports.CurrencyLabel.propTypes = {
  fractionDigits: function fractionDigits(props) {
    if (props.fractionDigits > constants_1.MAX_SAFE_DIGITS) {
      return new Error("[CurrencyLabel]: Prop 'fractionDigits' exceeds " + constants_1.MAX_SAFE_DIGITS + "." +
      "\nSee https://tech.skbkontur.ru/react-ui/#/CurrencyInput?id=why15");
    }
    var fraction = (CurrencyHelper_1["default"].destructString(String(props.value)) || { fraction: '' }).fraction;
    if (fraction.length > props.fractionDigits) {
      return new Error("[CurrencyLabel]: Prop 'fractionDigits' less than fractional part of the 'value' property," +
      "'value' will not be cutted");
    }
    if (!Number.isInteger(props.fractionDigits)) {
      return new Error("[CurrencyLabel]: Prop 'fractionDigits' is not integer, fraction part of these property will not be used");
    }
    return null;
  } };

exports["default"] = exports.CurrencyLabel;