"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var PopupMenu_1 = tslib_1.__importDefault(require("../internal/PopupMenu"));
var currentEnvironment_1 = require("../internal/currentEnvironment");
/**
                                                                       * Меню, раскрывающееся по клику на переданный в ```caption``` элемент.
                                                                       * Положение зависит от переданного массива ```positions``` и работает так:
                                                                       * первое значаение в массиве - дефолтная позиция, меню раскрывается так, если ничего не мешает ему раскрыться,
                                                                       * если раскрыться в данной позиции не получается - берется следующие значение, и так далее.
                                                                       * Если меню должно раскрываться только в одну сторону - передаем в ```positions``` массив с одним элементом.
                                                                       * Если ```positions``` передан или передан пустой массив, используются все возможные положения.
                                                                       */
var TooltipMenu = /** @class */function (_super) {
  tslib_1.__extends(TooltipMenu, _super);
  function TooltipMenu(props) {
    var _this = _super.call(this, props) || this;
    if (!props.caption && !currentEnvironment_1.isProductionEnv) {
      throw new Error('Prop "caption" is required!!!');
    }
    return _this;
  }
  TooltipMenu.prototype.render = function () {
    if (!this.props.caption) {
      return null;
    }
    return React.createElement(PopupMenu_1["default"], { menuMaxHeight: this.props.menuMaxHeight, menuWidth: this.props.menuWidth, caption: this.props.caption, header: this.props.header, footer: this.props.footer, positions: this.props.positions, popupHasPin: true, popupMargin: 10, popupPinOffset: 15, disableAnimations: this.props.disableAnimations }, this.props.children);
  };
  TooltipMenu.__KONTUR_REACT_UI__ = 'TooltipMenu';
  TooltipMenu.defaultProps = {
    disableAnimations: Boolean(process.env.enableReactTesting) };

  return TooltipMenu;
}(React.Component);
exports["default"] = TooltipMenu;