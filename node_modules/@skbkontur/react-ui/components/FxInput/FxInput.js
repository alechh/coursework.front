"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var PropTypes = tslib_1.__importStar(require("prop-types"));
var Function_1 = tslib_1.__importDefault(require("@skbkontur/react-icons/Function"));
var Undo_1 = tslib_1.__importDefault(require("@skbkontur/react-icons/Undo"));
var Button_1 = tslib_1.__importDefault(require("../Button"));
var Group_1 = tslib_1.__importDefault(require("../Group"));
var Input_1 = tslib_1.__importDefault(require("../Input"));
var CurrencyInput_1 = tslib_1.__importDefault(require("../CurrencyInput"));
var createPropsGetter_1 = require("../internal/createPropsGetter");
/** Принимает все свойства `Input`'a */
var FxInput = /** @class */function (_super) {
  tslib_1.__extends(FxInput, _super);
  function FxInput() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.input = null;
    _this.getProps = createPropsGetter_1.createPropsGetter(FxInput.defaultProps);
    /**
                                                                                   * @public
                                                                                   */
    _this.focus = function () {
      if (_this.input) {
        _this.input.focus();
      }
    };
    /**
        * @public
        */
    _this.blur = function () {
      if (_this.input) {
        _this.input.blur();
      }
    };
    _this.refInput = function (element) {
      _this.input = element;
      if (_this.props.refInput) {
        _this.props.refInput(_this.input);
      }
    };
    return _this;
  }
  FxInput.prototype.render = function () {
    var _a = this.props,type = _a.type,onRestore = _a.onRestore,auto = _a.auto,rest = tslib_1.__rest(_a, ["type", "onRestore", "auto"]);
    var inputProps = {
      align: 'right',
      mainInGroup: true };

    var button = null;
    if (auto) {
      inputProps.leftIcon = React.createElement(Function_1["default"], null);
    } else
    {
      button = React.createElement(Button_1["default"], { narrow: true, onClick: this.props.onRestore, borderless: this.props.borderless },
      React.createElement(Undo_1["default"], null));
    }
    return React.createElement(Group_1["default"], { width: this.props.width },
    button,
    this.getProps().type === 'currency' ? React.createElement(CurrencyInput_1["default"], tslib_1.__assign({}, inputProps, rest, { ref: this.refInput, value: this.props.value, onChange: this.props.onChange })) : React.createElement(Input_1["default"], tslib_1.__assign({}, inputProps, rest, { ref: this.refInput, type: this.props.type, value: this.props.value, onChange: this.props.onChange })));
  };
  FxInput.__KONTUR_REACT_UI__ = 'FxInput';
  FxInput.propTypes = {
    auto: PropTypes.bool,
    type: PropTypes.string };

  FxInput.defaultProps = {
    width: 250,
    type: 'text' };

  return FxInput;
}(React.Component);
exports["default"] = FxInput;