"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var react_dom_1 = require("react-dom");
var PropTypes = tslib_1.__importStar(require("prop-types"));
var Indicator_1 = tslib_1.__importDefault(require("./Indicator"));
var TabsContext_1 = require("./TabsContext");
var Tab_1 = require("./Tab");
var Tabs_module_less_1 = tslib_1.__importDefault(require("./Tabs.module.css"));
var Emotion_1 = require("../../lib/theming/Emotion");
/**
                                                       * Tabs wrapper
                                                       *
                                                       * contains static property `Tab`
                                                       */
var Tabs = /** @class */function (_super) {
  tslib_1.__extends(Tabs, _super);
  function Tabs() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.tabs = [];
    _this.tabUpdates = {
      on: function on(cb) {
        var index = _this.listeners.push(cb);
        return function () {
          _this.listeners.splice(index, 1);
        };
      } };

    _this.listeners = [];
    _this.shiftFocus = function (fromTab, delta) {
      var tabs = _this.tabs;
      var index = tabs.findIndex(function (x) {return x.id === fromTab;});
      var newIndex = Math.max(0, Math.min(index + delta, tabs.length - 1));
      var tab = tabs[newIndex];
      var tabNode = tab.getNode();
      var htmlNode = null;
      if (tabNode instanceof React.Component) {
        htmlNode = react_dom_1.findDOMNode(tabNode);
      }
      if (htmlNode && htmlNode instanceof HTMLElement && typeof htmlNode.focus === 'function') {
        htmlNode.focus();
      }
    };
    _this.notifyUpdate = function () {
      _this.listeners.forEach(function (cb) {return cb();});
    };
    _this.switchTab = function (id) {
      var _a = _this.props,onChange = _a.onChange,value = _a.value;
      if (id !== value && onChange) {
        onChange(_this.createEvent(id), id);
      }
    };
    _this.getTab = function (id) {
      var _a = (_this.tabs.find(function (x) {return x.id === id;}) || {}).getNode,getNode = _a === void 0 ? null : _a;
      return getNode && getNode();
    };
    _this.addTab = function (id, getNode) {
      _this.tabs = _this.tabs.concat({ id: id, getNode: getNode });
    };
    _this.removeTab = function (id) {
      _this.tabs = _this.tabs.filter(function (tab) {return tab.id !== id;});
    };
    return _this;
  }
  Tabs.prototype.render = function () {
    var _a = this.props,vertical = _a.vertical,value = _a.value,width = _a.width,children = _a.children,indicatorClassName = _a.indicatorClassName;
    return React.createElement("div", { className: Emotion_1.cx(Tabs_module_less_1["default"].root, vertical && Tabs_module_less_1["default"].vertical), style: { width: width } },
    React.createElement(TabsContext_1.TabsContext.Provider, { value: {
        vertical: vertical,
        activeTab: value,
        getTab: this.getTab,
        addTab: this.addTab,
        removeTab: this.removeTab,
        notifyUpdate: this.notifyUpdate,
        shiftFocus: this.shiftFocus,
        switchTab: this.switchTab } },

    React.createElement("div", null,
    children,
    React.createElement(Indicator_1["default"], { className: indicatorClassName, tabUpdates: this.tabUpdates, vertical: vertical }))));
  };
  Tabs.prototype.createEvent = function (value) {
    return { target: { value: value } };
  };
  Tabs.__KONTUR_REACT_UI__ = 'Tabs';
  Tabs.propTypes = {
    children: PropTypes.node,
    indicatorClassName: PropTypes.string,
    value: PropTypes.string.isRequired,
    vertical: PropTypes.bool,
    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    onChange: PropTypes.func };

  Tabs.defaultProps = {
    vertical: false };

  Tabs.Tab = Tab_1.TabWithContext;
  return Tabs;
}(React.Component);
exports["default"] = Tabs;