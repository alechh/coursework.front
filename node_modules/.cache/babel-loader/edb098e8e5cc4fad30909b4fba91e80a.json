{"ast":null,"code":"var _jsxFileName = \"/home/aleksandr/coursework.front/src/Components/MainWindow/MainWindowComponents/Content/FreeWorkDetail/FreeWorkDetail.tsx\";\nimport React, { Component } from 'react';\nimport './FreeWorkDetail.css';\nimport Spinner from '@skbkontur/react-ui/Spinner';\nimport Center from '@skbkontur/react-ui/Center';\nimport Description from './Components/Description';\nimport TextArea from '@skbkontur/react-ui/Textarea';\nimport Typograph from '@material-ui/core/Typography';\nimport Gapped from '@skbkontur/react-ui/Gapped';\nimport Toast from '@skbkontur/react-ui/Toast';\n//student\nimport freeWorks from '../../../../../TestData/Student/freeWorksData'; //teacher\n\nclass FreeWorkDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.whichData = () => {\n      switch (this.props.role) {\n        case 'student':\n          {\n            const id = Number(this.props.page.substr(5)); // const axios = require('axios').default\n            // axios.get('../api/course_works/' + id.toString())\n            // .then((response : Idata) => {\n            //     this.setState({data : response})\n            // })\n            // break\n\n            let data = {}; // eslint-disable-next-line\n\n            freeWorks.map(item => {\n              if (item.id === id) return data = item;\n            });\n            this.setState({\n              data: data\n            });\n          }\n\n        case 'teacher':\n          {\n            const id = Number(this.props.page.substr(8));\n\n            const axios = require('axios').default;\n\n            axios.get('../api/course_works/' + id.toString()).then(response => {\n              this.setState({\n                data: response\n              });\n            });\n            break; // let data : Idata = {} // eslint-disable-next-line\n            // teacherFreeWorks.map(item => {\n            //     if(item.id === id) data = item\n            // })\n            // this.setState({data : data})\n          }\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        aboutMe: event.target.value\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      aboutMe: '',\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    this.whichData();\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  submit() {\n    var _this$state$data$id;\n\n    let body = {\n      message: this.state.aboutMe,\n      courseWorkId: this.state.data.id\n    };\n\n    const axios = require('axios').default;\n\n    axios.post('../api/student/course_works/' + ((_this$state$data$id = this.state.data.id) === null || _this$state$data$id === void 0 ? void 0 : _this$state$data$id.toString()) + '/apply', this.props.token, body, this.state.data.id);\n    Toast.push('Заявка отправлена');\n  }\n\n  needCV() {\n    if (this.props.role === 'student') return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: '30px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typograph, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"\\u0420\\u0430\\u0441\\u0441\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043E \\u0441\\u0435\\u0431\\u0435\"), /*#__PURE__*/React.createElement(Gapped, {\n      gap: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextArea, {\n      autoResize: true,\n      width: \"40vw\",\n      value: this.state.aboutMe,\n      onChange: this.handleChange,\n      placeholder: \"\\u0420\\u0435\\u0437\\u044E\\u043C\\u0435\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"submit\",\n      onClick: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typograph, {\n      variant: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 22\n      }\n    }, \"\\u041F\\u043E\\u0434\\u0430\\u0442\\u044C \\u0437\\u0430\\u044F\\u0432\\u043A\\u0443\"))));\n  }\n\n  renderFreeWork() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Description, {\n      data: this.state.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }), this.needCV());\n  }\n\n  render() {\n    return !this.state.isLoading ? this.renderFreeWork() : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '60vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Center, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      type: \"big\",\n      caption: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 56\n      }\n    })));\n  }\n\n}\n\nexport default FreeWorkDetail;","map":{"version":3,"sources":["/home/aleksandr/coursework.front/src/Components/MainWindow/MainWindowComponents/Content/FreeWorkDetail/FreeWorkDetail.tsx"],"names":["React","Component","Spinner","Center","Description","TextArea","Typograph","Gapped","Toast","freeWorks","FreeWorkDetail","constructor","props","whichData","role","id","Number","page","substr","data","map","item","setState","axios","require","default","get","toString","then","response","handleChange","event","aboutMe","target","value","state","isLoading","componentDidMount","submit","body","message","courseWorkId","post","token","push","needCV","marginLeft","renderFreeWork","render","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './FreeWorkDetail.css'\nimport Spinner from '@skbkontur/react-ui/Spinner'\nimport Center from '@skbkontur/react-ui/Center'\nimport Description from './Components/Description'\nimport TextArea from '@skbkontur/react-ui/Textarea'\nimport Typograph from '@material-ui/core/Typography'\nimport Gapped from '@skbkontur/react-ui/Gapped'\nimport Toast from '@skbkontur/react-ui/Toast'\nimport axios from 'axios'\n\n//student\nimport freeWorks from '../../../../../TestData/Student/freeWorksData'\n\n//teacher\nimport teacherFreeWorks from '../../../../../TestData/Teacher/freeWorks'\n\ninterface Idata{\n    title?: string,\n    teacher?:string,\n    teacherContacts?: string,\n    description?: string, \n    deadline?: string,\n    id?: number\n}\n\ninterface CreateApplicationViewModel{\n    message?: string,\n    courseWorkId?: number\n}\n\ninterface Props{\n    role?: string,\n    page?: string,\n    token : string\n}\n\ninterface State{\n    isLoading?: boolean,\n    aboutMe?: string,\n    data : Idata\n}\n\nclass FreeWorkDetail extends Component<Props,State>{\n    constructor(props : Props){\n        super(props);\n        this.state={\n            isLoading : false,\n            aboutMe : '',\n            data : {}\n        }\n    }\n\n    componentDidMount(){\n        this.setState({isLoading:true})\n        this.whichData()\n        this.setState({isLoading : false})\n    }\n\n    private whichData = () => {\n        switch(this.props.role){\n            case 'student':{\n                const id = Number(this.props.page!.substr(5))\n                // const axios = require('axios').default\n                // axios.get('../api/course_works/' + id.toString())\n                // .then((response : Idata) => {\n                //     this.setState({data : response})\n                // })\n                // break\n\n                let data : Idata = {} // eslint-disable-next-line\n                freeWorks.map(item =>{\n                    if(item.id === id) return (data = item)\n                })\n                this.setState({data : data})\n            }\n            case 'teacher':{\n                const id = Number(this.props.page!.substr(8))\n                const axios = require('axios').default\n                axios.get('../api/course_works/' + id.toString())\n                .then((response : Idata) => {\n                    this.setState({data : response})\n                })\n                break\n                \n                // let data : Idata = {} // eslint-disable-next-line\n                // teacherFreeWorks.map(item => {\n                //     if(item.id === id) data = item\n                // })\n                // this.setState({data : data})\n            }\n        }\n    }\n\n    private handleChange = (event : React.ChangeEvent<HTMLTextAreaElement>) => {\n        this.setState({aboutMe : event.target.value})\n    }\n\n    private submit(){\n        let body : CreateApplicationViewModel = {\n            message : this.state.aboutMe,\n            courseWorkId : this.state.data.id\n        }\n        const axios = require('axios').default\n        axios.post(\n            '../api/student/course_works/' + this.state.data.id?.toString() + '/apply',\n            this.props.token,\n            body,\n            this.state.data.id\n        )\n\n        Toast.push('Заявка отправлена')\n    }\n\n    private needCV(){\n        if(this.props.role === 'student')\n            return(\n            <div style={{marginLeft:'30px'}}>\n                <Typograph variant='h6'>Рассказать о себе</Typograph>\n                <Gapped gap={5}>\n                    <TextArea\n                        autoResize={true}\n                        width='40vw'\n                        value={this.state.aboutMe}\n                        onChange={this.handleChange}\n                        placeholder='Резюме'\n                    />\n                    <button\n                        id='submit'\n                        onClick = {this.submit}\n                    ><Typograph variant='button'>Подать заявку</Typograph></button>\n                </Gapped>\n            </div>)\n    }\n\n    private renderFreeWork(){\n        return(\n            <div>\n                <Description data={this.state.data}/>\n                <hr/>\n                {this.needCV()}\n            </div>\n        )\n    }\n\n    render(){\n        return (\n            !this.state.isLoading?\n                this.renderFreeWork()\n            :   <div style={{height : '60vh'}}><Center><Spinner type='big' caption='Загрузка'/></Center></div>\n        )\n    }\n}\n\nexport default FreeWorkDetail"]},"metadata":{},"sourceType":"module"}