{"ast":null,"code":"var _jsxFileName = \"/home/aleksandr/Documents/HwProj-2.0.1/hwproj.courseworks.front/src/Components/MainWindow/MainWindowComponents/Content/ContentBar/ContentBar.tsx\";\nimport React, { Component } from 'react';\nimport './ContentBar.css';\nimport contentBarData from './ContentBarData';\n\nclass ContentBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeSection = event => {\n      const newSection = event.currentTarget.value;\n      let arr = this.state.items.map(item => {\n        if (item.section === newSection) item.selected = true;else item.selected = false;\n        return item;\n      });\n      this.setState({\n        items: arr\n      });\n      this.props.changeSection(event);\n    };\n\n    this.state = {\n      items: contentBarData\n    };\n  }\n\n  isSelected(item) {\n    return item ? 'btnSelected' : '';\n  }\n\n  renderContentBar() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contentBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, this.state.items.map(item => /*#__PURE__*/React.createElement(\"button\", {\n      key: item.section,\n      onClick: this.changeSection,\n      className: 'button ' + this.isSelected(item.selected),\n      value: item.section,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, item.section)), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"minor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  render() {\n    return this.renderContentBar();\n  }\n\n}\n\nexport default ContentBar;","map":{"version":3,"sources":["/home/aleksandr/Documents/HwProj-2.0.1/hwproj.courseworks.front/src/Components/MainWindow/MainWindowComponents/Content/ContentBar/ContentBar.tsx"],"names":["React","Component","contentBarData","ContentBar","constructor","props","changeSection","event","newSection","currentTarget","value","arr","state","items","map","item","section","selected","setState","isSelected","renderContentBar","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAYA,MAAMC,UAAN,SAAyBF,SAAzB,CAA+C;AAC3CG,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;;AADsB,SAW1BC,aAX0B,GAWTC,KAAD,IAAgD;AAC5D,YAAMC,UAAU,GAAGD,KAAK,CAACE,aAAN,CAAoBC,KAAvC;AACA,UAAIC,GAAG,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IAAG;AAClC,YAAGA,IAAI,CAACC,OAAL,KAAiBR,UAApB,EAAgCO,IAAI,CAACE,QAAL,GAAgB,IAAhB,CAAhC,KACKF,IAAI,CAACE,QAAL,GAAgB,KAAhB;AACL,eAAOF,IAAP;AACH,OAJS,CAAV;AAKA,WAAKG,QAAL,CAAc;AAACL,QAAAA,KAAK,EAACF;AAAP,OAAd;AACA,WAAKN,KAAL,CAAWC,aAAX,CAAyBC,KAAzB;AACH,KApByB;;AAEtB,SAAKK,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAEX;AADA,KAAX;AAGH;;AAEDiB,EAAAA,UAAU,CAACJ,IAAD,EAAe;AACrB,WAAOA,IAAI,GAAE,aAAF,GAAkB,EAA7B;AACH;;AAaOK,EAAAA,gBAAR,GAA0B;AACtB,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKR,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,iBACtB;AACI,MAAA,GAAG,EAAEA,IAAI,CAACC,OADd;AAEI,MAAA,OAAO,EAAE,KAAKV,aAFlB;AAGI,MAAA,SAAS,EAAE,YAAW,KAAKa,UAAL,CAAgBJ,IAAI,CAACE,QAArB,CAH1B;AAII,MAAA,KAAK,EAAEF,IAAI,CAACC,OAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKED,IAAI,CAACC,OALP,CADH,CADL,eASI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADJ;AAaH;;AAEDK,EAAAA,MAAM,GAAE;AACJ,WAAO,KAAKD,gBAAL,EAAP;AACH;;AAzC0C;;AA4C/C,eAAejB,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport './ContentBar.css'\nimport contentBarData from './ContentBarData';\n\n\ninterface Props{\n    section?: string,\n    changeSection(event: React.MouseEvent<HTMLButtonElement>): void;\n}\n\ninterface State{\n    items: {section?:string, selected?: boolean}[]\n}\n\nclass ContentBar extends Component<Props,State>{\n    constructor(props : Props){\n        super(props);\n        this.state={\n            items: contentBarData\n        }\n    }\n\n    isSelected(item?:boolean){\n        return item? 'btnSelected' : ''\n    }\n\n    changeSection = (event: React.MouseEvent<HTMLButtonElement>) => {\n        const newSection = event.currentTarget.value\n        let arr = this.state.items.map(item =>{\n            if(item.section === newSection) item.selected = true\n            else item.selected = false\n            return item\n        })\n        this.setState({items:arr})\n        this.props.changeSection(event)\n    }\n\n    private renderContentBar(){\n        return(\n            <div className='contentBar'>\n                {this.state.items.map(item => \n                    <button\n                        key={item.section}\n                        onClick={this.changeSection} \n                        className={'button '+ this.isSelected(item.selected)}\n                        value={item.section}\n                    >{item.section}\n                    </button>)}\n                <hr className='minor'/>\n            </div>\n        )\n    }\n\n    render(){\n        return this.renderContentBar();\n    }\n}\n\nexport default ContentBar"]},"metadata":{},"sourceType":"module"}