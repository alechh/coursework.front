{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sasha\\\\Documents\\\\coursework.front\\\\src\\\\Components\\\\MainWindow\\\\MainWindowComponents\\\\Content\\\\FreeWorkDetail\\\\FreeWorkDetail.tsx\";\nimport React, { Component } from 'react';\nimport './FreeWorkDetail.css';\nimport Spinner from '@skbkontur/react-ui/Spinner';\nimport Center from '@skbkontur/react-ui/Center';\nimport Description from './Components/Description';\nimport TextArea from '@skbkontur/react-ui/Textarea';\nimport Typograph from '@material-ui/core/Typography';\nimport Gapped from '@skbkontur/react-ui/Gapped';\nimport Toast from '@skbkontur/react-ui/Toast';\n\nclass FreeWorkDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.whichData = () => {\n      switch (this.props.role) {\n        case 'student':\n          {\n            const id = Number(this.props.page.substr(5));\n\n            const axios = require('axios').default;\n\n            axios.get('../api/course_works/' + id.toString()).then(response => {\n              this.setState({\n                data: response\n              });\n            });\n            break; // let data : Idata = {} // eslint-disable-next-line\n            // freeWorks.map(item =>{\n            //     if(item.id === id) return (data = item)\n            // })\n            // this.setState({data : data})\n          }\n\n        case 'teacher':\n          {\n            const id = Number(this.props.page.substr(8));\n\n            const axios = require('axios').default;\n\n            axios.get('../api/course_works/' + id.toString()).then(response => {\n              this.setState({\n                data: response\n              });\n            });\n            break; // let data : Idata = {} // eslint-disable-next-line\n            // teacherFreeWorks.map(item => {\n            //     if(item.id === id) data = item\n            // })\n            // this.setState({data : data})\n          }\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        aboutMe: event.target.value\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      aboutMe: '',\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    this.whichData();\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  submit() {\n    var _this$state$data$id;\n\n    let body = {\n      message: this.state.aboutMe,\n      courseWorkId: this.state.data.id\n    };\n\n    const axios = require('axios').default;\n\n    axios.post('../api/student/course_works/' + ((_this$state$data$id = this.state.data.id) === null || _this$state$data$id === void 0 ? void 0 : _this$state$data$id.toString()) + '/apply', this.props.token, body, this.state.data.id);\n    Toast.push('Заявка отправлена');\n  }\n\n  needCV() {\n    if (this.props.role === 'student') return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: '30px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typograph, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"\\u0420\\u0430\\u0441\\u0441\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043E \\u0441\\u0435\\u0431\\u0435\"), /*#__PURE__*/React.createElement(Gapped, {\n      gap: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextArea, {\n      autoResize: true,\n      width: \"40vw\",\n      value: this.state.aboutMe,\n      onChange: this.handleChange,\n      placeholder: \"\\u0420\\u0435\\u0437\\u044E\\u043C\\u0435\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"submit\",\n      onClick: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typograph, {\n      variant: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 22\n      }\n    }, \"\\u041F\\u043E\\u0434\\u0430\\u0442\\u044C \\u0437\\u0430\\u044F\\u0432\\u043A\\u0443\"))));\n  }\n\n  renderFreeWork() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Description, {\n      data: this.state.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }), this.needCV());\n  }\n\n  render() {\n    return !this.state.isLoading ? this.renderFreeWork() : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '60vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Center, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      type: \"big\",\n      caption: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 56\n      }\n    })));\n  }\n\n}\n\nexport default FreeWorkDetail;","map":{"version":3,"sources":["C:/Users/Sasha/Documents/coursework.front/src/Components/MainWindow/MainWindowComponents/Content/FreeWorkDetail/FreeWorkDetail.tsx"],"names":["React","Component","Spinner","Center","Description","TextArea","Typograph","Gapped","Toast","FreeWorkDetail","constructor","props","whichData","role","id","Number","page","substr","axios","require","default","get","toString","then","response","setState","data","handleChange","event","aboutMe","target","value","state","isLoading","componentDidMount","submit","body","message","courseWorkId","post","token","push","needCV","marginLeft","renderFreeWork","render","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sBAAP;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;AAmCA,MAAMC,cAAN,SAA6BR,SAA7B,CAAmD;AAC/CS,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;;AADsB,SAelBC,SAfkB,GAeN,MAAM;AACtB,cAAO,KAAKD,KAAL,CAAWE,IAAlB;AACI,aAAK,SAAL;AAAe;AACX,kBAAMC,EAAE,GAAGC,MAAM,CAAC,KAAKJ,KAAL,CAAWK,IAAX,CAAiBC,MAAjB,CAAwB,CAAxB,CAAD,CAAjB;;AACA,kBAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AACAF,YAAAA,KAAK,CAACG,GAAN,CAAU,yBAAyBP,EAAE,CAACQ,QAAH,EAAnC,EACCC,IADD,CACOC,QAAD,IAAsB;AACxB,mBAAKC,QAAL,CAAc;AAACC,gBAAAA,IAAI,EAAGF;AAAR,eAAd;AACH,aAHD;AAIA,kBAPW,CASX;AACA;AACA;AACA;AACA;AACH;;AACD,aAAK,SAAL;AAAe;AACX,kBAAMV,EAAE,GAAGC,MAAM,CAAC,KAAKJ,KAAL,CAAWK,IAAX,CAAiBC,MAAjB,CAAwB,CAAxB,CAAD,CAAjB;;AACA,kBAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AACAF,YAAAA,KAAK,CAACG,GAAN,CAAU,yBAAyBP,EAAE,CAACQ,QAAH,EAAnC,EACCC,IADD,CACOC,QAAD,IAAsB;AACxB,mBAAKC,QAAL,CAAc;AAACC,gBAAAA,IAAI,EAAGF;AAAR,eAAd;AACH,aAHD;AAIA,kBAPW,CASX;AACA;AACA;AACA;AACA;AACH;AA9BL;AAgCH,KAhDyB;;AAAA,SAkDlBG,YAlDkB,GAkDFC,KAAD,IAAoD;AACvE,WAAKH,QAAL,CAAc;AAACI,QAAAA,OAAO,EAAGD,KAAK,CAACE,MAAN,CAAaC;AAAxB,OAAd;AACH,KApDyB;;AAEtB,SAAKC,KAAL,GAAW;AACPC,MAAAA,SAAS,EAAG,KADL;AAEPJ,MAAAA,OAAO,EAAG,EAFH;AAGPH,MAAAA,IAAI,EAAG;AAHA,KAAX;AAKH;;AAEDQ,EAAAA,iBAAiB,GAAE;AACf,SAAKT,QAAL,CAAc;AAACQ,MAAAA,SAAS,EAAC;AAAX,KAAd;AACA,SAAKrB,SAAL;AACA,SAAKa,QAAL,CAAc;AAACQ,MAAAA,SAAS,EAAG;AAAb,KAAd;AACH;;AAyCOE,EAAAA,MAAR,GAAgB;AAAA;;AACZ,QAAIC,IAAiC,GAAG;AACpCC,MAAAA,OAAO,EAAG,KAAKL,KAAL,CAAWH,OADe;AAEpCS,MAAAA,YAAY,EAAG,KAAKN,KAAL,CAAWN,IAAX,CAAgBZ;AAFK,KAAxC;;AAIA,UAAMI,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AACAF,IAAAA,KAAK,CAACqB,IAAN,CACI,yDAAiC,KAAKP,KAAL,CAAWN,IAAX,CAAgBZ,EAAjD,wDAAiC,oBAAoBQ,QAApB,EAAjC,IAAkE,QADtE,EAEI,KAAKX,KAAL,CAAW6B,KAFf,EAGIJ,IAHJ,EAII,KAAKJ,KAAL,CAAWN,IAAX,CAAgBZ,EAJpB;AAOAN,IAAAA,KAAK,CAACiC,IAAN,CAAW,mBAAX;AACH;;AAEOC,EAAAA,MAAR,GAAgB;AACZ,QAAG,KAAK/B,KAAL,CAAWE,IAAX,KAAoB,SAAvB,EACI,oBACA;AAAK,MAAA,KAAK,EAAE;AAAC8B,QAAAA,UAAU,EAAC;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sGADJ,eAEI,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,UAAU,EAAE,IADhB;AAEI,MAAA,KAAK,EAAC,MAFV;AAGI,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWH,OAHtB;AAII,MAAA,QAAQ,EAAE,KAAKF,YAJnB;AAKI,MAAA,WAAW,EAAC,sCALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAQI;AACI,MAAA,EAAE,EAAC,QADP;AAEI,MAAA,OAAO,EAAI,KAAKQ,MAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGC,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAHD,CARJ,CAFJ,CADA;AAiBP;;AAEOS,EAAAA,cAAR,GAAwB;AACpB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWN,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGK,KAAKgB,MAAL,EAHL,CADJ;AAOH;;AAEDG,EAAAA,MAAM,GAAE;AACJ,WACI,CAAC,KAAKb,KAAL,CAAWC,SAAZ,GACI,KAAKW,cAAL,EADJ,gBAEI;AAAK,MAAA,KAAK,EAAE;AAACE,QAAAA,MAAM,EAAG;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+B,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAQ,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,KAAd;AAAoB,MAAA,OAAO,EAAC,kDAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR,CAA/B,CAHR;AAKH;;AA5G8C;;AA+GnD,eAAerC,cAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport './FreeWorkDetail.css'\r\nimport Spinner from '@skbkontur/react-ui/Spinner'\r\nimport Center from '@skbkontur/react-ui/Center'\r\nimport Description from './Components/Description'\r\nimport TextArea from '@skbkontur/react-ui/Textarea'\r\nimport Typograph from '@material-ui/core/Typography'\r\nimport Gapped from '@skbkontur/react-ui/Gapped'\r\nimport Toast from '@skbkontur/react-ui/Toast'\r\nimport axios from 'axios'\r\n\r\n//student\r\nimport freeWorks from '../../../../../TestData/Student/freeWorksData'\r\n\r\n//teacher\r\nimport teacherFreeWorks from '../../../../../TestData/Teacher/freeWorks'\r\n\r\ninterface Idata{\r\n    title?: string,\r\n    teacher?:string,\r\n    teacherContacts?: string,\r\n    description?: string, \r\n    deadline?: string,\r\n    id?: number\r\n}\r\n\r\ninterface CreateApplicationViewModel{\r\n    message?: string,\r\n    courseWorkId?: number\r\n}\r\n\r\ninterface Props{\r\n    role?: string,\r\n    page?: string,\r\n    token : string\r\n}\r\n\r\ninterface State{\r\n    isLoading?: boolean,\r\n    aboutMe?: string,\r\n    data : Idata\r\n}\r\n\r\nclass FreeWorkDetail extends Component<Props,State>{\r\n    constructor(props : Props){\r\n        super(props);\r\n        this.state={\r\n            isLoading : false,\r\n            aboutMe : '',\r\n            data : {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({isLoading:true})\r\n        this.whichData()\r\n        this.setState({isLoading : false})\r\n    }\r\n\r\n    private whichData = () => {\r\n        switch(this.props.role){\r\n            case 'student':{\r\n                const id = Number(this.props.page!.substr(5))\r\n                const axios = require('axios').default\r\n                axios.get('../api/course_works/' + id.toString())\r\n                .then((response : Idata) => {\r\n                    this.setState({data : response})\r\n                })\r\n                break\r\n\r\n                // let data : Idata = {} // eslint-disable-next-line\r\n                // freeWorks.map(item =>{\r\n                //     if(item.id === id) return (data = item)\r\n                // })\r\n                // this.setState({data : data})\r\n            }\r\n            case 'teacher':{\r\n                const id = Number(this.props.page!.substr(8))\r\n                const axios = require('axios').default\r\n                axios.get('../api/course_works/' + id.toString())\r\n                .then((response : Idata) => {\r\n                    this.setState({data : response})\r\n                })\r\n                break\r\n                \r\n                // let data : Idata = {} // eslint-disable-next-line\r\n                // teacherFreeWorks.map(item => {\r\n                //     if(item.id === id) data = item\r\n                // })\r\n                // this.setState({data : data})\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleChange = (event : React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        this.setState({aboutMe : event.target.value})\r\n    }\r\n\r\n    private submit(){\r\n        let body : CreateApplicationViewModel = {\r\n            message : this.state.aboutMe,\r\n            courseWorkId : this.state.data.id\r\n        }\r\n        const axios = require('axios').default\r\n        axios.post(\r\n            '../api/student/course_works/' + this.state.data.id?.toString() + '/apply',\r\n            this.props.token,\r\n            body,\r\n            this.state.data.id\r\n        )\r\n\r\n        Toast.push('Заявка отправлена')\r\n    }\r\n\r\n    private needCV(){\r\n        if(this.props.role === 'student')\r\n            return(\r\n            <div style={{marginLeft:'30px'}}>\r\n                <Typograph variant='h6'>Рассказать о себе</Typograph>\r\n                <Gapped gap={5}>\r\n                    <TextArea\r\n                        autoResize={true}\r\n                        width='40vw'\r\n                        value={this.state.aboutMe}\r\n                        onChange={this.handleChange}\r\n                        placeholder='Резюме'\r\n                    />\r\n                    <button\r\n                        id='submit'\r\n                        onClick = {this.submit}\r\n                    ><Typograph variant='button'>Подать заявку</Typograph></button>\r\n                </Gapped>\r\n            </div>)\r\n    }\r\n\r\n    private renderFreeWork(){\r\n        return(\r\n            <div>\r\n                <Description data={this.state.data}/>\r\n                <hr/>\r\n                {this.needCV()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            !this.state.isLoading?\r\n                this.renderFreeWork()\r\n            :   <div style={{height : '60vh'}}><Center><Spinner type='big' caption='Загрузка'/></Center></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FreeWorkDetail"]},"metadata":{},"sourceType":"module"}