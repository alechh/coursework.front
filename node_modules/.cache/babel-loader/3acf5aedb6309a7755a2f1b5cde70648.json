{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sasha\\\\Documents\\\\coursework.front\\\\src\\\\Components\\\\MainWindow\\\\MainWindowComponents\\\\Content\\\\RequireCriticDetail\\\\Components\\\\Buttons.tsx\";\nimport React, { Component } from 'react';\nimport Gapped from '@skbkontur/react-ui/Gapped';\nimport Typography from '@material-ui/core/Typography';\nimport './Buttons.css';\nimport Toast from '@skbkontur/react-ui/Toast';\n\nclass Buttons extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleButton = event => {\n      switch (event.currentTarget.value) {\n        case 'yes':\n          {\n            //---------------------------------------------\n            // Запрос \"Буду рецензировать\" по userId и id\n            //---------------------------------------------\n            Toast.push('Выбрано: Буду рецензировать');\n            break;\n          }\n\n        case 'maybe':\n          {\n            //---------------------------------------------\n            // Запрос \"Могу рецензировать\" по userId и id\n            //---------------------------------------------\n            Toast.push('Выбрано: Могу рецензировать');\n            break;\n          }\n\n        case 'no':\n          {\n            //---------------------------------------------\n            // Запрос \"Не могу рецензировать\" по userId и id\n            //---------------------------------------------\n            Toast.push('Выбрано: Не могу рецензировать');\n            break;\n          }\n      }\n    };\n\n    this.state = {};\n  }\n\n  renderButtons() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Gapped, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"requireCriticButton yes\",\n      value: \"yes\",\n      onClick: this.handleButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 18\n      }\n    }, \"\\u0425\\u043E\\u0447\\u0443 \\u0440\\u0435\\u0446\\u0435\\u043D\\u0437\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"requireCriticButton maybe\",\n      value: \"maybe\",\n      onClick: this.handleButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 18\n      }\n    }, \"\\u041C\\u043E\\u0433\\u0443 \\u0440\\u0435\\u0446\\u0435\\u043D\\u0437\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"requireCriticButton no\",\n      value: \"no\",\n      onClick: this.handleButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 18\n      }\n    }, \"\\u041D\\u0435 \\u043C\\u043E\\u0433\\u0443 \\u0440\\u0435\\u0446\\u0435\\u043D\\u0437\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"))));\n  }\n\n  render() {\n    return this.renderButtons();\n  }\n\n}\n\nexport default Buttons;","map":{"version":3,"sources":["C:/Users/Sasha/Documents/coursework.front/src/Components/MainWindow/MainWindowComponents/Content/RequireCriticDetail/Components/Buttons.tsx"],"names":["React","Component","Gapped","Typography","Toast","Buttons","constructor","props","handleButton","event","currentTarget","value","push","state","renderButtons","marginLeft","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;AAWA,MAAMC,OAAN,SAAsBJ,SAAtB,CAA4C;AACxCK,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;;AADsB,SAKlBC,YALkB,GAKFC,KAAD,IAAiD;AACpE,cAAOA,KAAK,CAACC,aAAN,CAAoBC,KAA3B;AACI,aAAK,KAAL;AAAY;AACR;AACA;AACA;AAEAP,YAAAA,KAAK,CAACQ,IAAN,CAAW,6BAAX;AACA;AACH;;AACD,aAAK,OAAL;AAAc;AACV;AACA;AACA;AAEAR,YAAAA,KAAK,CAACQ,IAAN,CAAW,6BAAX;AACA;AACH;;AACD,aAAK,IAAL;AAAW;AACP;AACA;AACA;AAEAR,YAAAA,KAAK,CAACQ,IAAN,CAAW,gCAAX;AACA;AACH;AAxBL;AA0BH,KAhCyB;;AAEtB,SAAKC,KAAL,GAAW,EAAX;AACH;;AA+BOC,EAAAA,aAAR,GAAuB;AACnB,wBACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AACI,MAAA,SAAS,EAAC,yBADd;AAEI,MAAA,KAAK,EAAC,KAFV;AAGI,MAAA,OAAO,EAAE,KAAKP,YAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHAJD,CADA,eAMA;AACI,MAAA,SAAS,EAAC,2BADd;AAEI,MAAA,KAAK,EAAC,OAFV;AAGI,MAAA,OAAO,EAAE,KAAKA,YAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHAJD,CANA,eAWA;AACI,MAAA,SAAS,EAAC,wBADd;AAEI,MAAA,KAAK,EAAC,IAFV;AAGI,MAAA,OAAO,EAAE,KAAKA,YAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8HAJD,CAXA,CADJ,CADJ;AAqBH;;AAEDQ,EAAAA,MAAM,GAAE;AACJ,WAAO,KAAKF,aAAL,EAAP;AACH;;AA7DuC;;AAgE5C,eAAeT,OAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Gapped from '@skbkontur/react-ui/Gapped'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport './Buttons.css'\r\nimport Toast from '@skbkontur/react-ui/Toast'\r\n\r\ninterface Props{\r\n    userId?: number,\r\n    id?: number\r\n}\r\n\r\ninterface State{\r\n\r\n}\r\n\r\nclass Buttons extends Component<Props,State>{\r\n    constructor(props : Props){\r\n        super(props);\r\n        this.state={}\r\n    }\r\n\r\n    private handleButton = (event : React.MouseEvent<HTMLButtonElement>) => {\r\n        switch(event.currentTarget.value){\r\n            case 'yes': {\r\n                //---------------------------------------------\r\n                // Запрос \"Буду рецензировать\" по userId и id\r\n                //---------------------------------------------\r\n\r\n                Toast.push('Выбрано: Буду рецензировать') \r\n                break\r\n            }\r\n            case 'maybe': {\r\n                //---------------------------------------------\r\n                // Запрос \"Могу рецензировать\" по userId и id\r\n                //---------------------------------------------\r\n\r\n                Toast.push('Выбрано: Могу рецензировать') \r\n                break\r\n            }\r\n            case 'no': {\r\n                //---------------------------------------------\r\n                // Запрос \"Не могу рецензировать\" по userId и id\r\n                //---------------------------------------------\r\n\r\n                Toast.push('Выбрано: Не могу рецензировать')\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    private renderButtons(){\r\n        return(\r\n            <div style={{marginLeft: '20px'}}>\r\n                <Gapped>\r\n                <button\r\n                    className='requireCriticButton yes'\r\n                    value='yes'\r\n                    onClick={this.handleButton}\r\n                ><Typography variant='button'>Хочу рецензировать</Typography></button>\r\n                <button\r\n                    className='requireCriticButton maybe'\r\n                    value='maybe'\r\n                    onClick={this.handleButton}\r\n                ><Typography variant='button'>Могу рецензировать</Typography></button>\r\n                <button\r\n                    className='requireCriticButton no'\r\n                    value='no'\r\n                    onClick={this.handleButton}\r\n                ><Typography variant='button'>Не могу рецензировать</Typography></button>\r\n                </Gapped>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return this.renderButtons();\r\n    }\r\n}\r\n\r\nexport default Buttons"]},"metadata":{},"sourceType":"module"}