{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sasha\\\\Documents\\\\coursework.front\\\\src\\\\Components\\\\TopBar\\\\ServiceTopBar.tsx\";\nimport React, { Component } from \"react\";\nimport TopBar from \"@skbkontur/react-ui/TopBar\";\nimport Logotype from \"@skbkontur/react-ui/Logotype\";\nimport { User } from \"@skbkontur/react-icons\";\nimport styles from \"./ServiceTopBar.module.css\";\nimport Toast from \"@skbkontur/react-ui/Toast\";\nexport default class ServiceTopBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderTopBar = () => {\n      const {\n        isAccountTitleHovered\n      } = this.state;\n      return /*#__PURE__*/React.createElement(TopBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TopBar.Start, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TopBar.ItemStatic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontSize: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Logotype, {\n        suffix: \"\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\",\n        locale: {\n          prefix: \"hwpr\",\n          suffix: \"j\"\n        },\n        color: \"#1E79BE\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }\n      })))), /*#__PURE__*/React.createElement(TopBar.End, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onMouseEnter: () => this.setState({\n          isAccountTitleHovered: true\n        }),\n        onMouseLeave: () => this.setState({\n          isAccountTitleHovered: false\n        }),\n        className: styles.accountTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TopBar.ItemStatic, {\n        active: isAccountTitleHovered,\n        _onClick: this.onAccountTitleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(User, {\n        color: \"#666\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 33\n        }\n      }), \"\\xA0\", this.props.firstName, \" \", this.props.lastName)), /*#__PURE__*/React.createElement(TopBar.Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(TopBar.Logout, {\n        onClick: () => {\n          //-----------------------\n          // Запрос на выход\n          //-----------------------\n          Toast.push(\"Logout\");\n          this.props.logout();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      })));\n    };\n\n    this.onAccountTitleClick = () => {\n      Toast.push(\"Этот раздел ещё в разработке\", {\n        label: \"Окей, я понял\",\n        handler: () => Toast.push(\"Допиши сам!\")\n      });\n    };\n\n    this.state = {\n      isAccountTitleHovered: false\n    };\n  }\n\n  render() {\n    return this.renderTopBar();\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Sasha/Documents/coursework.front/src/Components/TopBar/ServiceTopBar.tsx"],"names":["React","Component","TopBar","Logotype","User","styles","Toast","ServiceTopBar","constructor","props","renderTopBar","isAccountTitleHovered","state","fontSize","prefix","suffix","setState","accountTitle","onAccountTitleClick","firstName","lastName","push","logout","label","handler","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAAQC,IAAR,QAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AAYA,eAAe,MAAMC,aAAN,SAA4BN,SAA5B,CAAoD;AAE/DO,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;;AADsB,SAUlBC,YAVkB,GAUH,MAAM;AACzB,YAAM;AAACC,QAAAA;AAAD,UAA0B,KAAKC,KAArC;AACA,0BACQ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD,CAAQ,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAC,sCAAjB;AAA0B,QAAA,MAAM,EAAE;AAACC,UAAAA,MAAM,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SAAlC;AAAiE,QAAA,KAAK,EAAC,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CADJ,eAQI,oBAAC,MAAD,CAAQ,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,YAAY,EAAE,MAAM,KAAKC,QAAL,CAAc;AAACL,UAAAA,qBAAqB,EAAE;AAAxB,SAAd,CAAzB;AACK,QAAA,YAAY,EAAE,MAAM,KAAKK,QAAL,CAAc;AAACL,UAAAA,qBAAqB,EAAE;AAAxB,SAAd,CADzB;AAEK,QAAA,SAAS,EAAEN,MAAM,CAACY,YAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI,oBAAC,MAAD,CAAQ,UAAR;AAAmB,QAAA,MAAM,EAAEN,qBAA3B;AACA,QAAA,QAAQ,EAAE,KAAKO,mBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,UAGW,KAAKT,KAAL,CAAWU,SAHtB,OAGkC,KAAKV,KAAL,CAAWW,QAH7C,CAHJ,CADJ,eAUI,oBAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,eAWI,oBAAC,MAAD,CAAQ,MAAR;AAAe,QAAA,OAAO,EAAE,MAAM;AAC1B;AACA;AACA;AACAd,UAAAA,KAAK,CAACe,IAAN,CAAW,QAAX;AACA,eAAKZ,KAAL,CAAWa,MAAX;AACC,SANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,CARJ,CADR;AA8BH,KA1CyB;;AAAA,SA4ClBJ,mBA5CkB,GA4CI,MAAM;AAChCZ,MAAAA,KAAK,CAACe,IAAN,CAAW,8BAAX,EAA2C;AACvCE,QAAAA,KAAK,EAAE,eADgC;AAEvCC,QAAAA,OAAO,EAAE,MAAMlB,KAAK,CAACe,IAAN,CAAW,aAAX;AAFwB,OAA3C;AAIH,KAjDyB;;AAGtB,SAAKT,KAAL,GAAa;AAACD,MAAAA,qBAAqB,EAAE;AAAxB,KAAb;AACH;;AAEDc,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKf,YAAL,EAAP;AACH;;AAV8D","sourcesContent":["import React, {Component} from \"react\";\r\nimport TopBar from \"@skbkontur/react-ui/TopBar\";\r\nimport Logotype from \"@skbkontur/react-ui/Logotype\";\r\nimport {User} from \"@skbkontur/react-icons\";\r\nimport styles from \"./ServiceTopBar.module.css\";\r\nimport Toast from \"@skbkontur/react-ui/Toast\";\r\n\r\ninterface Props {\r\n    firstName?: string,\r\n    lastName?: string,\r\n    logout(): void\r\n}\r\n\r\ninterface State {\r\n    isAccountTitleHovered: boolean;\r\n}\r\n\r\nexport default class ServiceTopBar extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {isAccountTitleHovered: false}\r\n    }\r\n\r\n    render() {\r\n        return this.renderTopBar();\r\n    }\r\n\r\n    private renderTopBar = () => {\r\n        const {isAccountTitleHovered} = this.state;\r\n        return (\r\n                <TopBar>\r\n                    <TopBar.Start>\r\n                        <TopBar.ItemStatic>\r\n                            <div style={{fontSize: 25}}>\r\n                                <Logotype suffix=\"курсач\" locale={{prefix: \"hwpr\", suffix: \"j\"}} color=\"#1E79BE\"/>\r\n                            </div>\r\n                        </TopBar.ItemStatic>\r\n                    </TopBar.Start>\r\n                    <TopBar.End>\r\n                        <div onMouseEnter={() => this.setState({isAccountTitleHovered: true})}\r\n                             onMouseLeave={() => this.setState({isAccountTitleHovered: false})}\r\n                             className={styles.accountTitle}>\r\n                            <TopBar.ItemStatic active={isAccountTitleHovered}\r\n                            _onClick={this.onAccountTitleClick}>\r\n                                <User color=\"#666\"/>\r\n                                &nbsp;{this.props.firstName} {this.props.lastName}\r\n                            </TopBar.ItemStatic>\r\n                        </div>\r\n                        <TopBar.Divider/>\r\n                        <TopBar.Logout onClick={() => {\r\n                            //-----------------------\r\n                            // Запрос на выход\r\n                            //-----------------------\r\n                            Toast.push(\"Logout\")\r\n                            this.props.logout()\r\n                            }}/>\r\n                    </TopBar.End>\r\n                </TopBar>\r\n        )\r\n    };\r\n\r\n    private onAccountTitleClick = () => {\r\n        Toast.push(\"Этот раздел ещё в разработке\", {\r\n            label: \"Окей, я понял\",\r\n            handler: () => Toast.push(\"Допиши сам!\"),\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}