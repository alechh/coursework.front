{"ast":null,"code":"var _jsxFileName = \"/home/aleksandr/hwproj.courseworks.front/src/Components/MainWindow/MainWindowComponents/Content/RequireCriticDetail/Components/Buttons.tsx\";\nimport React, { Component } from 'react';\nimport Gapped from '@skbkontur/react-ui/Gapped';\nimport Typography from '@material-ui/core/Typography';\nimport './Buttons.css';\nimport Toast from '@skbkontur/react-ui/Toast';\n\nclass Buttons extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleButton(event) {\n    switch (event.currentTarget.value) {\n      case 'yes':\n        {\n          Toast.push('Выбрано: Буду рецензировать');\n          break;\n        }\n\n      case 'maybe':\n        {\n          Toast.push('Выбрано: Могу рецензировать');\n          break;\n        }\n\n      case 'no':\n        {\n          Toast.push('Выбрано: Не могу рецензировать');\n          break;\n        }\n    }\n  }\n\n  renderButtons() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Gapped, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"requireCriticButton yes\",\n      value: \"yes\",\n      onClick: this.handleButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }\n    }, \"\\u0425\\u043E\\u0447\\u0443 \\u0440\\u0435\\u0446\\u0435\\u043D\\u0437\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"requireCriticButton maybe\",\n      value: \"maybe\",\n      onClick: this.handleButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 18\n      }\n    }, \"\\u041C\\u043E\\u0433\\u0443 \\u0440\\u0435\\u0446\\u0435\\u043D\\u0437\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"requireCriticButton no\",\n      value: \"no\",\n      onClick: this.handleButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }\n    }, \"\\u041D\\u0435 \\u043C\\u043E\\u0433\\u0443 \\u0440\\u0435\\u0446\\u0435\\u043D\\u0437\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"))));\n  }\n\n  render() {\n    return this.renderButtons();\n  }\n\n}\n\nexport default Buttons;","map":{"version":3,"sources":["/home/aleksandr/hwproj.courseworks.front/src/Components/MainWindow/MainWindowComponents/Content/RequireCriticDetail/Components/Buttons.tsx"],"names":["React","Component","Gapped","Typography","Toast","Buttons","constructor","props","state","handleButton","event","currentTarget","value","push","renderButtons","marginLeft","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;AAUA,MAAMC,OAAN,SAAsBJ,SAAtB,CAA4C;AACxCK,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW,EAAX;AACH;;AAEOC,EAAAA,YAAR,CAAqBC,KAArB,EAAiE;AAC7D,YAAOA,KAAK,CAACC,aAAN,CAAoBC,KAA3B;AACI,WAAK,KAAL;AAAY;AAACR,UAAAA,KAAK,CAACS,IAAN,CAAW,6BAAX;AAA2C;AAAM;;AAC9D,WAAK,OAAL;AAAc;AAACT,UAAAA,KAAK,CAACS,IAAN,CAAW,6BAAX;AAA2C;AAAM;;AAChE,WAAK,IAAL;AAAW;AAACT,UAAAA,KAAK,CAACS,IAAN,CAAW,gCAAX;AAA8C;AAAM;AAHpE;AAKH;;AAEOC,EAAAA,aAAR,GAAuB;AACnB,wBACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AACI,MAAA,SAAS,EAAC,yBADd;AAEI,MAAA,KAAK,EAAC,KAFV;AAGI,MAAA,OAAO,EAAE,KAAKN,YAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHAJD,CADA,eAMA;AACI,MAAA,SAAS,EAAC,2BADd;AAEI,MAAA,KAAK,EAAC,OAFV;AAGI,MAAA,OAAO,EAAE,KAAKA,YAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHAJD,CANA,eAWA;AACI,MAAA,SAAS,EAAC,wBADd;AAEI,MAAA,KAAK,EAAC,IAFV;AAGI,MAAA,OAAO,EAAE,KAAKA,YAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8HAJD,CAXA,CADJ,CADJ;AAqBH;;AAEDO,EAAAA,MAAM,GAAE;AACJ,WAAO,KAAKF,aAAL,EAAP;AACH;;AAxCuC;;AA2C5C,eAAeT,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport Gapped from '@skbkontur/react-ui/Gapped'\nimport Typography from '@material-ui/core/Typography'\nimport './Buttons.css'\nimport Toast from '@skbkontur/react-ui/Toast'\n\ninterface Props{\n\n}\n\ninterface State{\n\n}\n\nclass Buttons extends Component<Props,State>{\n    constructor(props : Props){\n        super(props);\n        this.state={}\n    }\n\n    private handleButton(event : React.MouseEvent<HTMLButtonElement>){\n        switch(event.currentTarget.value){\n            case 'yes': {Toast.push('Выбрано: Буду рецензировать'); break}\n            case 'maybe': {Toast.push('Выбрано: Могу рецензировать'); break}\n            case 'no': {Toast.push('Выбрано: Не могу рецензировать'); break}\n        }\n    }\n\n    private renderButtons(){\n        return(\n            <div style={{marginLeft: '20px'}}>\n                <Gapped>\n                <button\n                    className='requireCriticButton yes'\n                    value='yes'\n                    onClick={this.handleButton}\n                ><Typography variant='button'>Хочу рецензировать</Typography></button>\n                <button\n                    className='requireCriticButton maybe'\n                    value='maybe'\n                    onClick={this.handleButton}\n                ><Typography variant='button'>Могу рецензировать</Typography></button>\n                <button\n                    className='requireCriticButton no'\n                    value='no'\n                    onClick={this.handleButton}\n                ><Typography variant='button'>Не могу рецензировать</Typography></button>\n                </Gapped>\n            </div>\n        )\n    }\n\n    render(){\n        return this.renderButtons();\n    }\n}\n\nexport default Buttons"]},"metadata":{},"sourceType":"module"}