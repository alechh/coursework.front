{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar config_1 = tslib_1.__importDefault(require(\"./config\"));\n\nvar DayCellViewModel_1 = require(\"./DayCellViewModel\");\n\nvar utils_1 = require(\"./utils\");\n\nvar MonthViewModel =\n/** @class */\nfunction () {\n  function MonthViewModel(month, year) {\n    if (month < 0) {\n      year -= Math.ceil(-month / 12);\n      month = 12 + month % 12;\n    }\n\n    if (month > 11) {\n      year += Math.floor(month / 12);\n      month %= 12;\n    }\n\n    var daysCount = getMonthsDays(month, year);\n    var offset = getMonthOffset(month, year);\n    this.daysCount = daysCount;\n    this.offset = offset;\n    this.month = month;\n    this.year = year;\n    this.height = getMonthHeight(daysCount, offset);\n    this.isLastInYear = month === 11;\n    this.isFirstInYear = month === 0;\n    this.days = Array.from({\n      length: daysCount\n    }, function (_, i) {\n      var isWeekend = (i + getMonthOffset(month, year)) % 7 >= 5;\n      return DayCellViewModel_1.DayCellViewModel.create(i + 1, month, year, isWeekend);\n    });\n  }\n\n  MonthViewModel.create = utils_1.memo(function (month, year) {\n    return new MonthViewModel(month, year);\n  });\n  return MonthViewModel;\n}();\n\nexports.MonthViewModel = MonthViewModel;\nvar getMonthHeight = utils_1.memo(function (daysCount, offset) {\n  return Math.ceil((daysCount + offset) / 7) * config_1[\"default\"].DAY_HEIGHT + config_1[\"default\"].MONTH_TITLE_OFFSET_HEIGHT + config_1[\"default\"].MONTH_BOTTOM_MARGIN;\n});\nvar getMonthsDays = utils_1.memo(function (month, year) {\n  return new Date(year, month + 1, 0).getDate();\n});\nvar getMonthOffset = utils_1.memo(function (month, year) {\n  var day = new Date(year, month, 1).getDay() - 1;\n\n  if (day === -1) {\n    return 6;\n  }\n\n  return day;\n});","map":{"version":3,"sources":["C:/Users/Sasha/Documents/coursework.front/node_modules/@skbkontur/react-ui/components/Calendar/MonthViewModel.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","config_1","__importDefault","DayCellViewModel_1","utils_1","MonthViewModel","month","year","Math","ceil","floor","daysCount","getMonthsDays","offset","getMonthOffset","height","getMonthHeight","isLastInYear","isFirstInYear","days","Array","from","length","_","i","isWeekend","DayCellViewModel","create","memo","DAY_HEIGHT","MONTH_TITLE_OFFSET_HEIGHT","MONTH_BOTTOM_MARGIN","Date","getDate","day","getDay"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar config_1 = tslib_1.__importDefault(require(\"./config\"));\r\nvar DayCellViewModel_1 = require(\"./DayCellViewModel\");\r\nvar utils_1 = require(\"./utils\");\r\nvar MonthViewModel = /** @class */function () {\r\n  function MonthViewModel(month, year) {\r\n    if (month < 0) {\r\n      year -= Math.ceil(-month / 12);\r\n      month = 12 + month % 12;\r\n    }\r\n    if (month > 11) {\r\n      year += Math.floor(month / 12);\r\n      month %= 12;\r\n    }\r\n    var daysCount = getMonthsDays(month, year);\r\n    var offset = getMonthOffset(month, year);\r\n    this.daysCount = daysCount;\r\n    this.offset = offset;\r\n    this.month = month;\r\n    this.year = year;\r\n    this.height = getMonthHeight(daysCount, offset);\r\n    this.isLastInYear = month === 11;\r\n    this.isFirstInYear = month === 0;\r\n    this.days = Array.from({ length: daysCount }, function (_, i) {\r\n      var isWeekend = (i + getMonthOffset(month, year)) % 7 >= 5;\r\n      return DayCellViewModel_1.DayCellViewModel.create(i + 1, month, year, isWeekend);\r\n    });\r\n  }\r\n  MonthViewModel.create = utils_1.memo(function (month, year) {return new MonthViewModel(month, year);});\r\n  return MonthViewModel;\r\n}();\r\nexports.MonthViewModel = MonthViewModel;\r\nvar getMonthHeight = utils_1.memo(function (daysCount, offset) {\r\n  return Math.ceil((daysCount + offset) / 7) * config_1[\"default\"].DAY_HEIGHT +\r\n  config_1[\"default\"].MONTH_TITLE_OFFSET_HEIGHT +\r\n  config_1[\"default\"].MONTH_BOTTOM_MARGIN;\r\n});\r\nvar getMonthsDays = utils_1.memo(function (month, year) {return new Date(year, month + 1, 0).getDate();});\r\nvar getMonthOffset = utils_1.memo(function (month, year) {\r\n  var day = new Date(year, month, 1).getDay() - 1;\r\n  if (day === -1) {\r\n    return 6;\r\n  }\r\n  return day;\r\n});"]},"metadata":{},"sourceType":"script"}