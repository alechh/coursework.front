{"ast":null,"code":"var _jsxFileName = \"/home/aleksandr/coursework.front/src/Components/MainWindow/MainWindowComponents/Content/RequireCriticDetail/Components/Buttons.tsx\";\nimport React, { Component } from 'react';\nimport Gapped from '@skbkontur/react-ui/Gapped';\nimport Button from '@skbkontur/react-ui/Button';\nimport './Buttons.css';\nimport Toast from '@skbkontur/react-ui/Toast';\n\nclass Buttons extends Component {\n  constructor(props) {\n    super(props);\n\n    this.buttonYes = () => {\n      //---------------------------------------------\n      // Запрос \"Буду рецензировать\" по userId и id\n      //---------------------------------------------\n      Toast.push('Выбрано: Буду рецензировать');\n    };\n\n    this.buttonMayBe = () => {\n      //---------------------------------------------\n      // Запрос \"Могу рецензировать\" по userId и id\n      //---------------------------------------------\n      Toast.push('Выбрано: Могу рецензировать');\n    };\n\n    this.buttonNo = () => {\n      //---------------------------------------------\n      // Запрос \"Не могу рецензировать\" по userId и id\n      //---------------------------------------------\n      Toast.push('Выбрано: Не могу рецензировать');\n    };\n\n    this.state = {};\n  }\n\n  renderButtons() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Gapped, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      use: \"success\",\n      onClick: this.buttonYes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, \"\\u0411\\u0443\\u0434\\u0443 \\u0440\\u0435\\u0446\\u0435\\u043D\\u0437\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Button, {\n      use: \"primary\",\n      onClick: this.buttonMayBe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, \"\\u041C\\u043E\\u0433\\u0443 \\u0440\\u0435\\u0446\\u0435\\u043D\\u0437\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Button, {\n      use: \"danger\",\n      onClick: this.buttonNo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"\\u041D\\u0435 \\u0431\\u0443\\u0434\\u0443 \\u0440\\u0435\\u0446\\u0435\\u043D\\u0437\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\")));\n  }\n\n  render() {\n    return this.renderButtons();\n  }\n\n}\n\nexport default Buttons;","map":{"version":3,"sources":["/home/aleksandr/coursework.front/src/Components/MainWindow/MainWindowComponents/Content/RequireCriticDetail/Components/Buttons.tsx"],"names":["React","Component","Gapped","Button","Toast","Buttons","constructor","props","buttonYes","push","buttonMayBe","buttonNo","state","renderButtons","marginLeft","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;AAUA,MAAMC,OAAN,SAAsBJ,SAAtB,CAA4C;AACxCK,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;;AADsB,SAKlBC,SALkB,GAKN,MAAM;AACtB;AACA;AACA;AAEAJ,MAAAA,KAAK,CAACK,IAAN,CAAW,6BAAX;AACH,KAXyB;;AAAA,SAalBC,WAbkB,GAaJ,MAAM;AACxB;AACA;AACA;AAEAN,MAAAA,KAAK,CAACK,IAAN,CAAW,6BAAX;AACH,KAnByB;;AAAA,SAqBlBE,QArBkB,GAqBP,MAAM;AACrB;AACA;AACA;AAEAP,MAAAA,KAAK,CAACK,IAAN,CAAW,gCAAX;AACH,KA3ByB;;AAEtB,SAAKG,KAAL,GAAW,EAAX;AACH;;AA2BOC,EAAAA,aAAR,GAAuB;AACnB,wBACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,GAAG,EAAC,SADR;AAEI,MAAA,OAAO,EAAE,KAAKN,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHADJ,eAMI,oBAAC,MAAD;AACI,MAAA,GAAG,EAAC,SADR;AAEI,MAAA,OAAO,EAAE,KAAKE,WAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHANJ,eAWI,oBAAC,MAAD;AACI,MAAA,GAAG,EAAC,QADR;AAEI,MAAA,OAAO,EAAE,KAAKC,QAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8HAXJ,CADJ,CADJ;AAoBH;;AAEDI,EAAAA,MAAM,GAAE;AACJ,WAAO,KAAKF,aAAL,EAAP;AACH;;AAxDuC;;AA2D5C,eAAeR,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport Gapped from '@skbkontur/react-ui/Gapped'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@skbkontur/react-ui/Button'\nimport './Buttons.css'\nimport Toast from '@skbkontur/react-ui/Toast'\n\ninterface Props{\n    userId?: number,\n    id?: number\n}\n\ninterface State{\n}\n\nclass Buttons extends Component<Props,State>{\n    constructor(props : Props){\n        super(props);\n        this.state={}\n    }\n\n    private buttonYes = () => {\n        //---------------------------------------------\n        // Запрос \"Буду рецензировать\" по userId и id\n        //---------------------------------------------\n\n        Toast.push('Выбрано: Буду рецензировать') \n    }\n\n    private buttonMayBe = () => {\n        //---------------------------------------------\n        // Запрос \"Могу рецензировать\" по userId и id\n        //---------------------------------------------\n\n        Toast.push('Выбрано: Могу рецензировать') \n    }\n\n    private buttonNo = () => {\n        //---------------------------------------------\n        // Запрос \"Не могу рецензировать\" по userId и id\n        //---------------------------------------------\n\n        Toast.push('Выбрано: Не могу рецензировать')\n    }\n\n\n    private renderButtons(){\n        return(\n            <div style={{marginLeft: '20px'}}>\n                <Gapped>\n                    <Button\n                        use='success'\n                        onClick={this.buttonYes}\n                    >Буду рецензировать</Button>\n\n                    <Button\n                        use='primary'\n                        onClick={this.buttonMayBe}\n                    >Могу рецензировать</Button>\n\n                    <Button\n                        use='danger'\n                        onClick={this.buttonNo}\n                    >Не буду рецензировать</Button>\n                </Gapped>\n            </div>\n        )\n    }\n\n    render(){\n        return this.renderButtons();\n    }\n}\n\nexport default Buttons"]},"metadata":{},"sourceType":"module"}