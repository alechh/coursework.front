{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sasha\\\\Documents\\\\coursework.front\\\\src\\\\Components\\\\Auth\\\\Login.tsx\";\nimport * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async () => {\n      const {\n        email,\n        password\n      } = this.state; //-----------------------------\n      // login-запрос, получаю токен\n      //-----------------------------\n\n      let token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'; //let decoded : {} = jwt_decode(token);\n\n      let user = {\n        firstName: 'Aleksandr',\n        lastName: 'Semenov',\n        isCritic: false,\n        role: 'curator',\n        userId: 1\n      };\n      this.props.auth(user, token);\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      logged: false\n    };\n  }\n\n  render() {\n    if (this.state.logged) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 20\n        }\n      }, \"logged in\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      type: \"email\",\n      label: \"Email\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      name: this.state.email,\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 44\n      }\n    })), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      type: \"password\",\n      label: \"Password\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      value: this.state.password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Sasha/Documents/coursework.front/src/Components/Auth/Login.tsx"],"names":["React","TextField","Button","Typography","Login","Component","constructor","props","handleSubmit","email","password","state","token","user","firstName","lastName","isCritic","role","userId","auth","logged","render","e","setState","target","value"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAoBA,eAAe,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAwD;AACnEC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;;AADsB,SA2ClBC,YA3CkB,GA2CH,YAAY;AAC/B,YAAM;AAACC,QAAAA,KAAD;AAAQC,QAAAA;AAAR,UAAoB,KAAKC,KAA/B,CAD+B,CAE/B;AACA;AACA;;AACA,UAAIC,KAAc,GAAE,6JAApB,CAL+B,CAM/B;;AACA,UAAIC,IAAY,GAAG;AACfC,QAAAA,SAAS,EAAG,WADG;AAEfC,QAAAA,QAAQ,EAAG,SAFI;AAGfC,QAAAA,QAAQ,EAAG,KAHI;AAIfC,QAAAA,IAAI,EAAE,SAJS;AAKfC,QAAAA,MAAM,EAAG;AALM,OAAnB;AAQA,WAAKX,KAAL,CAAWY,IAAX,CAAgBN,IAAhB,EAAsBD,KAAtB;AACH,KA3DyB;;AAEtB,SAAKD,KAAL,GAAa;AACTF,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTU,MAAAA,MAAM,EAAE;AAHC,KAAb;AAKH;;AAEDC,EAAAA,MAAM,GAAgB;AAClB,QAAI,KAAKV,KAAL,CAAWS,MAAf,EAAuB;AACnB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACH;;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,eAEI;AAAM,MAAA,QAAQ,EAAE,KAAKZ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuB,oBAAC,SAAD;AACnB,MAAA,QAAQ,MADW;AAEnB,MAAA,IAAI,EAAC,OAFc;AAGnB,MAAA,KAAK,EAAC,OAHa;AAInB,MAAA,OAAO,EAAC,UAJW;AAKnB,MAAA,MAAM,EAAC,QALY;AAMnB,MAAA,IAAI,EAAE,KAAKG,KAAL,CAAWF,KANE;AAOnB,MAAA,QAAQ,EAAEa,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAEd,QAAAA,KAAK,EAAEa,CAAC,CAACE,MAAF,CAASC;AAAlB,OAAd,CAPI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB,CADJ,eAWI,oBAAC,SAAD;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAC,UAHV;AAII,MAAA,OAAO,EAAC,UAJZ;AAKI,MAAA,MAAM,EAAC,QALX;AAMI,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWD,QANtB;AAOI,MAAA,QAAQ,EAAEY,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAEb,QAAAA,QAAQ,EAAEY,CAAC,CAACE,MAAF,CAASC;AAArB,OAAd,CAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,eAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,eAqBI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,OAAO,EAAC,WAA7B;AAAyC,MAAA,KAAK,EAAC,SAA/C;AAAyD,MAAA,IAAI,EAAC,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCArBJ,CAFJ,CADJ;AA4BH;;AA1CkE","sourcesContent":["import * as React from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ninterface ILoginState {\r\n    email: string;\r\n    password: string;\r\n    logged: boolean;\r\n}\r\n\r\ninterface IUser{\r\n    firstName?: string,\r\n    lastName?: string,\r\n    isCritic?: boolean,\r\n    role?: string,\r\n    userId?: number\r\n}\r\n\r\ninterface Props{\r\n    auth (user : IUser, token : string) : void\r\n}\r\n\r\nexport default class Login extends React.Component<Props, ILoginState> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            logged: false\r\n        };\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        if (this.state.logged) {\r\n            return <p>logged in</p>\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <Typography variant=\"h6\" gutterBottom>Войти</Typography>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className='white'><TextField\r\n                        required\r\n                        type=\"email\"\r\n                        label=\"Email\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        name={this.state.email}\r\n                        onChange={e => this.setState({ email: e.target.value })}\r\n                    /></div>\r\n                    {/* <br /> */}\r\n                    <TextField\r\n                        required\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        value={this.state.password}\r\n                        onChange={e => this.setState({ password: e.target.value})}\r\n                    />\r\n                    <br />\r\n                    <Button size=\"small\" variant=\"contained\" color=\"primary\" type=\"submit\">Войти</Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private handleSubmit = async () => {\r\n        const {email, password} = this.state;\r\n        //-----------------------------\r\n        // login-запрос, получаю токен\r\n        //-----------------------------\r\n        let token : string ='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'\r\n        //let decoded : {} = jwt_decode(token);\r\n        let user : IUser = {\r\n            firstName : 'Aleksandr',\r\n            lastName : 'Semenov',\r\n            isCritic : false,\r\n            role: 'curator',\r\n            userId : 1\r\n        }\r\n\r\n        this.props.auth(user, token)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}