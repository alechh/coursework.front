{"ast":null,"code":"var _jsxFileName = \"/home/aleksandr/coursework.front/src/Components/MainWindow/MainWindowComponents/Content/RequestsList/RequestsList.tsx\";\nimport React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Center from '@skbkontur/react-ui/Center';\nimport Spinner from '@skbkontur/react-ui/Spinner';\nimport './RequestsList.css';\n\nclass RequestsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.whichData = () => {\n      switch (this.props.role) {\n        case 'student':\n          {\n            const axios = require('axios').default;\n\n            axios.get('../api/course_works/applications/active', this.props.token).then(response => {\n              this.setState({\n                data: response\n              });\n            });\n            break; //return (this.setState({data : requestsData}))\n          }\n\n        case 'teacher':\n          {\n            const axios = require('axios').default;\n\n            axios.get('../api/course_works/applications/active', this.props.token).then(response => {\n              this.setState({\n                data: response\n              });\n            });\n            break; //return (this.setState({data : teacherRequests}))\n          }\n\n        case 'curator':\n          {\n            const axios = require('axios').default;\n\n            axios.get('../api/course_works/applications/active', this.props.token).then(response => {\n              this.setState({\n                data: response\n              });\n            });\n            break; //return (this.setState({data : curatorRequests}))\n          }\n      }\n    };\n\n    this.state = {\n      data: [{}],\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    this.whichData();\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  renderTitle(item) {\n    switch (this.props.role) {\n      case 'student':\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"inline req_title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          variant: \"h6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 58\n          }\n        }, item.title));\n\n      case 'teacher':\n        {\n          //return <div className='inline req_title'><Typography variant='h6'>{item.title}, {item.student}, {item.course} курс</Typography></div>\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"inline req_title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 24\n            }\n          }, /*#__PURE__*/React.createElement(Typography, {\n            variant: \"h6\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 58\n            }\n          }, item.title));\n        }\n\n      case 'curator':\n        {\n          //return <div className='inline req_title'><Typography variant='h6'>{item.title}, {item.student}, {item.course} курс</Typography></div>\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"inline req_title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 24\n            }\n          }, /*#__PURE__*/React.createElement(Typography, {\n            variant: \"h6\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 58\n            }\n          }, item.title));\n        }\n    }\n  }\n\n  buttonValue(item) {\n    var _item$id;\n\n    switch (this.props.role) {\n      case 'student':\n        return 'request_' + ((_item$id = item.id) === null || _item$id === void 0 ? void 0 : _item$id.toString());\n\n      case 'teacher':\n        {\n          //return 'st' + item.studentId?.toString() + '_request' + item.id!.toString()\n          return 'request' + item.id.toString();\n        }\n\n      case 'curator':\n        return 'request' + item.id.toString();\n    }\n  }\n\n  renderItem(item) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"requestItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, this.renderTitle(item), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"buttonMore inline\",\n      value: this.buttonValue(item),\n      onClick: this.props.changePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 18\n      }\n    }, \"\\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u0435\\u0435\")));\n  }\n\n  renderRequestsList() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, this.state.data.map(item => this.renderItem(item)));\n  }\n\n  renderEmptyList() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: '10vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, \"\\u041D\\u0435\\u0442 \\u0437\\u0430\\u044F\\u0432\\u043E\\u043A\"));\n  }\n\n  isEmpty(obj) {\n    return Object.keys(obj[0]).length === 0;\n  }\n\n  render() {\n    return !this.state.isLoading ? !this.isEmpty(this.state.data) ? this.renderRequestsList() : this.renderEmptyList() : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '60vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Center, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      type: \"big\",\n      caption: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 56\n      }\n    })));\n  }\n\n}\n\nexport default RequestsList;","map":{"version":3,"sources":["/home/aleksandr/coursework.front/src/Components/MainWindow/MainWindowComponents/Content/RequestsList/RequestsList.tsx"],"names":["React","Component","Typography","Center","Spinner","RequestsList","constructor","props","whichData","role","axios","require","default","get","token","then","response","setState","data","state","isLoading","componentDidMount","renderTitle","item","title","buttonValue","id","toString","renderItem","changePage","renderRequestsList","map","renderEmptyList","textAlign","marginTop","isEmpty","obj","Object","keys","length","render","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Center from '@skbkontur/react-ui/Center'\nimport Spinner from '@skbkontur/react-ui/Spinner'\nimport Button from '@skbkontur/react-ui/Button'\nimport './RequestsList.css'\nimport axios from 'axios'\n\n//student\nimport requestsData from '../../../../../TestData/Student/requestsData'\n\n//teacher \nimport teacherRequests from '../../../../../TestData/Teacher/requestsData'\n\n//curator \nimport curatorRequests from '../../../../../TestData/Curator/requestsData'\n\ninterface Idata{\n    title?: string,\n    //student?: string,\n    //course?: number,\n    //teacher?: string,\n    //description?: string,\n    id?: number,\n    //studentId?: number\n    date?: string,\n    courseWorkId?: number\n}\n\ninterface Props{\n    changePage(event : React.MouseEvent<HTMLButtonElement>) : void,\n    role?:string,\n    token : string\n}\n\ninterface State{\n    data : Idata[],\n    isLoading?: boolean\n}\n\nclass RequestsList extends Component<Props,State>{\n    constructor(props : Props){\n        super(props);\n        this.state={\n            data : [{}],\n            isLoading : false\n        }\n    }\n\n    componentDidMount(){\n        this.setState({isLoading : true})\n        this.whichData()\n        this.setState({isLoading : false})\n    }\n\n    private whichData = () => {\n        switch(this.props.role){\n            case 'student':{\n                const axios = require('axios').default\n                axios.get('../api/course_works/applications/active', this.props.token)\n                .then((response : Idata[]) => {\n                    this.setState({data : response})\n                })\n                break\n\n                //return (this.setState({data : requestsData}))\n            }\n            case 'teacher':{\n                const axios = require('axios').default\n                axios.get('../api/course_works/applications/active', this.props.token)\n                .then((response : Idata[]) => {\n                    this.setState({data : response})\n                })\n                break\n                \n                //return (this.setState({data : teacherRequests}))\n            }\n            case 'curator':{\n                const axios = require('axios').default\n                axios.get('../api/course_works/applications/active', this.props.token)\n                .then((response : Idata[]) => {\n                    this.setState({data : response})\n                })\n                break\n\n                //return (this.setState({data : curatorRequests}))\n            }\n        }\n    }\n\n\n    private renderTitle(item : Idata){\n        switch(this.props.role){\n            case 'student':\n                return <div className='inline req_title'><Typography variant='h6'>{item.title}</Typography></div>\n            case 'teacher':{\n                //return <div className='inline req_title'><Typography variant='h6'>{item.title}, {item.student}, {item.course} курс</Typography></div>\n                return <div className='inline req_title'><Typography variant='h6'>{item.title}</Typography></div>\n            }\n                \n            case 'curator':{\n                //return <div className='inline req_title'><Typography variant='h6'>{item.title}, {item.student}, {item.course} курс</Typography></div>\n                return <div className='inline req_title'><Typography variant='h6'>{item.title}</Typography></div>\n            }\n        }\n    }\n\n    private buttonValue(item : Idata){\n        switch(this.props.role){\n            case 'student':\n                return 'request_' + item.id?.toString()\n            case 'teacher':{\n                //return 'st' + item.studentId?.toString() + '_request' + item.id!.toString()\n                return 'request' + item.id!.toString()\n            }\n            case 'curator':\n                return 'request' + item.id!.toString()\n        }\n    }\n\n    private renderItem(item : Idata){\n        return(\n            <div className='requestItem'>\n                {this.renderTitle(item)}\n                <button\n                    className='buttonMore inline'\n                    value={this.buttonValue(item)} \n                    onClick={this.props.changePage} \n                ><Typography variant='button'>Подробнее</Typography>\n                </button>\n            </div>\n            )\n    }\n\n    private renderRequestsList(){\n        return(\n            <div>\n                {this.state.data.map(item => this.renderItem(item))}\n            </div>\n        )\n    }\n\n    private renderEmptyList(){\n        return(\n            <div style={{textAlign:\"center\", marginTop:'10vh'}}>\n                <Typography variant='h5'>Нет заявок</Typography>\n            </div>\n        )\n    }\n\n    private isEmpty(obj : Idata[]) {\n        return Object.keys(obj[0]).length === 0;\n    }\n\n    render(){\n        return(\n            !this.state.isLoading?\n                !this.isEmpty(this.state.data)?\n                    this.renderRequestsList()\n                : this.renderEmptyList()\n            :   <div style={{height : '60vh'}}><Center><Spinner type='big' caption='Загрузка'/></Center></div>\n        )\n    }\n}\n\nexport default RequestsList"]},"metadata":{},"sourceType":"module"}