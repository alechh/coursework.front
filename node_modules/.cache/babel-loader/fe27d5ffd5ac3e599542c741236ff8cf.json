{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = tslib_1.__importStar(require(\"react\"));\n\nvar PropTypes = tslib_1.__importStar(require(\"prop-types\"));\n\nvar PopupHelper_1 = tslib_1.__importDefault(require(\"./PopupHelper\"));\n\nvar PopupPin_module_less_1 = tslib_1.__importDefault(require(\"./PopupPin.module.css\"));\n\nvar borderStyles = {\n  position: 'absolute',\n  borderStyle: 'solid',\n  borderTopColor: 'transparent',\n  borderBottomColor: 'transparent',\n  borderLeftColor: 'transparent',\n  borderRightColor: 'transparent'\n};\n\nvar PopupPin =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(PopupPin, _super);\n\n  function PopupPin() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PopupPin.prototype.render = function () {\n    if (!this.props.popupElement) {\n      return null;\n    }\n\n    var options = this._getPinOptions(PopupHelper_1[\"default\"].getElementAbsoluteRect(this.props.popupElement), PopupHelper_1[\"default\"].getPositionObject(this.props.popupPosition), this.props.size, this.props.offset, this.props.borderWidth);\n\n    var styleOuter = this._getOuterStyle(options.activeBorder, options.outerSize, this.props.borderColor);\n\n    var styleInner = this._getInnerStyle(options.activeBorder, this.props.size, this.props.backgroundColor);\n\n    var styleWrapper = this._getWrapperStyle(options.outerLeft, options.outerTop, options.outerSize);\n\n    return React.createElement(\"div\", {\n      className: PopupPin_module_less_1[\"default\"].wrapper,\n      style: styleWrapper\n    }, React.createElement(\"div\", {\n      style: styleOuter\n    }, React.createElement(\"div\", {\n      style: styleInner\n    })));\n  };\n\n  PopupPin.prototype._getPopupOppositeDirection = function () {\n    var popupDirection = PopupHelper_1[\"default\"].getPositionObject(this.props.popupPosition).direction;\n\n    switch (popupDirection) {\n      case 'top':\n        return 'bottom';\n\n      case 'bottom':\n        return 'top';\n\n      case 'left':\n        return 'right';\n\n      case 'right':\n        return 'left';\n\n      default:\n        throw new TypeError('Unknown direction ' + popupDirection);\n    }\n  };\n\n  PopupPin.prototype._getWrapperStyle = function (left, top, borderWitdth) {\n    var _a, _b;\n\n    var direction = this._getPopupOppositeDirection();\n\n    switch (direction) {\n      case 'top':\n      case 'bottom':\n        return _a = {}, _a[direction] = -borderWitdth + 'px', _a.left = left + 'px', _a.width = borderWitdth * 2 + 'px', _a.height = borderWitdth + 'px', _a;\n\n      case 'left':\n      case 'right':\n        return _b = {}, _b[direction] = -borderWitdth + 'px', _b.top = top + 'px', _b.height = borderWitdth * 2 + 'px', _b.width = borderWitdth + 'px', _b;\n\n      default:\n        throw new TypeError('Unknown direction ' + direction);\n    }\n  };\n\n  PopupPin.prototype._getOuterStyle = function (activeBorder, borderWitdth, borderColor) {\n    var _a, _b;\n\n    var direction = this._getPopupOppositeDirection();\n\n    switch (direction) {\n      case 'top':\n      case 'bottom':\n        return tslib_1.__assign({}, borderStyles, (_a = {}, _a[direction] = -borderWitdth + 'px', _a.left = '0px', _a.borderWidth = borderWitdth + 'px', _a['border' + activeBorder + 'Color'] = borderColor, _a));\n\n      case 'left':\n      case 'right':\n        return tslib_1.__assign({}, borderStyles, (_b = {}, _b[direction] = -borderWitdth + 'px', _b.top = '0px', _b.borderWidth = borderWitdth + 'px', _b['border' + activeBorder + 'Color'] = borderColor, _b));\n\n      default:\n        throw new TypeError('Unknown direction ' + direction);\n    }\n  };\n\n  PopupPin.prototype._getInnerStyle = function (activeBorder, borderWitdth, borderColor) {\n    var _a, _b;\n\n    var direction = this._getPopupOppositeDirection();\n\n    switch (direction) {\n      case 'top':\n      case 'bottom':\n        return tslib_1.__assign({}, borderStyles, (_a = {}, _a[direction] = -borderWitdth + 2 + 'px', _a.left = -borderWitdth + 'px', _a.borderWidth = borderWitdth + 'px', _a['border' + activeBorder + 'Color'] = borderColor, _a));\n\n      case 'left':\n      case 'right':\n        return tslib_1.__assign({}, borderStyles, (_b = {}, _b[direction] = -borderWitdth + 2 + 'px', _b.top = -borderWitdth + 'px', _b.borderWidth = borderWitdth + 'px', _b['border' + activeBorder + 'Color'] = borderColor, _b));\n\n      default:\n        throw new TypeError('Unknown direction ' + direction);\n    }\n  };\n\n  PopupPin.prototype._getPinOptions = function (popupRect, popupPosition, pinSize, pinOffset, borderWidth) {\n    var bordersDelta = 2 * borderWidth;\n    var outerSize = pinSize + bordersDelta;\n\n    switch (popupPosition.direction) {\n      case 'top':\n        return {\n          outerTop: popupRect.height,\n          outerLeft: this._getPinLeftCoordinate(popupRect, popupPosition.align, pinSize, pinOffset) - bordersDelta,\n          innerTop: -outerSize,\n          innerLeft: -outerSize + bordersDelta,\n          activeBorder: 'Top',\n          outerSize: outerSize\n        };\n\n      case 'bottom':\n        return {\n          outerTop: -2 * outerSize,\n          outerLeft: this._getPinLeftCoordinate(popupRect, popupPosition.align, pinSize, pinOffset) - bordersDelta,\n          innerTop: -outerSize + 2 * bordersDelta,\n          innerLeft: -outerSize + bordersDelta,\n          activeBorder: 'Bottom',\n          outerSize: outerSize\n        };\n\n      case 'left':\n        return {\n          outerTop: this._getPinTopCoordinate(popupRect, popupPosition.align, pinSize, pinOffset) - bordersDelta,\n          outerLeft: popupRect.width,\n          innerTop: -outerSize + bordersDelta,\n          innerLeft: -outerSize,\n          activeBorder: 'Left',\n          outerSize: outerSize\n        };\n\n      case 'right':\n        return {\n          outerTop: this._getPinTopCoordinate(popupRect, popupPosition.align, pinSize, pinOffset) - bordersDelta,\n          outerLeft: -2 * outerSize,\n          innerTop: -outerSize + bordersDelta,\n          innerLeft: -outerSize + 2 * bordersDelta,\n          activeBorder: 'Right',\n          outerSize: outerSize\n        };\n\n      default:\n        throw new Error('Direction must be one of top, right, bottom, left');\n    }\n  };\n\n  PopupPin.prototype._getPinTopCoordinate = function (popupRect, align, pinHeight, pinOffset) {\n    switch (align) {\n      case 'top':\n        return pinOffset;\n\n      case 'middle':\n        return popupRect.height / 2 - pinHeight;\n\n      case 'bottom':\n        return popupRect.height - pinOffset - 2 * pinHeight;\n\n      default:\n        throw new Error(\"Unxpected align '\" + align + \"'\");\n    }\n  };\n\n  PopupPin.prototype._getPinLeftCoordinate = function (popupRect, align, pinHeight, pinOffset) {\n    switch (align) {\n      case 'left':\n        return pinOffset;\n\n      case 'center':\n        return popupRect.width / 2 - pinHeight;\n\n      case 'right':\n        return popupRect.width - pinOffset - 2 * pinHeight;\n\n      default:\n        throw new Error(\"Unxpected align '\" + align + \"'\");\n    }\n  };\n\n  PopupPin.__KONTUR_REACT_UI__ = 'PopupPin';\n  PopupPin.propTypes = {\n    /**\r\n                          * Цвет фон пина\r\n                          */\n    backgroundColor: PropTypes.string,\n\n    /**\r\n                                        * Цвет границы пина\r\n                                        */\n    borderColor: PropTypes.string,\n\n    /**\r\n                                    * Ширина границы пина\r\n                                    */\n    borderWidth: PropTypes.number,\n\n    /**\r\n                                    * Смещение пина от края попапа. Край задаётся в пропе position вторым словом\r\n                                    */\n    offset: PropTypes.number,\n\n    /**\r\n                               * Ссылка на попап\r\n                               */\n    popupElement: PropTypes.any,\n\n    /**\r\n                                  * Позиция поапа, по которой будет вычеслено положение пина\r\n                                  */\n    popupPosition: PropTypes.string,\n\n    /**\r\n                                      * Сторона пина без учёта границы.\r\n                                      * Пин представляет собой равносторонний треугольник, высота от попапа\r\n                                      * до \"носика\" пина будет соответствовать формуле (size* √3)/2\r\n                                      */\n    size: PropTypes.number\n  };\n  return PopupPin;\n}(React.Component);\n\nexports[\"default\"] = PopupPin;","map":{"version":3,"sources":["/home/aleksandr/coursework.front/node_modules/@skbkontur/react-ui/components/Popup/PopupPin.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","React","__importStar","PropTypes","PopupHelper_1","__importDefault","PopupPin_module_less_1","borderStyles","position","borderStyle","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","PopupPin","_super","__extends","apply","arguments","prototype","render","props","popupElement","options","_getPinOptions","getElementAbsoluteRect","getPositionObject","popupPosition","size","offset","borderWidth","styleOuter","_getOuterStyle","activeBorder","outerSize","borderColor","styleInner","_getInnerStyle","backgroundColor","styleWrapper","_getWrapperStyle","outerLeft","outerTop","createElement","className","wrapper","style","_getPopupOppositeDirection","popupDirection","direction","TypeError","left","top","borderWitdth","_a","_b","width","height","__assign","popupRect","pinSize","pinOffset","bordersDelta","_getPinLeftCoordinate","align","innerTop","innerLeft","_getPinTopCoordinate","Error","pinHeight","__KONTUR_REACT_UI__","propTypes","string","number","any","Component"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar React = tslib_1.__importStar(require(\"react\"));\nvar PropTypes = tslib_1.__importStar(require(\"prop-types\"));\nvar PopupHelper_1 = tslib_1.__importDefault(require(\"./PopupHelper\"));\nvar PopupPin_module_less_1 = tslib_1.__importDefault(require(\"./PopupPin.module.css\"));\nvar borderStyles = {\n  position: 'absolute',\n  borderStyle: 'solid',\n  borderTopColor: 'transparent',\n  borderBottomColor: 'transparent',\n  borderLeftColor: 'transparent',\n  borderRightColor: 'transparent' };\n\nvar PopupPin = /** @class */function (_super) {\n  tslib_1.__extends(PopupPin, _super);\n  function PopupPin() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PopupPin.prototype.render = function () {\n    if (!this.props.popupElement) {\n      return null;\n    }\n    var options = this._getPinOptions(PopupHelper_1[\"default\"].getElementAbsoluteRect(this.props.popupElement), PopupHelper_1[\"default\"].getPositionObject(this.props.popupPosition), this.props.size, this.props.offset, this.props.borderWidth);\n    var styleOuter = this._getOuterStyle(options.activeBorder, options.outerSize, this.props.borderColor);\n    var styleInner = this._getInnerStyle(options.activeBorder, this.props.size, this.props.backgroundColor);\n    var styleWrapper = this._getWrapperStyle(options.outerLeft, options.outerTop, options.outerSize);\n    return React.createElement(\"div\", { className: PopupPin_module_less_1[\"default\"].wrapper, style: styleWrapper },\n    React.createElement(\"div\", { style: styleOuter },\n    React.createElement(\"div\", { style: styleInner })));\n  };\n  PopupPin.prototype._getPopupOppositeDirection = function () {\n    var popupDirection = PopupHelper_1[\"default\"].getPositionObject(this.props.popupPosition).direction;\n    switch (popupDirection) {\n      case 'top':\n        return 'bottom';\n      case 'bottom':\n        return 'top';\n      case 'left':\n        return 'right';\n      case 'right':\n        return 'left';\n      default:\n        throw new TypeError('Unknown direction ' + popupDirection);}\n\n  };\n  PopupPin.prototype._getWrapperStyle = function (left, top, borderWitdth) {\n    var _a, _b;\n    var direction = this._getPopupOppositeDirection();\n    switch (direction) {\n      case 'top':\n      case 'bottom':\n        return _a = {},\n        _a[direction] = -borderWitdth + 'px',\n        _a.left = left + 'px',\n        _a.width = borderWitdth * 2 + 'px',\n        _a.height = borderWitdth + 'px',\n        _a;\n      case 'left':\n      case 'right':\n        return _b = {},\n        _b[direction] = -borderWitdth + 'px',\n        _b.top = top + 'px',\n        _b.height = borderWitdth * 2 + 'px',\n        _b.width = borderWitdth + 'px',\n        _b;\n      default:\n        throw new TypeError('Unknown direction ' + direction);}\n\n  };\n  PopupPin.prototype._getOuterStyle = function (activeBorder, borderWitdth, borderColor) {\n    var _a, _b;\n    var direction = this._getPopupOppositeDirection();\n    switch (direction) {\n      case 'top':\n      case 'bottom':\n        return tslib_1.__assign({}, borderStyles, (_a = {}, _a[direction] = -borderWitdth + 'px', _a.left = '0px', _a.borderWidth = borderWitdth + 'px', _a['border' + activeBorder + 'Color'] = borderColor, _a));\n      case 'left':\n      case 'right':\n        return tslib_1.__assign({}, borderStyles, (_b = {}, _b[direction] = -borderWitdth + 'px', _b.top = '0px', _b.borderWidth = borderWitdth + 'px', _b['border' + activeBorder + 'Color'] = borderColor, _b));\n      default:\n        throw new TypeError('Unknown direction ' + direction);}\n\n  };\n  PopupPin.prototype._getInnerStyle = function (activeBorder, borderWitdth, borderColor) {\n    var _a, _b;\n    var direction = this._getPopupOppositeDirection();\n    switch (direction) {\n      case 'top':\n      case 'bottom':\n        return tslib_1.__assign({}, borderStyles, (_a = {}, _a[direction] = -borderWitdth + 2 + 'px', _a.left = -borderWitdth + 'px', _a.borderWidth = borderWitdth + 'px', _a['border' + activeBorder + 'Color'] = borderColor, _a));\n      case 'left':\n      case 'right':\n        return tslib_1.__assign({}, borderStyles, (_b = {}, _b[direction] = -borderWitdth + 2 + 'px', _b.top = -borderWitdth + 'px', _b.borderWidth = borderWitdth + 'px', _b['border' + activeBorder + 'Color'] = borderColor, _b));\n      default:\n        throw new TypeError('Unknown direction ' + direction);}\n\n  };\n  PopupPin.prototype._getPinOptions = function (popupRect, popupPosition, pinSize, pinOffset, borderWidth) {\n    var bordersDelta = 2 * borderWidth;\n    var outerSize = pinSize + bordersDelta;\n    switch (popupPosition.direction) {\n      case 'top':\n        return {\n          outerTop: popupRect.height,\n          outerLeft: this._getPinLeftCoordinate(popupRect, popupPosition.align, pinSize, pinOffset) - bordersDelta,\n          innerTop: -outerSize,\n          innerLeft: -outerSize + bordersDelta,\n          activeBorder: 'Top',\n          outerSize: outerSize };\n\n      case 'bottom':\n        return {\n          outerTop: -2 * outerSize,\n          outerLeft: this._getPinLeftCoordinate(popupRect, popupPosition.align, pinSize, pinOffset) - bordersDelta,\n          innerTop: -outerSize + 2 * bordersDelta,\n          innerLeft: -outerSize + bordersDelta,\n          activeBorder: 'Bottom',\n          outerSize: outerSize };\n\n      case 'left':\n        return {\n          outerTop: this._getPinTopCoordinate(popupRect, popupPosition.align, pinSize, pinOffset) - bordersDelta,\n          outerLeft: popupRect.width,\n          innerTop: -outerSize + bordersDelta,\n          innerLeft: -outerSize,\n          activeBorder: 'Left',\n          outerSize: outerSize };\n\n      case 'right':\n        return {\n          outerTop: this._getPinTopCoordinate(popupRect, popupPosition.align, pinSize, pinOffset) - bordersDelta,\n          outerLeft: -2 * outerSize,\n          innerTop: -outerSize + bordersDelta,\n          innerLeft: -outerSize + 2 * bordersDelta,\n          activeBorder: 'Right',\n          outerSize: outerSize };\n\n      default:\n        throw new Error('Direction must be one of top, right, bottom, left');}\n\n  };\n  PopupPin.prototype._getPinTopCoordinate = function (popupRect, align, pinHeight, pinOffset) {\n    switch (align) {\n      case 'top':\n        return pinOffset;\n      case 'middle':\n        return popupRect.height / 2 - pinHeight;\n      case 'bottom':\n        return popupRect.height - pinOffset - 2 * pinHeight;\n      default:\n        throw new Error(\"Unxpected align '\" + align + \"'\");}\n\n  };\n  PopupPin.prototype._getPinLeftCoordinate = function (popupRect, align, pinHeight, pinOffset) {\n    switch (align) {\n      case 'left':\n        return pinOffset;\n      case 'center':\n        return popupRect.width / 2 - pinHeight;\n      case 'right':\n        return popupRect.width - pinOffset - 2 * pinHeight;\n      default:\n        throw new Error(\"Unxpected align '\" + align + \"'\");}\n\n  };\n  PopupPin.__KONTUR_REACT_UI__ = 'PopupPin';\n  PopupPin.propTypes = {\n    /**\r\n                          * Цвет фон пина\r\n                          */\n    backgroundColor: PropTypes.string,\n    /**\r\n                                        * Цвет границы пина\r\n                                        */\n    borderColor: PropTypes.string,\n    /**\r\n                                    * Ширина границы пина\r\n                                    */\n    borderWidth: PropTypes.number,\n    /**\r\n                                    * Смещение пина от края попапа. Край задаётся в пропе position вторым словом\r\n                                    */\n    offset: PropTypes.number,\n    /**\r\n                               * Ссылка на попап\r\n                               */\n    popupElement: PropTypes.any,\n    /**\r\n                                  * Позиция поапа, по которой будет вычеслено положение пина\r\n                                  */\n    popupPosition: PropTypes.string,\n    /**\r\n                                      * Сторона пина без учёта границы.\r\n                                      * Пин представляет собой равносторонний треугольник, высота от попапа\r\n                                      * до \"носика\" пина будет соответствовать формуле (size* √3)/2\r\n                                      */\n    size: PropTypes.number };\n\n  return PopupPin;\n}(React.Component);\nexports[\"default\"] = PopupPin;"]},"metadata":{},"sourceType":"script"}