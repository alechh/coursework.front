{"ast":null,"code":"/**\r\n * Based heavily on https://github.com/webpack/webpack/blob/\r\n *  c0afdf9c6abc1dd70707c594e473802a566f7b6e/hot/only-dev-server.js\r\n * Original copyright Tobias Koppers @sokra (MIT license)\r\n */\n\n/* global window __webpack_hash__ */\nif (!module.hot) {\n  throw new Error('[HMR] Hot Module Replacement is disabled.');\n}\n\nvar hmrDocsUrl = 'https://webpack.js.org/concepts/hot-module-replacement/'; // eslint-disable-line max-len\n\nvar lastHash;\nvar failureStatuses = {\n  abort: 1,\n  fail: 1\n};\nvar applyOptions = {\n  ignoreUnaccepted: true,\n  ignoreDeclined: true,\n  ignoreErrored: true,\n  onUnaccepted: function (data) {\n    console.warn('Ignored an update to unaccepted module ' + data.chain.join(' -> '));\n  },\n  onDeclined: function (data) {\n    console.warn('Ignored an update to declined module ' + data.chain.join(' -> '));\n  },\n  onErrored: function (data) {\n    console.error(data.error);\n    console.warn('Ignored an error while updating module ' + data.moduleId + ' (' + data.type + ')');\n  }\n};\n\nfunction upToDate(hash) {\n  if (hash) lastHash = hash;\n  return lastHash == __webpack_hash__;\n}\n\nmodule.exports = function (hash, moduleMap, options) {\n  var reload = options.reload;\n\n  if (!upToDate(hash) && module.hot.status() == 'idle') {\n    if (options.log) console.log('[HMR] Checking for updates on the server...');\n    check();\n  }\n\n  function check() {\n    var cb = function (err, updatedModules) {\n      if (err) return handleError(err);\n\n      if (!updatedModules) {\n        if (options.warn) {\n          console.warn('[HMR] Cannot find update (Full reload needed)');\n          console.warn('[HMR] (Probably because of restarting the server)');\n        }\n\n        performReload();\n        return null;\n      }\n\n      var applyCallback = function (applyErr, renewedModules) {\n        if (applyErr) return handleError(applyErr);\n        if (!upToDate()) check();\n        logUpdates(updatedModules, renewedModules);\n      };\n\n      var applyResult = module.hot.apply(applyOptions, applyCallback); // webpack 2 promise\n\n      if (applyResult && applyResult.then) {\n        // HotModuleReplacement.runtime.js refers to the result as `outdatedModules`\n        applyResult.then(function (outdatedModules) {\n          applyCallback(null, outdatedModules);\n        });\n        applyResult.catch(applyCallback);\n      }\n    };\n\n    var result = module.hot.check(false, cb); // webpack 2 promise\n\n    if (result && result.then) {\n      result.then(function (updatedModules) {\n        cb(null, updatedModules);\n      });\n      result.catch(cb);\n    }\n  }\n\n  function logUpdates(updatedModules, renewedModules) {\n    var unacceptedModules = updatedModules.filter(function (moduleId) {\n      return renewedModules && renewedModules.indexOf(moduleId) < 0;\n    });\n\n    if (unacceptedModules.length > 0) {\n      if (options.warn) {\n        console.warn(\"[HMR] The following modules couldn't be hot updated: \" + '(Full reload needed)\\n' + 'This is usually because the modules which have changed ' + '(and their parents) do not know how to hot reload themselves. ' + 'See ' + hmrDocsUrl + ' for more details.');\n        unacceptedModules.forEach(function (moduleId) {\n          console.warn('[HMR]  - ' + (moduleMap[moduleId] || moduleId));\n        });\n      }\n\n      performReload();\n      return;\n    }\n\n    if (options.log) {\n      if (!renewedModules || renewedModules.length === 0) {\n        console.log('[HMR] Nothing hot updated.');\n      } else {\n        console.log('[HMR] Updated modules:');\n        renewedModules.forEach(function (moduleId) {\n          console.log('[HMR]  - ' + (moduleMap[moduleId] || moduleId));\n        });\n      }\n\n      if (upToDate()) {\n        console.log('[HMR] App is up to date.');\n      }\n    }\n  }\n\n  function handleError(err) {\n    if (module.hot.status() in failureStatuses) {\n      if (options.warn) {\n        console.warn('[HMR] Cannot check for update (Full reload needed)');\n        console.warn('[HMR] ' + (err.stack || err.message));\n      }\n\n      performReload();\n      return;\n    }\n\n    if (options.warn) {\n      console.warn('[HMR] Update check failed: ' + (err.stack || err.message));\n    }\n  }\n\n  function performReload() {\n    if (reload) {\n      if (options.warn) console.warn('[HMR] Reloading page');\n      window.location.reload();\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/Sasha/Documents/coursework.front/node_modules/webpack-hot-middleware/process-update.js"],"names":["module","hot","Error","hmrDocsUrl","lastHash","failureStatuses","abort","fail","applyOptions","ignoreUnaccepted","ignoreDeclined","ignoreErrored","onUnaccepted","data","console","warn","chain","join","onDeclined","onErrored","error","moduleId","type","upToDate","hash","__webpack_hash__","exports","moduleMap","options","reload","status","log","check","cb","err","updatedModules","handleError","performReload","applyCallback","applyErr","renewedModules","logUpdates","applyResult","apply","then","outdatedModules","catch","result","unacceptedModules","filter","indexOf","length","forEach","stack","message","window","location"],"mappings":"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","sourcesContent":["/**\r\n * Based heavily on https://github.com/webpack/webpack/blob/\r\n *  c0afdf9c6abc1dd70707c594e473802a566f7b6e/hot/only-dev-server.js\r\n * Original copyright Tobias Koppers @sokra (MIT license)\r\n */\r\n\r\n/* global window __webpack_hash__ */\r\n\r\nif (!module.hot) {\r\n  throw new Error('[HMR] Hot Module Replacement is disabled.');\r\n}\r\n\r\nvar hmrDocsUrl = 'https://webpack.js.org/concepts/hot-module-replacement/'; // eslint-disable-line max-len\r\n\r\nvar lastHash;\r\nvar failureStatuses = { abort: 1, fail: 1 };\r\nvar applyOptions = {\r\n  ignoreUnaccepted: true,\r\n  ignoreDeclined: true,\r\n  ignoreErrored: true,\r\n  onUnaccepted: function(data) {\r\n    console.warn(\r\n      'Ignored an update to unaccepted module ' + data.chain.join(' -> ')\r\n    );\r\n  },\r\n  onDeclined: function(data) {\r\n    console.warn(\r\n      'Ignored an update to declined module ' + data.chain.join(' -> ')\r\n    );\r\n  },\r\n  onErrored: function(data) {\r\n    console.error(data.error);\r\n    console.warn(\r\n      'Ignored an error while updating module ' +\r\n        data.moduleId +\r\n        ' (' +\r\n        data.type +\r\n        ')'\r\n    );\r\n  },\r\n};\r\n\r\nfunction upToDate(hash) {\r\n  if (hash) lastHash = hash;\r\n  return lastHash == __webpack_hash__;\r\n}\r\n\r\nmodule.exports = function(hash, moduleMap, options) {\r\n  var reload = options.reload;\r\n  if (!upToDate(hash) && module.hot.status() == 'idle') {\r\n    if (options.log) console.log('[HMR] Checking for updates on the server...');\r\n    check();\r\n  }\r\n\r\n  function check() {\r\n    var cb = function(err, updatedModules) {\r\n      if (err) return handleError(err);\r\n\r\n      if (!updatedModules) {\r\n        if (options.warn) {\r\n          console.warn('[HMR] Cannot find update (Full reload needed)');\r\n          console.warn('[HMR] (Probably because of restarting the server)');\r\n        }\r\n        performReload();\r\n        return null;\r\n      }\r\n\r\n      var applyCallback = function(applyErr, renewedModules) {\r\n        if (applyErr) return handleError(applyErr);\r\n\r\n        if (!upToDate()) check();\r\n\r\n        logUpdates(updatedModules, renewedModules);\r\n      };\r\n\r\n      var applyResult = module.hot.apply(applyOptions, applyCallback);\r\n      // webpack 2 promise\r\n      if (applyResult && applyResult.then) {\r\n        // HotModuleReplacement.runtime.js refers to the result as `outdatedModules`\r\n        applyResult.then(function(outdatedModules) {\r\n          applyCallback(null, outdatedModules);\r\n        });\r\n        applyResult.catch(applyCallback);\r\n      }\r\n    };\r\n\r\n    var result = module.hot.check(false, cb);\r\n    // webpack 2 promise\r\n    if (result && result.then) {\r\n      result.then(function(updatedModules) {\r\n        cb(null, updatedModules);\r\n      });\r\n      result.catch(cb);\r\n    }\r\n  }\r\n\r\n  function logUpdates(updatedModules, renewedModules) {\r\n    var unacceptedModules = updatedModules.filter(function(moduleId) {\r\n      return renewedModules && renewedModules.indexOf(moduleId) < 0;\r\n    });\r\n\r\n    if (unacceptedModules.length > 0) {\r\n      if (options.warn) {\r\n        console.warn(\r\n          \"[HMR] The following modules couldn't be hot updated: \" +\r\n            '(Full reload needed)\\n' +\r\n            'This is usually because the modules which have changed ' +\r\n            '(and their parents) do not know how to hot reload themselves. ' +\r\n            'See ' +\r\n            hmrDocsUrl +\r\n            ' for more details.'\r\n        );\r\n        unacceptedModules.forEach(function(moduleId) {\r\n          console.warn('[HMR]  - ' + (moduleMap[moduleId] || moduleId));\r\n        });\r\n      }\r\n      performReload();\r\n      return;\r\n    }\r\n\r\n    if (options.log) {\r\n      if (!renewedModules || renewedModules.length === 0) {\r\n        console.log('[HMR] Nothing hot updated.');\r\n      } else {\r\n        console.log('[HMR] Updated modules:');\r\n        renewedModules.forEach(function(moduleId) {\r\n          console.log('[HMR]  - ' + (moduleMap[moduleId] || moduleId));\r\n        });\r\n      }\r\n\r\n      if (upToDate()) {\r\n        console.log('[HMR] App is up to date.');\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleError(err) {\r\n    if (module.hot.status() in failureStatuses) {\r\n      if (options.warn) {\r\n        console.warn('[HMR] Cannot check for update (Full reload needed)');\r\n        console.warn('[HMR] ' + (err.stack || err.message));\r\n      }\r\n      performReload();\r\n      return;\r\n    }\r\n    if (options.warn) {\r\n      console.warn('[HMR] Update check failed: ' + (err.stack || err.message));\r\n    }\r\n  }\r\n\r\n  function performReload() {\r\n    if (reload) {\r\n      if (options.warn) console.warn('[HMR] Reloading page');\r\n      window.location.reload();\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}