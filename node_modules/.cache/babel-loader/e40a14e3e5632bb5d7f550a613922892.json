{"ast":null,"code":"var _jsxFileName = \"/home/aleksandr/coursework.front/src/Components/MainWindow/MainWindowComponents/Content/NewCriticsList/NewCriticList.tsx\";\nimport React, { Component } from 'react';\nimport Gapped from '@skbkontur/react-ui/Gapped';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@skbkontur/react-ui/Button';\nimport Toast from '@skbkontur/react-ui/Toast';\nimport './NewCriticList.css';\nimport Ok from '@skbkontur/react-icons/Ok';\nimport Delete from '@skbkontur/react-icons/Delete';\nimport Spinner from '@skbkontur/react-ui/Spinner';\nimport Center from '@skbkontur/react-ui/Center';\nimport newCritics from '../../../../../TestData/Curator/newCritics';\nimport currentCritics from '../../../../../TestData/Curator/CurrentCritics';\n\nclass NewCriticList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.whichData = () => {\n      if (this.props.type === 'not-selected') {\n        //----------------------------------------------\n        // запрос по userId на данные новых рецензентов\n        //----------------------------------------------\n        this.setState({\n          data: newCritics\n        });\n      } else {\n        //----------------------------------------------\n        // запрос по userId на данные текущих рецензентов\n        //----------------------------------------------\n        this.setState({\n          data: currentCritics\n        });\n      }\n    };\n\n    this.state = {\n      data: [{}],\n      isLoading: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.type !== this.props.type) this.componentDidMount();\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    this.whichData();\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  renderButton(criticId) {\n    return /*#__PURE__*/React.createElement(Button, {\n      icon: this.props.type === 'not-selected' ? /*#__PURE__*/React.createElement(Ok, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 59\n        }\n      }) : /*#__PURE__*/React.createElement(Delete, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 67\n        }\n      }),\n      use: this.props.type === 'not-selected' ? 'success' : 'danger',\n      onClick: () => {\n        if (this.props.type === 'not-selected') {\n          //----------------------------------------------------\n          //запрос на добавление рецензента по userId и criticId\n          //----------------------------------------------------\n          Toast.push('Рецензент назначен');\n        } else {\n          //----------------------------------------------------\n          //запрос на удаление рецензента по userId и criticId\n          //----------------------------------------------------\n          Toast.push('Рецензент удален');\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, this.props.type === 'not-selected' ? 'Назначить своим' : 'Отменить назначение');\n  }\n\n  renderItem(item) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newCriticListItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Gapped, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        minWidth: '350px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 53\n      }\n    }, item.name, \", \\u043A\\u0430\\u0444\\u0435\\u0434\\u0440\\u0430 \", item.department)), this.renderButton(item.id)));\n  }\n\n  isEmpty(obj) {\n    return Object.keys(obj[0]).length === 0;\n  }\n\n  renderEmptyList() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: '10vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \"\\u041D\\u0435\\u0442 \\u0440\\u0435\\u0446\\u0435\\u043D\\u0437\\u0435\\u043D\\u0442\\u043E\\u0432\"));\n  }\n\n  render() {\n    return !this.state.isLoading ? !this.isEmpty(this.state.data) ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newCriticList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, this.state.data.map(item => this.renderItem(item))) : this.renderEmptyList() : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '60vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Center, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      type: \"big\",\n      caption: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 56\n      }\n    })));\n  }\n\n}\n\nexport default NewCriticList;","map":{"version":3,"sources":["/home/aleksandr/coursework.front/src/Components/MainWindow/MainWindowComponents/Content/NewCriticsList/NewCriticList.tsx"],"names":["React","Component","Gapped","Typography","Button","Toast","Ok","Delete","Spinner","Center","newCritics","currentCritics","NewCriticList","constructor","props","whichData","type","setState","data","state","isLoading","componentDidUpdate","prevProps","componentDidMount","renderButton","criticId","push","renderItem","item","minWidth","name","department","id","isEmpty","obj","Object","keys","length","renderEmptyList","textAlign","marginTop","render","map","height"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Gapped from '@skbkontur/react-ui/Gapped'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@skbkontur/react-ui/Button'\nimport Toast from '@skbkontur/react-ui/Toast'\nimport './NewCriticList.css'\nimport Ok from '@skbkontur/react-icons/Ok'\nimport Delete from '@skbkontur/react-icons/Delete'\nimport Spinner from '@skbkontur/react-ui/Spinner'\nimport Center from '@skbkontur/react-ui/Center'\n\nimport newCritics from '../../../../../TestData/Curator/newCritics'\nimport currentCritics from '../../../../../TestData/Curator/CurrentCritics'\n\ninterface Idata{\n    name?: string,\n    course?: number,\n    department?: string,\n    id?: number\n}\n\ninterface Props{\n    type : 'selected' | 'not-selected',\n    userId?: number\n}\n\ninterface State{\n    data : Idata[],\n    isLoading?: boolean\n}\n\nclass NewCriticList extends Component<Props, State>{\n    constructor(props : Props){\n        super(props);\n        this.state = {\n            data : [{}],\n            isLoading : false\n        }\n    }\n    \n    componentDidUpdate(prevProps : Props){\n        if(prevProps.type !== this.props.type)\n            this.componentDidMount()\n    }\n\n    componentDidMount(){\n        this.setState({isLoading : true})\n        this.whichData()\n        this.setState({isLoading : false})\n    }\n\n    private whichData = () => {\n        if(this.props.type === 'not-selected'){\n            //----------------------------------------------\n            // запрос по userId на данные новых рецензентов\n            //----------------------------------------------\n\n            this.setState({data : newCritics})\n        }\n        else{\n            //----------------------------------------------\n            // запрос по userId на данные текущих рецензентов\n            //----------------------------------------------\n\n            this.setState({data : currentCritics})\n        }\n    }\n\n    private renderButton(criticId?: number){\n        return(\n            <Button\n                icon={this.props.type === 'not-selected'? <Ok/> : <Delete/>} \n                use={this.props.type === 'not-selected'? 'success' : 'danger'} \n                onClick={() => {\n                    if(this.props.type === 'not-selected'){\n                        //----------------------------------------------------\n                        //запрос на добавление рецензента по userId и criticId\n                        //----------------------------------------------------\n                        Toast.push('Рецензент назначен')\n                    }\n                    else{\n                        //----------------------------------------------------\n                        //запрос на удаление рецензента по userId и criticId\n                        //----------------------------------------------------\n                        Toast.push('Рецензент удален')\n                    }\n                    }\n                }\n            >\n                {this.props.type === 'not-selected'? 'Назначить своим' : 'Отменить назначение'}\n            </Button>\n        )\n    }\n\n    private renderItem(item : Idata){\n        return(\n            <div className='newCriticListItem'>\n                <Gapped>\n                    <div style={{minWidth:'350px'}}><Typography variant='h5'>{item.name}, кафедра {item.department}</Typography></div>\n                    {this.renderButton(item.id)}\n                </Gapped>\n            </div>\n        )\n    }\n\n    private isEmpty(obj : Idata[]) {\n        return Object.keys(obj[0]).length === 0;\n    }\n\n    private renderEmptyList(){\n        return(\n            <div style={{textAlign:\"center\", marginTop: '10vh'}}>\n                <Typography variant='h5'>Нет рецензентов</Typography>\n            </div>\n        )\n    }\n\n    render(){\n        return(\n            !this.state.isLoading?\n                !this.isEmpty(this.state.data)?\n                    <div className='newCriticList'>\n                        {this.state.data.map(item => this.renderItem(item))}\n                    </div>\n                :   this.renderEmptyList()\n            :   <div style={{height : '60vh'}}><Center><Spinner type='big' caption='Загрузка'/></Center></div>\n        )\n    }\n}\n\nexport default NewCriticList"]},"metadata":{},"sourceType":"module"}