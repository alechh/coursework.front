{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar constants_1 = require(\"./constants\");\n\nvar LocaleHelper =\n/** @class */\nfunction () {\n  function LocaleHelper(locales, langCode) {\n    if (langCode === void 0) {\n      langCode = constants_1.defaultLangCode;\n    }\n\n    this.locales = locales;\n    this.defaultLangCode = langCode;\n  }\n\n  LocaleHelper.prototype.get = function (langCode) {\n    if (langCode === void 0) {\n      langCode = this.defaultLangCode;\n    }\n\n    return this.locales[langCode] || this.locales[this.defaultLangCode] || {};\n  };\n\n  return LocaleHelper;\n}();\n\nexports.LocaleHelper = LocaleHelper;","map":{"version":3,"sources":["/home/aleksandr/hwproj.courseworks.front/node_modules/@skbkontur/react-ui/components/LocaleProvider/LocaleHelper.js"],"names":["Object","defineProperty","exports","value","constants_1","require","LocaleHelper","locales","langCode","defaultLangCode","prototype","get"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIC,YAAY;AAAG;AAAa,YAAY;AAC1C,WAASA,YAAT,CAAsBC,OAAtB,EAA+BC,QAA/B,EAAyC;AACvC,QAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAACA,MAAAA,QAAQ,GAAGJ,WAAW,CAACK,eAAvB;AAAwC;;AAClE,SAAKF,OAAL,GAAeA,OAAf;AACA,SAAKE,eAAL,GAAuBD,QAAvB;AACD;;AACDF,EAAAA,YAAY,CAACI,SAAb,CAAuBC,GAAvB,GAA6B,UAAUH,QAAV,EAAoB;AAC/C,QAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAACA,MAAAA,QAAQ,GAAG,KAAKC,eAAhB;AAAiC;;AAC3D,WAAO,KAAKF,OAAL,CAAaC,QAAb,KAA0B,KAAKD,OAAL,CAAa,KAAKE,eAAlB,CAA1B,IAAgE,EAAvE;AACD,GAHD;;AAIA,SAAOH,YAAP;AACD,CAX+B,EAAhC;;AAYAJ,OAAO,CAACI,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"./constants\");\nvar LocaleHelper = /** @class */function () {\n  function LocaleHelper(locales, langCode) {\n    if (langCode === void 0) {langCode = constants_1.defaultLangCode;}\n    this.locales = locales;\n    this.defaultLangCode = langCode;\n  }\n  LocaleHelper.prototype.get = function (langCode) {\n    if (langCode === void 0) {langCode = this.defaultLangCode;}\n    return this.locales[langCode] || this.locales[this.defaultLangCode] || {};\n  };\n  return LocaleHelper;\n}();\nexports.LocaleHelper = LocaleHelper;"]},"metadata":{},"sourceType":"script"}