{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar constants_1 = require(\"../../../lib/date/constants\");\n\nvar Keyboard = tslib_1.__importStar(require(\"../../../lib/events/keyboard/identifiers\"));\n\nvar extractKeyboardAction_1 = require(\"../../internal/extractKeyboardAction\");\n\nvar delimiters = [function (e) {\n  return new RegExp(constants_1.SEPARATOR).test(e.key);\n}, Keyboard.isCodeMinus, Keyboard.isKeySpace, Keyboard.isCodeComma, Keyboard.isCodePeriod, Keyboard.isCodeSlash, Keyboard.isCodeBackslash, Keyboard.isCodeIntlBackslash, Keyboard.isCodeNumpadDecimal, Keyboard.isCodeNumpadDivide, Keyboard.isCodeNumpadSubtract];\nvar Actions;\n\n(function (Actions) {\n  Actions[Actions[\"Unknown\"] = 0] = \"Unknown\";\n  Actions[Actions[\"Ignore\"] = 1] = \"Ignore\";\n  Actions[Actions[\"MoveSelectionLeft\"] = 2] = \"MoveSelectionLeft\";\n  Actions[Actions[\"MoveSelectionRight\"] = 3] = \"MoveSelectionRight\";\n  Actions[Actions[\"MoveSelectionFirst\"] = 4] = \"MoveSelectionFirst\";\n  Actions[Actions[\"MoveSelectionLast\"] = 5] = \"MoveSelectionLast\";\n  Actions[Actions[\"Decrement\"] = 6] = \"Decrement\";\n  Actions[Actions[\"Increment\"] = 7] = \"Increment\";\n  Actions[Actions[\"FullSelection\"] = 8] = \"FullSelection\";\n  Actions[Actions[\"ClearSelection\"] = 9] = \"ClearSelection\";\n  Actions[Actions[\"ClearOneChar\"] = 10] = \"ClearOneChar\";\n  Actions[Actions[\"Digit\"] = 11] = \"Digit\";\n  Actions[Actions[\"Separator\"] = 12] = \"Separator\";\n  Actions[Actions[\"WrongInput\"] = 13] = \"WrongInput\";\n  Actions[Actions[\"PasteValue\"] = 14] = \"PasteValue\";\n  Actions[Actions[\"CopyValue\"] = 15] = \"CopyValue\";\n})(Actions = exports.Actions || (exports.Actions = {}));\n\nvar extractAction = new extractKeyboardAction_1.KeyboardActionExctracterBuilder().add(Actions.PasteValue, Keyboard.isShortcutPaste).add(Actions.CopyValue, Keyboard.isShortcutCopy).add(Actions.FullSelection, Keyboard.isShortcutSelectAll).add(Actions.Ignore, Keyboard.someKeys(Keyboard.isModified(), Keyboard.isKeyFs, Keyboard.isKeyTab)).add(Actions.MoveSelectionLeft, Keyboard.isKeyArrowLeft).add(Actions.MoveSelectionRight, Keyboard.isKeyArrowRight).add(Actions.MoveSelectionFirst, Keyboard.isKeyHome).add(Actions.MoveSelectionLast, Keyboard.isKeyEnd).add(Actions.Separator, Keyboard.someKeys.apply(Keyboard, delimiters)).add(Actions.Increment, Keyboard.isKeyArrowUp).add(Actions.Decrement, Keyboard.isKeyArrowDown).add(Actions.ClearSelection, function (e) {\n  return Keyboard.isKeyDelete(e);\n}).add(Actions.ClearOneChar, Keyboard.isKeyBackspace).add(Actions.Digit, Keyboard.isKeyNumber).add(Actions.WrongInput, function (e) {\n  return !Keyboard.isKeyNumber(e);\n}).build(Actions.Unknown);\nexports.extractAction = extractAction;","map":{"version":3,"sources":["C:/Users/Sasha/Documents/coursework.front/node_modules/@skbkontur/react-ui/components/DateInput/helpers/DateInputKeyboardActions.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","constants_1","Keyboard","__importStar","extractKeyboardAction_1","delimiters","e","RegExp","SEPARATOR","test","key","isCodeMinus","isKeySpace","isCodeComma","isCodePeriod","isCodeSlash","isCodeBackslash","isCodeIntlBackslash","isCodeNumpadDecimal","isCodeNumpadDivide","isCodeNumpadSubtract","Actions","extractAction","KeyboardActionExctracterBuilder","add","PasteValue","isShortcutPaste","CopyValue","isShortcutCopy","FullSelection","isShortcutSelectAll","Ignore","someKeys","isModified","isKeyFs","isKeyTab","MoveSelectionLeft","isKeyArrowLeft","MoveSelectionRight","isKeyArrowRight","MoveSelectionFirst","isKeyHome","MoveSelectionLast","isKeyEnd","Separator","apply","Increment","isKeyArrowUp","Decrement","isKeyArrowDown","ClearSelection","isKeyDelete","ClearOneChar","isKeyBackspace","Digit","isKeyNumber","WrongInput","build","Unknown"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar constants_1 = require(\"../../../lib/date/constants\");\r\nvar Keyboard = tslib_1.__importStar(require(\"../../../lib/events/keyboard/identifiers\"));\r\nvar extractKeyboardAction_1 = require(\"../../internal/extractKeyboardAction\");\r\nvar delimiters = [\r\nfunction (e) {return new RegExp(constants_1.SEPARATOR).test(e.key);},\r\nKeyboard.isCodeMinus,\r\nKeyboard.isKeySpace,\r\nKeyboard.isCodeComma,\r\nKeyboard.isCodePeriod,\r\nKeyboard.isCodeSlash,\r\nKeyboard.isCodeBackslash,\r\nKeyboard.isCodeIntlBackslash,\r\nKeyboard.isCodeNumpadDecimal,\r\nKeyboard.isCodeNumpadDivide,\r\nKeyboard.isCodeNumpadSubtract];\r\n\r\nvar Actions;\r\n(function (Actions) {\r\n  Actions[Actions[\"Unknown\"] = 0] = \"Unknown\";\r\n  Actions[Actions[\"Ignore\"] = 1] = \"Ignore\";\r\n  Actions[Actions[\"MoveSelectionLeft\"] = 2] = \"MoveSelectionLeft\";\r\n  Actions[Actions[\"MoveSelectionRight\"] = 3] = \"MoveSelectionRight\";\r\n  Actions[Actions[\"MoveSelectionFirst\"] = 4] = \"MoveSelectionFirst\";\r\n  Actions[Actions[\"MoveSelectionLast\"] = 5] = \"MoveSelectionLast\";\r\n  Actions[Actions[\"Decrement\"] = 6] = \"Decrement\";\r\n  Actions[Actions[\"Increment\"] = 7] = \"Increment\";\r\n  Actions[Actions[\"FullSelection\"] = 8] = \"FullSelection\";\r\n  Actions[Actions[\"ClearSelection\"] = 9] = \"ClearSelection\";\r\n  Actions[Actions[\"ClearOneChar\"] = 10] = \"ClearOneChar\";\r\n  Actions[Actions[\"Digit\"] = 11] = \"Digit\";\r\n  Actions[Actions[\"Separator\"] = 12] = \"Separator\";\r\n  Actions[Actions[\"WrongInput\"] = 13] = \"WrongInput\";\r\n  Actions[Actions[\"PasteValue\"] = 14] = \"PasteValue\";\r\n  Actions[Actions[\"CopyValue\"] = 15] = \"CopyValue\";\r\n})(Actions = exports.Actions || (exports.Actions = {}));\r\nvar extractAction = new extractKeyboardAction_1.KeyboardActionExctracterBuilder().\r\nadd(Actions.PasteValue, Keyboard.isShortcutPaste).\r\nadd(Actions.CopyValue, Keyboard.isShortcutCopy).\r\nadd(Actions.FullSelection, Keyboard.isShortcutSelectAll).\r\nadd(Actions.Ignore, Keyboard.someKeys(Keyboard.isModified(), Keyboard.isKeyFs, Keyboard.isKeyTab)).\r\nadd(Actions.MoveSelectionLeft, Keyboard.isKeyArrowLeft).\r\nadd(Actions.MoveSelectionRight, Keyboard.isKeyArrowRight).\r\nadd(Actions.MoveSelectionFirst, Keyboard.isKeyHome).\r\nadd(Actions.MoveSelectionLast, Keyboard.isKeyEnd).\r\nadd(Actions.Separator, Keyboard.someKeys.apply(Keyboard, delimiters)).\r\nadd(Actions.Increment, Keyboard.isKeyArrowUp).\r\nadd(Actions.Decrement, Keyboard.isKeyArrowDown).\r\nadd(Actions.ClearSelection, function (e) {return Keyboard.isKeyDelete(e);}).\r\nadd(Actions.ClearOneChar, Keyboard.isKeyBackspace).\r\nadd(Actions.Digit, Keyboard.isKeyNumber).\r\nadd(Actions.WrongInput, function (e) {return !Keyboard.isKeyNumber(e);}).\r\nbuild(Actions.Unknown);\r\nexports.extractAction = extractAction;"]},"metadata":{},"sourceType":"script"}