{"ast":null,"code":"import { getCommonParent, getTabbableNodes, getAllTabbableNodes, parentAutofocusables } from './utils/DOMutils';\nimport pickFirstFocus from './utils/firstFocus';\nimport getAllAffectedNodes from './utils/all-affected';\nimport { asArray } from './utils/array';\n\nvar findAutoFocused = function findAutoFocused(autoFocusables) {\n  return function (node) {\n    return !!node.autofocus || node.dataset && !!node.dataset.autofocus || autoFocusables.indexOf(node) >= 0;\n  };\n};\n\nvar isGuard = function isGuard(node) {\n  return node.dataset && node.dataset.focusGuard;\n};\n\nvar notAGuard = function notAGuard(node) {\n  return !isGuard(node);\n};\n\nexport var newFocus = function newFocus(innerNodes, outerNodes, activeElement, lastNode, autoFocused) {\n  var cnt = innerNodes.length;\n  var firstFocus = innerNodes[0];\n  var lastFocus = innerNodes[cnt - 1]; // focus is inside\n\n  if (innerNodes.indexOf(activeElement) >= 0) {\n    return undefined;\n  }\n\n  var activeIndex = outerNodes.indexOf(activeElement);\n  var lastIndex = outerNodes.indexOf(lastNode || activeIndex);\n  var lastNodeInside = innerNodes.indexOf(lastNode);\n  var indexDiff = activeIndex - lastIndex;\n  var firstNodeIndex = outerNodes.indexOf(firstFocus);\n  var lastNodeIndex = outerNodes.indexOf(lastFocus); // new focus\n\n  if (activeIndex === -1 || lastNodeInside === -1) {\n    return innerNodes.indexOf(autoFocused.length ? pickFirstFocus(autoFocused) : pickFirstFocus(innerNodes));\n  } // old focus\n\n\n  if (!indexDiff && lastNodeInside >= 0) {\n    return lastNodeInside;\n  } // first element\n\n\n  if (activeIndex <= firstNodeIndex && isGuard(activeElement) && Math.abs(indexDiff) > 1) {\n    return 0;\n  } // jump out\n\n\n  if (indexDiff && Math.abs(indexDiff) > 1) {\n    return lastNodeInside;\n  } // focus above lock\n\n\n  if (activeIndex <= firstNodeIndex) {\n    return cnt - 1;\n  } // focus below lock\n\n\n  if (activeIndex > lastNodeIndex) {\n    return 0;\n  } // index is inside tab order, but outside Lock\n\n\n  if (indexDiff) {\n    if (Math.abs(indexDiff) > 1) {\n      return lastNodeInside;\n    }\n\n    return (cnt + lastNodeInside + indexDiff) % cnt;\n  } // do nothing\n\n\n  return undefined;\n};\n\nvar getTopCommonParent = function getTopCommonParent(baseActiveElement, leftEntry, rightEntries) {\n  var activeElements = asArray(baseActiveElement);\n  var leftEntries = asArray(leftEntry);\n  var activeElement = activeElements[0];\n  var topCommon = null;\n  leftEntries.filter(Boolean).forEach(function (entry) {\n    topCommon = getCommonParent(topCommon || entry, entry) || topCommon;\n    rightEntries.filter(Boolean).forEach(function (subEntry) {\n      var common = getCommonParent(activeElement, subEntry);\n\n      if (common) {\n        if (!topCommon || common.contains(topCommon)) {\n          topCommon = common;\n        } else {\n          topCommon = getCommonParent(common, topCommon);\n        }\n      }\n    });\n  });\n  return topCommon;\n};\n\nvar allParentAutofocusables = function allParentAutofocusables(entries) {\n  return entries.reduce(function (acc, node) {\n    return acc.concat(parentAutofocusables(node));\n  }, []);\n};\n\nvar reorderNodes = function reorderNodes(srcNodes, dstNodes) {\n  var remap = new Map(); // no Set(dstNodes) for IE11 :(\n\n  dstNodes.forEach(function (entity) {\n    return remap.set(entity.node, entity);\n  }); // remap to dstNodes\n\n  return srcNodes.map(function (node) {\n    return remap.get(node);\n  }).filter(Boolean);\n};\n\nexport var getFocusabledIn = function getFocusabledIn(topNode) {\n  var entries = getAllAffectedNodes(topNode).filter(notAGuard);\n  var commonParent = getTopCommonParent(topNode, topNode, entries);\n  var outerNodes = getTabbableNodes([commonParent], true);\n  var innerElements = getTabbableNodes(entries).filter(function (_ref) {\n    var node = _ref.node;\n    return notAGuard(node);\n  }).map(function (_ref2) {\n    var node = _ref2.node;\n    return node;\n  });\n  return outerNodes.map(function (_ref3) {\n    var node = _ref3.node,\n        index = _ref3.index;\n    return {\n      node: node,\n      index: index,\n      lockItem: innerElements.indexOf(node) >= 0,\n      guard: isGuard(node)\n    };\n  });\n};\n\nvar getFocusMerge = function getFocusMerge(topNode, lastNode) {\n  var activeElement = document && document.activeElement;\n  var entries = getAllAffectedNodes(topNode).filter(notAGuard);\n  var commonParent = getTopCommonParent(activeElement || topNode, topNode, entries);\n  var innerElements = getTabbableNodes(entries).filter(function (_ref4) {\n    var node = _ref4.node;\n    return notAGuard(node);\n  });\n\n  if (!innerElements[0]) {\n    innerElements = getAllTabbableNodes(entries).filter(function (_ref5) {\n      var node = _ref5.node;\n      return notAGuard(node);\n    });\n\n    if (!innerElements[0]) {\n      return undefined;\n    }\n  }\n\n  var outerNodes = getTabbableNodes([commonParent]).map(function (_ref6) {\n    var node = _ref6.node;\n    return node;\n  });\n  var orderedInnerElements = reorderNodes(outerNodes, innerElements);\n  var innerNodes = orderedInnerElements.map(function (_ref7) {\n    var node = _ref7.node;\n    return node;\n  });\n  var newId = newFocus(innerNodes, outerNodes, activeElement, lastNode, innerNodes.filter(findAutoFocused(allParentAutofocusables(entries))));\n\n  if (newId === undefined) {\n    return newId;\n  }\n\n  return orderedInnerElements[newId];\n};\n\nexport default getFocusMerge;","map":{"version":3,"sources":["C:/Users/Sasha/Documents/coursework.front/node_modules/focus-lock/dist/es2015/focusMerge.js"],"names":["getCommonParent","getTabbableNodes","getAllTabbableNodes","parentAutofocusables","pickFirstFocus","getAllAffectedNodes","asArray","findAutoFocused","autoFocusables","node","autofocus","dataset","indexOf","isGuard","focusGuard","notAGuard","newFocus","innerNodes","outerNodes","activeElement","lastNode","autoFocused","cnt","length","firstFocus","lastFocus","undefined","activeIndex","lastIndex","lastNodeInside","indexDiff","firstNodeIndex","lastNodeIndex","Math","abs","getTopCommonParent","baseActiveElement","leftEntry","rightEntries","activeElements","leftEntries","topCommon","filter","Boolean","forEach","entry","subEntry","common","contains","allParentAutofocusables","entries","reduce","acc","concat","reorderNodes","srcNodes","dstNodes","remap","Map","entity","set","map","get","getFocusabledIn","topNode","commonParent","innerElements","_ref","_ref2","_ref3","index","lockItem","guard","getFocusMerge","document","_ref4","_ref5","_ref6","orderedInnerElements","_ref7","newId"],"mappings":"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","sourcesContent":["import { getCommonParent, getTabbableNodes, getAllTabbableNodes, parentAutofocusables } from './utils/DOMutils';\r\nimport pickFirstFocus from './utils/firstFocus';\r\nimport getAllAffectedNodes from './utils/all-affected';\r\nimport { asArray } from './utils/array';\r\n\r\nvar findAutoFocused = function findAutoFocused(autoFocusables) {\r\n  return function (node) {\r\n    return !!node.autofocus || node.dataset && !!node.dataset.autofocus || autoFocusables.indexOf(node) >= 0;\r\n  };\r\n};\r\n\r\nvar isGuard = function isGuard(node) {\r\n  return node.dataset && node.dataset.focusGuard;\r\n};\r\nvar notAGuard = function notAGuard(node) {\r\n  return !isGuard(node);\r\n};\r\n\r\nexport var newFocus = function newFocus(innerNodes, outerNodes, activeElement, lastNode, autoFocused) {\r\n  var cnt = innerNodes.length;\r\n  var firstFocus = innerNodes[0];\r\n  var lastFocus = innerNodes[cnt - 1];\r\n\r\n  // focus is inside\r\n  if (innerNodes.indexOf(activeElement) >= 0) {\r\n    return undefined;\r\n  }\r\n\r\n  var activeIndex = outerNodes.indexOf(activeElement);\r\n  var lastIndex = outerNodes.indexOf(lastNode || activeIndex);\r\n  var lastNodeInside = innerNodes.indexOf(lastNode);\r\n  var indexDiff = activeIndex - lastIndex;\r\n  var firstNodeIndex = outerNodes.indexOf(firstFocus);\r\n  var lastNodeIndex = outerNodes.indexOf(lastFocus);\r\n\r\n  // new focus\r\n  if (activeIndex === -1 || lastNodeInside === -1) {\r\n    return innerNodes.indexOf(autoFocused.length ? pickFirstFocus(autoFocused) : pickFirstFocus(innerNodes));\r\n  }\r\n  // old focus\r\n  if (!indexDiff && lastNodeInside >= 0) {\r\n    return lastNodeInside;\r\n  }\r\n  // first element\r\n  if (activeIndex <= firstNodeIndex && isGuard(activeElement) && Math.abs(indexDiff) > 1) {\r\n    return 0;\r\n  }\r\n  // jump out\r\n  if (indexDiff && Math.abs(indexDiff) > 1) {\r\n    return lastNodeInside;\r\n  }\r\n  // focus above lock\r\n  if (activeIndex <= firstNodeIndex) {\r\n    return cnt - 1;\r\n  }\r\n  // focus below lock\r\n  if (activeIndex > lastNodeIndex) {\r\n    return 0;\r\n  }\r\n  // index is inside tab order, but outside Lock\r\n  if (indexDiff) {\r\n    if (Math.abs(indexDiff) > 1) {\r\n      return lastNodeInside;\r\n    }\r\n    return (cnt + lastNodeInside + indexDiff) % cnt;\r\n  }\r\n  // do nothing\r\n  return undefined;\r\n};\r\n\r\nvar getTopCommonParent = function getTopCommonParent(baseActiveElement, leftEntry, rightEntries) {\r\n  var activeElements = asArray(baseActiveElement);\r\n  var leftEntries = asArray(leftEntry);\r\n  var activeElement = activeElements[0];\r\n  var topCommon = null;\r\n  leftEntries.filter(Boolean).forEach(function (entry) {\r\n    topCommon = getCommonParent(topCommon || entry, entry) || topCommon;\r\n    rightEntries.filter(Boolean).forEach(function (subEntry) {\r\n      var common = getCommonParent(activeElement, subEntry);\r\n      if (common) {\r\n        if (!topCommon || common.contains(topCommon)) {\r\n          topCommon = common;\r\n        } else {\r\n          topCommon = getCommonParent(common, topCommon);\r\n        }\r\n      }\r\n    });\r\n  });\r\n  return topCommon;\r\n};\r\n\r\nvar allParentAutofocusables = function allParentAutofocusables(entries) {\r\n  return entries.reduce(function (acc, node) {\r\n    return acc.concat(parentAutofocusables(node));\r\n  }, []);\r\n};\r\n\r\nvar reorderNodes = function reorderNodes(srcNodes, dstNodes) {\r\n  var remap = new Map();\r\n  // no Set(dstNodes) for IE11 :(\r\n  dstNodes.forEach(function (entity) {\r\n    return remap.set(entity.node, entity);\r\n  });\r\n  // remap to dstNodes\r\n  return srcNodes.map(function (node) {\r\n    return remap.get(node);\r\n  }).filter(Boolean);\r\n};\r\n\r\nexport var getFocusabledIn = function getFocusabledIn(topNode) {\r\n  var entries = getAllAffectedNodes(topNode).filter(notAGuard);\r\n  var commonParent = getTopCommonParent(topNode, topNode, entries);\r\n  var outerNodes = getTabbableNodes([commonParent], true);\r\n  var innerElements = getTabbableNodes(entries).filter(function (_ref) {\r\n    var node = _ref.node;\r\n    return notAGuard(node);\r\n  }).map(function (_ref2) {\r\n    var node = _ref2.node;\r\n    return node;\r\n  });\r\n\r\n  return outerNodes.map(function (_ref3) {\r\n    var node = _ref3.node,\r\n        index = _ref3.index;\r\n    return {\r\n      node: node,\r\n      index: index,\r\n      lockItem: innerElements.indexOf(node) >= 0,\r\n      guard: isGuard(node)\r\n    };\r\n  });\r\n};\r\n\r\nvar getFocusMerge = function getFocusMerge(topNode, lastNode) {\r\n  var activeElement = document && document.activeElement;\r\n  var entries = getAllAffectedNodes(topNode).filter(notAGuard);\r\n\r\n  var commonParent = getTopCommonParent(activeElement || topNode, topNode, entries);\r\n\r\n  var innerElements = getTabbableNodes(entries).filter(function (_ref4) {\r\n    var node = _ref4.node;\r\n    return notAGuard(node);\r\n  });\r\n\r\n  if (!innerElements[0]) {\r\n    innerElements = getAllTabbableNodes(entries).filter(function (_ref5) {\r\n      var node = _ref5.node;\r\n      return notAGuard(node);\r\n    });\r\n    if (!innerElements[0]) {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  var outerNodes = getTabbableNodes([commonParent]).map(function (_ref6) {\r\n    var node = _ref6.node;\r\n    return node;\r\n  });\r\n  var orderedInnerElements = reorderNodes(outerNodes, innerElements);\r\n  var innerNodes = orderedInnerElements.map(function (_ref7) {\r\n    var node = _ref7.node;\r\n    return node;\r\n  });\r\n\r\n  var newId = newFocus(innerNodes, outerNodes, activeElement, lastNode, innerNodes.filter(findAutoFocused(allParentAutofocusables(entries))));\r\n\r\n  if (newId === undefined) {\r\n    return newId;\r\n  }\r\n  return orderedInnerElements[newId];\r\n};\r\n\r\nexport default getFocusMerge;"]},"metadata":{},"sourceType":"module"}