{"ast":null,"code":"/*eslint-env browser*/\n\n/*global __resourceQuery __webpack_public_path__*/\nvar options = {\n  path: '/__webpack_hmr',\n  timeout: 20 * 1000,\n  overlay: true,\n  reload: false,\n  log: true,\n  warn: true,\n  name: '',\n  autoConnect: true,\n  overlayStyles: {},\n  overlayWarnings: false,\n  ansiColors: {}\n};\n\nif (__resourceQuery) {\n  var querystring = require('querystring');\n\n  var overrides = querystring.parse(__resourceQuery.slice(1));\n  setOverrides(overrides);\n}\n\nif (typeof window === 'undefined') {// do nothing\n} else if (typeof window.EventSource === 'undefined') {\n  console.warn(\"webpack-hot-middleware's client requires EventSource to work. \" + 'You should include a polyfill if you want to support this browser: ' + 'https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events#Tools');\n} else {\n  if (options.autoConnect) {\n    connect();\n  }\n}\n/* istanbul ignore next */\n\n\nfunction setOptionsAndConnect(overrides) {\n  setOverrides(overrides);\n  connect();\n}\n\nfunction setOverrides(overrides) {\n  if (overrides.autoConnect) options.autoConnect = overrides.autoConnect == 'true';\n  if (overrides.path) options.path = overrides.path;\n  if (overrides.timeout) options.timeout = overrides.timeout;\n  if (overrides.overlay) options.overlay = overrides.overlay !== 'false';\n  if (overrides.reload) options.reload = overrides.reload !== 'false';\n\n  if (overrides.noInfo && overrides.noInfo !== 'false') {\n    options.log = false;\n  }\n\n  if (overrides.name) {\n    options.name = overrides.name;\n  }\n\n  if (overrides.quiet && overrides.quiet !== 'false') {\n    options.log = false;\n    options.warn = false;\n  }\n\n  if (overrides.dynamicPublicPath) {\n    options.path = __webpack_public_path__ + options.path;\n  }\n\n  if (overrides.ansiColors) options.ansiColors = JSON.parse(overrides.ansiColors);\n  if (overrides.overlayStyles) options.overlayStyles = JSON.parse(overrides.overlayStyles);\n\n  if (overrides.overlayWarnings) {\n    options.overlayWarnings = overrides.overlayWarnings == 'true';\n  }\n}\n\nfunction EventSourceWrapper() {\n  var source;\n  var lastActivity = new Date();\n  var listeners = [];\n  init();\n  var timer = setInterval(function () {\n    if (new Date() - lastActivity > options.timeout) {\n      handleDisconnect();\n    }\n  }, options.timeout / 2);\n\n  function init() {\n    source = new window.EventSource(options.path);\n    source.onopen = handleOnline;\n    source.onerror = handleDisconnect;\n    source.onmessage = handleMessage;\n  }\n\n  function handleOnline() {\n    if (options.log) console.log('[HMR] connected');\n    lastActivity = new Date();\n  }\n\n  function handleMessage(event) {\n    lastActivity = new Date();\n\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i](event);\n    }\n  }\n\n  function handleDisconnect() {\n    clearInterval(timer);\n    source.close();\n    setTimeout(init, options.timeout);\n  }\n\n  return {\n    addMessageListener: function (fn) {\n      listeners.push(fn);\n    }\n  };\n}\n\nfunction getEventSourceWrapper() {\n  if (!window.__whmEventSourceWrapper) {\n    window.__whmEventSourceWrapper = {};\n  }\n\n  if (!window.__whmEventSourceWrapper[options.path]) {\n    // cache the wrapper for other entries loaded on\n    // the same page with the same options.path\n    window.__whmEventSourceWrapper[options.path] = EventSourceWrapper();\n  }\n\n  return window.__whmEventSourceWrapper[options.path];\n}\n\nfunction connect() {\n  getEventSourceWrapper().addMessageListener(handleMessage);\n\n  function handleMessage(event) {\n    if (event.data == '\\uD83D\\uDC93') {\n      return;\n    }\n\n    try {\n      processMessage(JSON.parse(event.data));\n    } catch (ex) {\n      if (options.warn) {\n        console.warn('Invalid HMR message: ' + event.data + '\\n' + ex);\n      }\n    }\n  }\n} // the reporter needs to be a singleton on the page\n// in case the client is being used by multiple bundles\n// we only want to report once.\n// all the errors will go to all clients\n\n\nvar singletonKey = '__webpack_hot_middleware_reporter__';\nvar reporter;\n\nif (typeof window !== 'undefined') {\n  if (!window[singletonKey]) {\n    window[singletonKey] = createReporter();\n  }\n\n  reporter = window[singletonKey];\n}\n\nfunction createReporter() {\n  var strip = require('strip-ansi');\n\n  var overlay;\n\n  if (typeof document !== 'undefined' && options.overlay) {\n    overlay = require('./client-overlay')({\n      ansiColors: options.ansiColors,\n      overlayStyles: options.overlayStyles\n    });\n  }\n\n  var styles = {\n    errors: 'color: #ff0000;',\n    warnings: 'color: #999933;'\n  };\n  var previousProblems = null;\n\n  function log(type, obj) {\n    var newProblems = obj[type].map(function (msg) {\n      return strip(msg);\n    }).join('\\n');\n\n    if (previousProblems == newProblems) {\n      return;\n    } else {\n      previousProblems = newProblems;\n    }\n\n    var style = styles[type];\n    var name = obj.name ? \"'\" + obj.name + \"' \" : '';\n    var title = '[HMR] bundle ' + name + 'has ' + obj[type].length + ' ' + type; // NOTE: console.warn or console.error will print the stack trace\n    // which isn't helpful here, so using console.log to escape it.\n\n    if (console.group && console.groupEnd) {\n      console.group('%c' + title, style);\n      console.log('%c' + newProblems, style);\n      console.groupEnd();\n    } else {\n      console.log('%c' + title + '\\n\\t%c' + newProblems.replace(/\\n/g, '\\n\\t'), style + 'font-weight: bold;', style + 'font-weight: normal;');\n    }\n  }\n\n  return {\n    cleanProblemsCache: function () {\n      previousProblems = null;\n    },\n    problems: function (type, obj) {\n      if (options.warn) {\n        log(type, obj);\n      }\n\n      if (overlay) {\n        if (options.overlayWarnings || type === 'errors') {\n          overlay.showProblems(type, obj[type]);\n          return false;\n        }\n\n        overlay.clear();\n      }\n\n      return true;\n    },\n    success: function () {\n      if (overlay) overlay.clear();\n    },\n    useCustomOverlay: function (customOverlay) {\n      overlay = customOverlay;\n    }\n  };\n}\n\nvar processUpdate = require('./process-update');\n\nvar customHandler;\nvar subscribeAllHandler;\n\nfunction processMessage(obj) {\n  switch (obj.action) {\n    case 'building':\n      if (options.log) {\n        console.log('[HMR] bundle ' + (obj.name ? \"'\" + obj.name + \"' \" : '') + 'rebuilding');\n      }\n\n      break;\n\n    case 'built':\n      if (options.log) {\n        console.log('[HMR] bundle ' + (obj.name ? \"'\" + obj.name + \"' \" : '') + 'rebuilt in ' + obj.time + 'ms');\n      }\n\n    // fall through\n\n    case 'sync':\n      if (obj.name && options.name && obj.name !== options.name) {\n        return;\n      }\n\n      var applyUpdate = true;\n\n      if (obj.errors.length > 0) {\n        if (reporter) reporter.problems('errors', obj);\n        applyUpdate = false;\n      } else if (obj.warnings.length > 0) {\n        if (reporter) {\n          var overlayShown = reporter.problems('warnings', obj);\n          applyUpdate = overlayShown;\n        }\n      } else {\n        if (reporter) {\n          reporter.cleanProblemsCache();\n          reporter.success();\n        }\n      }\n\n      if (applyUpdate) {\n        processUpdate(obj.hash, obj.modules, options);\n      }\n\n      break;\n\n    default:\n      if (customHandler) {\n        customHandler(obj);\n      }\n\n  }\n\n  if (subscribeAllHandler) {\n    subscribeAllHandler(obj);\n  }\n}\n\nif (module) {\n  module.exports = {\n    subscribeAll: function subscribeAll(handler) {\n      subscribeAllHandler = handler;\n    },\n    subscribe: function subscribe(handler) {\n      customHandler = handler;\n    },\n    useCustomOverlay: function useCustomOverlay(customOverlay) {\n      if (reporter) reporter.useCustomOverlay(customOverlay);\n    },\n    setOptionsAndConnect: setOptionsAndConnect\n  };\n}","map":{"version":3,"sources":["/home/aleksandr/hwproj.courseworks.front/node_modules/webpack-hot-middleware/client.js"],"names":["options","path","timeout","overlay","reload","log","warn","name","autoConnect","overlayStyles","overlayWarnings","ansiColors","__resourceQuery","querystring","require","overrides","parse","slice","setOverrides","window","EventSource","console","connect","setOptionsAndConnect","noInfo","quiet","dynamicPublicPath","__webpack_public_path__","JSON","EventSourceWrapper","source","lastActivity","Date","listeners","init","timer","setInterval","handleDisconnect","onopen","handleOnline","onerror","onmessage","handleMessage","event","i","length","clearInterval","close","setTimeout","addMessageListener","fn","push","getEventSourceWrapper","__whmEventSourceWrapper","data","processMessage","ex","singletonKey","reporter","createReporter","strip","document","styles","errors","warnings","previousProblems","type","obj","newProblems","map","msg","join","style","title","group","groupEnd","replace","cleanProblemsCache","problems","showProblems","clear","success","useCustomOverlay","customOverlay","processUpdate","customHandler","subscribeAllHandler","action","time","applyUpdate","overlayShown","hash","modules","module","exports","subscribeAll","handler","subscribe"],"mappings":"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","sourcesContent":["/*eslint-env browser*/\n/*global __resourceQuery __webpack_public_path__*/\n\nvar options = {\n  path: '/__webpack_hmr',\n  timeout: 20 * 1000,\n  overlay: true,\n  reload: false,\n  log: true,\n  warn: true,\n  name: '',\n  autoConnect: true,\n  overlayStyles: {},\n  overlayWarnings: false,\n  ansiColors: {},\n};\nif (__resourceQuery) {\n  var querystring = require('querystring');\n  var overrides = querystring.parse(__resourceQuery.slice(1));\n  setOverrides(overrides);\n}\n\nif (typeof window === 'undefined') {\n  // do nothing\n} else if (typeof window.EventSource === 'undefined') {\n  console.warn(\n    \"webpack-hot-middleware's client requires EventSource to work. \" +\n      'You should include a polyfill if you want to support this browser: ' +\n      'https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events#Tools'\n  );\n} else {\n  if (options.autoConnect) {\n    connect();\n  }\n}\n\n/* istanbul ignore next */\nfunction setOptionsAndConnect(overrides) {\n  setOverrides(overrides);\n  connect();\n}\n\nfunction setOverrides(overrides) {\n  if (overrides.autoConnect)\n    options.autoConnect = overrides.autoConnect == 'true';\n  if (overrides.path) options.path = overrides.path;\n  if (overrides.timeout) options.timeout = overrides.timeout;\n  if (overrides.overlay) options.overlay = overrides.overlay !== 'false';\n  if (overrides.reload) options.reload = overrides.reload !== 'false';\n  if (overrides.noInfo && overrides.noInfo !== 'false') {\n    options.log = false;\n  }\n  if (overrides.name) {\n    options.name = overrides.name;\n  }\n  if (overrides.quiet && overrides.quiet !== 'false') {\n    options.log = false;\n    options.warn = false;\n  }\n\n  if (overrides.dynamicPublicPath) {\n    options.path = __webpack_public_path__ + options.path;\n  }\n\n  if (overrides.ansiColors)\n    options.ansiColors = JSON.parse(overrides.ansiColors);\n  if (overrides.overlayStyles)\n    options.overlayStyles = JSON.parse(overrides.overlayStyles);\n\n  if (overrides.overlayWarnings) {\n    options.overlayWarnings = overrides.overlayWarnings == 'true';\n  }\n}\n\nfunction EventSourceWrapper() {\n  var source;\n  var lastActivity = new Date();\n  var listeners = [];\n\n  init();\n  var timer = setInterval(function() {\n    if (new Date() - lastActivity > options.timeout) {\n      handleDisconnect();\n    }\n  }, options.timeout / 2);\n\n  function init() {\n    source = new window.EventSource(options.path);\n    source.onopen = handleOnline;\n    source.onerror = handleDisconnect;\n    source.onmessage = handleMessage;\n  }\n\n  function handleOnline() {\n    if (options.log) console.log('[HMR] connected');\n    lastActivity = new Date();\n  }\n\n  function handleMessage(event) {\n    lastActivity = new Date();\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i](event);\n    }\n  }\n\n  function handleDisconnect() {\n    clearInterval(timer);\n    source.close();\n    setTimeout(init, options.timeout);\n  }\n\n  return {\n    addMessageListener: function(fn) {\n      listeners.push(fn);\n    },\n  };\n}\n\nfunction getEventSourceWrapper() {\n  if (!window.__whmEventSourceWrapper) {\n    window.__whmEventSourceWrapper = {};\n  }\n  if (!window.__whmEventSourceWrapper[options.path]) {\n    // cache the wrapper for other entries loaded on\n    // the same page with the same options.path\n    window.__whmEventSourceWrapper[options.path] = EventSourceWrapper();\n  }\n  return window.__whmEventSourceWrapper[options.path];\n}\n\nfunction connect() {\n  getEventSourceWrapper().addMessageListener(handleMessage);\n\n  function handleMessage(event) {\n    if (event.data == '\\uD83D\\uDC93') {\n      return;\n    }\n    try {\n      processMessage(JSON.parse(event.data));\n    } catch (ex) {\n      if (options.warn) {\n        console.warn('Invalid HMR message: ' + event.data + '\\n' + ex);\n      }\n    }\n  }\n}\n\n// the reporter needs to be a singleton on the page\n// in case the client is being used by multiple bundles\n// we only want to report once.\n// all the errors will go to all clients\nvar singletonKey = '__webpack_hot_middleware_reporter__';\nvar reporter;\nif (typeof window !== 'undefined') {\n  if (!window[singletonKey]) {\n    window[singletonKey] = createReporter();\n  }\n  reporter = window[singletonKey];\n}\n\nfunction createReporter() {\n  var strip = require('strip-ansi');\n\n  var overlay;\n  if (typeof document !== 'undefined' && options.overlay) {\n    overlay = require('./client-overlay')({\n      ansiColors: options.ansiColors,\n      overlayStyles: options.overlayStyles,\n    });\n  }\n\n  var styles = {\n    errors: 'color: #ff0000;',\n    warnings: 'color: #999933;',\n  };\n  var previousProblems = null;\n  function log(type, obj) {\n    var newProblems = obj[type]\n      .map(function(msg) {\n        return strip(msg);\n      })\n      .join('\\n');\n    if (previousProblems == newProblems) {\n      return;\n    } else {\n      previousProblems = newProblems;\n    }\n\n    var style = styles[type];\n    var name = obj.name ? \"'\" + obj.name + \"' \" : '';\n    var title = '[HMR] bundle ' + name + 'has ' + obj[type].length + ' ' + type;\n    // NOTE: console.warn or console.error will print the stack trace\n    // which isn't helpful here, so using console.log to escape it.\n    if (console.group && console.groupEnd) {\n      console.group('%c' + title, style);\n      console.log('%c' + newProblems, style);\n      console.groupEnd();\n    } else {\n      console.log(\n        '%c' + title + '\\n\\t%c' + newProblems.replace(/\\n/g, '\\n\\t'),\n        style + 'font-weight: bold;',\n        style + 'font-weight: normal;'\n      );\n    }\n  }\n\n  return {\n    cleanProblemsCache: function() {\n      previousProblems = null;\n    },\n    problems: function(type, obj) {\n      if (options.warn) {\n        log(type, obj);\n      }\n      if (overlay) {\n        if (options.overlayWarnings || type === 'errors') {\n          overlay.showProblems(type, obj[type]);\n          return false;\n        }\n        overlay.clear();\n      }\n      return true;\n    },\n    success: function() {\n      if (overlay) overlay.clear();\n    },\n    useCustomOverlay: function(customOverlay) {\n      overlay = customOverlay;\n    },\n  };\n}\n\nvar processUpdate = require('./process-update');\n\nvar customHandler;\nvar subscribeAllHandler;\nfunction processMessage(obj) {\n  switch (obj.action) {\n    case 'building':\n      if (options.log) {\n        console.log(\n          '[HMR] bundle ' +\n            (obj.name ? \"'\" + obj.name + \"' \" : '') +\n            'rebuilding'\n        );\n      }\n      break;\n    case 'built':\n      if (options.log) {\n        console.log(\n          '[HMR] bundle ' +\n            (obj.name ? \"'\" + obj.name + \"' \" : '') +\n            'rebuilt in ' +\n            obj.time +\n            'ms'\n        );\n      }\n    // fall through\n    case 'sync':\n      if (obj.name && options.name && obj.name !== options.name) {\n        return;\n      }\n      var applyUpdate = true;\n      if (obj.errors.length > 0) {\n        if (reporter) reporter.problems('errors', obj);\n        applyUpdate = false;\n      } else if (obj.warnings.length > 0) {\n        if (reporter) {\n          var overlayShown = reporter.problems('warnings', obj);\n          applyUpdate = overlayShown;\n        }\n      } else {\n        if (reporter) {\n          reporter.cleanProblemsCache();\n          reporter.success();\n        }\n      }\n      if (applyUpdate) {\n        processUpdate(obj.hash, obj.modules, options);\n      }\n      break;\n    default:\n      if (customHandler) {\n        customHandler(obj);\n      }\n  }\n\n  if (subscribeAllHandler) {\n    subscribeAllHandler(obj);\n  }\n}\n\nif (module) {\n  module.exports = {\n    subscribeAll: function subscribeAll(handler) {\n      subscribeAllHandler = handler;\n    },\n    subscribe: function subscribe(handler) {\n      customHandler = handler;\n    },\n    useCustomOverlay: function useCustomOverlay(customOverlay) {\n      if (reporter) reporter.useCustomOverlay(customOverlay);\n    },\n    setOptionsAndConnect: setOptionsAndConnect,\n  };\n}\n"]},"metadata":{},"sourceType":"script"}