{"ast":null,"code":"var _jsxFileName = \"/home/aleksandr/coursework.front/src/Components/MainWindow/MainWindowComponents/Content/WorksList/WorksList.tsx\";\nimport React, { Component } from 'react';\nimport CourseWork from '../CourseWork/CourseWork';\nimport Typography from '@material-ui/core/Typography';\nimport './WorksList.css'; //student\n\nimport completedWorks from '../../../../../TestData/Student/completedWorksData';\nimport freeWorks from '../../../../../TestData/Student/freeWorksData'; //teacher\n\nimport teacherCurrentWorks from '../../../../../TestData/Teacher/currentWorks';\nimport teacherMyFreeWorks from '../../../../../TestData/Teacher/myFreeWorks';\nimport teacherCompletedWorks from '../../../../../TestData/Teacher/completedWorks';\nimport teacherFreeWorks from '../../../../../TestData/Teacher/freeWorks'; //curator \n\nimport curatorCurrentWorks from '../../../../../TestData/Curator/currentWorks';\n\nclass WorksList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.whichData = () => {\n      switch (this.props.role) {\n        case 'student':\n          {\n            switch (this.props.type) {\n              case 'completed':\n                {\n                  return this.setState({\n                    data: completedWorks,\n                    type: 'current'\n                  });\n                }\n\n              case 'free':\n                {\n                  return this.setState({\n                    data: freeWorks,\n                    type: 'free'\n                  });\n                }\n            }\n\n            break;\n          }\n\n        case 'teacher':\n          {\n            switch (this.props.type) {\n              case 'current':\n                {\n                  return this.setState({\n                    data: teacherCurrentWorks,\n                    type: 'current'\n                  });\n                }\n\n              case 'free':\n                {\n                  return this.setState({\n                    data: teacherMyFreeWorks,\n                    type: 'free'\n                  });\n                }\n\n              case 'completed':\n                {\n                  return this.setState({\n                    data: teacherCompletedWorks,\n                    type: 'completed'\n                  });\n                }\n\n              case 'foreign':\n                {\n                  return this.setState({\n                    data: teacherFreeWorks,\n                    type: 'foreign'\n                  });\n                }\n            }\n\n            break;\n          }\n\n        case 'curator':\n          {\n            switch (this.props.type) {\n              case 'current':\n                {\n                  this.setState({\n                    data: curatorCurrentWorks,\n                    type: 'current'\n                  });\n                }\n            }\n          }\n      }\n    };\n\n    this.state = {\n      data: [{}],\n      isLoading: false,\n      type: this.props.type\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.type !== prevProps.type) {\n      this.whichData();\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    this.whichData();\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  renderCourseWork(work) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"workItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CourseWork, {\n      data: work,\n      changePage: this.props.changePage,\n      role: this.props.role,\n      type: this.props.type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  renderList() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.needMarginTop(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, this.state.data.map(work => this.renderCourseWork(work)));\n  }\n\n  renderEmptyList() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"\\u041D\\u0435\\u0442 \\u043A\\u0443\\u0440\\u0441\\u043E\\u0432\\u044B\\u0445 \\u0440\\u0430\\u0431\\u043E\\u0442\"));\n  }\n\n  isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n  }\n\n  needMarginTop() {\n    return this.props.type === 'foreign' ? 'mt' : '';\n  }\n\n  render() {\n    return !this.isEmpty(this.state.data[0]) ? this.renderList() : this.renderEmptyList();\n  }\n\n}\n\nexport default WorksList;","map":{"version":3,"sources":["/home/aleksandr/coursework.front/src/Components/MainWindow/MainWindowComponents/Content/WorksList/WorksList.tsx"],"names":["React","Component","CourseWork","Typography","completedWorks","freeWorks","teacherCurrentWorks","teacherMyFreeWorks","teacherCompletedWorks","teacherFreeWorks","curatorCurrentWorks","WorksList","constructor","props","whichData","role","type","setState","data","state","isLoading","componentDidUpdate","prevProps","componentDidMount","renderCourseWork","work","changePage","renderList","needMarginTop","map","renderEmptyList","textAlign","isEmpty","obj","Object","keys","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport CourseWork from '../CourseWork/CourseWork'\nimport Typography from '@material-ui/core/Typography'\nimport './WorksList.css'\n\n//student\nimport completedWorks from '../../../../../TestData/Student/completedWorksData'\nimport freeWorks from '../../../../../TestData/Student/freeWorksData'\n\n//teacher\nimport teacherCurrentWorks from '../../../../../TestData/Teacher/currentWorks'\nimport teacherMyFreeWorks from '../../../../../TestData/Teacher/myFreeWorks'\nimport teacherCompletedWorks from '../../../../../TestData/Teacher/completedWorks'\nimport teacherFreeWorks from '../../../../../TestData/Teacher/freeWorks'\n\n//curator \nimport curatorCurrentWorks from '../../../../../TestData/Curator/currentWorks'\n\ntype WorkType = 'current' | 'completed' | 'free' | 'request' | 'foreign'\n\ninterface Props{\n    changePage(event : React.MouseEvent<HTMLButtonElement>) : void,\n    role?: string,\n    type?: WorkType\n}\n\ninterface State{\n    data : {}[],\n    isLoading?: boolean,\n    type?: WorkType\n}\n\nclass WorksList extends Component<Props,State>{\n    constructor(props : Props){\n        super(props);\n        this.state={\n            data : [{}],\n            isLoading : false,\n            type : this.props.type\n        }\n    }\n\n    componentDidUpdate(prevProps : Props){\n        if(this.props.type !== prevProps.type){\n            this.whichData()  \n        }\n    }\n\n\n    componentDidMount(){\n        this.setState({isLoading : true})\n        this.whichData()\n        this.setState({isLoading : false})\n    }\n    \n    private whichData = () => {\n        switch(this.props.role){\n            case 'student':{\n                switch(this.props.type){\n                    case 'completed':{\n                        return (this.setState({data : completedWorks, type : 'current'}))\n                    }\n                    case 'free':{\n                        return (this.setState({data : freeWorks, type : 'free'}))\n                    }\n                }\n                break\n            }\n            case 'teacher':{\n                switch(this.props.type){\n                    case 'current':{\n                        return (this.setState({data : teacherCurrentWorks, type : 'current'}))\n                    }\n                    case 'free':{\n                        return (this.setState({data : teacherMyFreeWorks, type : 'free'}))\n                    }\n                    case 'completed':{\n                        return (this.setState({data : teacherCompletedWorks, type : 'completed'}))\n                    }\n                    case 'foreign':{\n                        return (this.setState({data : teacherFreeWorks, type : 'foreign'}))\n                    }\n                }\n                break\n            }\n            case 'curator':{\n                switch(this.props.type){\n                    case 'current':{\n                        this.setState({data : curatorCurrentWorks, type : 'current'})\n                    }\n                }\n            }\n        }\n    }\n    \n    private renderCourseWork(work : {}){\n        return (\n            <div className='workItem'>\n                <CourseWork \n                    data={work} \n                    changePage={this.props.changePage} \n                    role={this.props.role}\n                    type={this.props.type}/>\n            </div>\n        )\n    }\n\n    private renderList(){\n        return(\n            <div className={this.needMarginTop()}>\n                {this.state.data.map(work => this.renderCourseWork(work))}\n            </div>\n        )\n    }\n\n    private renderEmptyList(){\n        return(\n            <div style={{textAlign:\"center\"}}>\n                <Typography variant='h5'>Нет курсовых работ</Typography>\n            </div>\n        )\n    }\n\n    private isEmpty(obj : {}) {\n        return Object.keys(obj).length === 0;\n    }\n\n    \n    private needMarginTop(){\n        return(\n            this.props.type === 'foreign'?\n            'mt' : ''\n        )\n    }\n\n    render(){\n        return (\n        !this.isEmpty(this.state.data[0])?\n            this.renderList()\n        : this.renderEmptyList())\n\n    }\n}\n\nexport default WorksList"]},"metadata":{},"sourceType":"module"}