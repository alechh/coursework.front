{"ast":null,"code":"/**\r\n * Copyright (c) 2014-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule EventSubscription\r\n * @typechecks\r\n */\n'use strict';\n/**\r\n * EventSubscription represents a subscription to a particular event. It can\r\n * remove its own subscription.\r\n */\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nvar EventSubscription = function () {\n  /**\r\n   * @param {EventSubscriptionVendor} subscriber the subscriber that controls\r\n   *   this subscription.\r\n   */\n  function EventSubscription(subscriber) {\n    _classCallCheck(this, EventSubscription);\n\n    this.subscriber = subscriber;\n  }\n  /**\r\n   * Removes this subscription from the subscriber that controls it.\r\n   */\n\n\n  EventSubscription.prototype.remove = function remove() {\n    if (this.subscriber) {\n      this.subscriber.removeSubscription(this);\n      this.subscriber = null;\n    }\n  };\n\n  return EventSubscription;\n}();\n\nmodule.exports = EventSubscription;","map":{"version":3,"sources":["C:/Users/Sasha/Documents/coursework.front/node_modules/fbemitter/lib/EventSubscription.js"],"names":["_classCallCheck","instance","Constructor","TypeError","EventSubscription","subscriber","prototype","remove","removeSubscription","module","exports"],"mappings":"AAAA;;;;;;;;;;;AAYA;AAEA;;;;;AAKA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,IAAIC,iBAAiB,GAAI,YAAY;AAEnC;;;;AAKA,WAASA,iBAAT,CAA2BC,UAA3B,EAAuC;AACrCL,IAAAA,eAAe,CAAC,IAAD,EAAOI,iBAAP,CAAf;;AAEA,SAAKC,UAAL,GAAkBA,UAAlB;AACD;AAED;;;;;AAIAD,EAAAA,iBAAiB,CAACE,SAAlB,CAA4BC,MAA5B,GAAqC,SAASA,MAAT,GAAkB;AACrD,QAAI,KAAKF,UAAT,EAAqB;AACnB,WAAKA,UAAL,CAAgBG,kBAAhB,CAAmC,IAAnC;AACA,WAAKH,UAAL,GAAkB,IAAlB;AACD;AACF,GALD;;AAOA,SAAOD,iBAAP;AACD,CAzBuB,EAAxB;;AA2BAK,MAAM,CAACC,OAAP,GAAiBN,iBAAjB","sourcesContent":["/**\r\n * Copyright (c) 2014-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule EventSubscription\r\n * @typechecks\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * EventSubscription represents a subscription to a particular event. It can\r\n * remove its own subscription.\r\n */\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\r\n\r\nvar EventSubscription = (function () {\r\n\r\n  /**\r\n   * @param {EventSubscriptionVendor} subscriber the subscriber that controls\r\n   *   this subscription.\r\n   */\r\n\r\n  function EventSubscription(subscriber) {\r\n    _classCallCheck(this, EventSubscription);\r\n\r\n    this.subscriber = subscriber;\r\n  }\r\n\r\n  /**\r\n   * Removes this subscription from the subscriber that controls it.\r\n   */\r\n\r\n  EventSubscription.prototype.remove = function remove() {\r\n    if (this.subscriber) {\r\n      this.subscriber.removeSubscription(this);\r\n      this.subscriber = null;\r\n    }\r\n  };\r\n\r\n  return EventSubscription;\r\n})();\r\n\r\nmodule.exports = EventSubscription;"]},"metadata":{},"sourceType":"script"}