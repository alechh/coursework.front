{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar react_dom_1 = tslib_1.__importDefault(require(\"react-dom\"));\n\nvar lodash_debounce_1 = tslib_1.__importDefault(require(\"lodash.debounce\"));\n\nvar utils_1 = require(\"./utils\");\n\nvar handlers = [];\n\nfunction addHandleEvent() {\n  /**\r\n                            * Firefox do not supports 'focusin' event.\r\n                            * Focus events bubbles multiple time\r\n                            * without possibilty to cancell bubbling.\r\n                            * Using debounce to capture only first focus event\r\n                            * Mozilla Firefix\r\n                            *   ¯\\_(ツ)_/¯\r\n                            */\n  document.body.addEventListener(utils_1.isFirefox ? 'focus' : 'focusin', utils_1.isFirefox ? lodash_debounce_1[\"default\"](handleNativeFocus, 0, {\n    leading: true,\n    trailing: false\n  }) : handleNativeFocus, utils_1.isFirefox);\n}\n\nif (typeof document !== 'undefined') {\n  if (document.readyState === 'complete') {\n    addHandleEvent();\n  } else {\n    window.addEventListener('load', addHandleEvent);\n  }\n}\n\nfunction handleNativeFocus(event) {\n  // FIXME: not safe casting\n  var target = event.target || event.srcElement;\n  handlers.forEach(function (handler) {\n    var elements = handler.elements;\n\n    if (typeof elements === 'function') {\n      elements = elements();\n    }\n\n    if (elements.some(containsTargetOrRenderContainer(target))) {\n      return;\n    }\n\n    react_dom_1[\"default\"].unstable_batchedUpdates(function () {\n      return handler.callback(event);\n    });\n  });\n}\n\nfunction containsTargetOrRenderContainer(target) {\n  return function (element) {\n    if (!element) {\n      return false;\n    }\n\n    if (element.contains(target)) {\n      return true;\n    }\n\n    var container = findRenderContainer(target, element);\n    return !!container && element.contains(container);\n  };\n}\n\nexports.containsTargetOrRenderContainer = containsTargetOrRenderContainer;\n/**\r\n                                                                            * Searches RenderContainer placed in \"rootNode\" for \"node\"\r\n                                                                            */\n\nfunction findRenderContainer(node, rootNode, container) {\n  var currentNode = node.parentNode;\n\n  if (!currentNode || node === rootNode || currentNode === rootNode || currentNode === document.body || currentNode === document.documentElement || !(currentNode instanceof Element)) {\n    return container ? container : null;\n  }\n\n  var newContainerId = currentNode.getAttribute('data-rendered-container-id');\n\n  if (newContainerId) {\n    var nextNode = document.querySelector(\"[data-render-container-id~=\\\"\" + newContainerId + \"\\\"]\");\n\n    if (!nextNode) {\n      throw Error(\"Origin node for container with id \" + newContainerId + \" was not found\");\n    }\n\n    return findRenderContainer(nextNode, rootNode, nextNode);\n  }\n\n  return findRenderContainer(currentNode, rootNode, container);\n}\n\nfunction listen(elements, callback) {\n  var handler = {\n    elements: elements,\n    callback: callback\n  };\n  handlers.push(handler);\n  return {\n    remove: function remove() {\n      var index = handlers.indexOf(handler);\n\n      if (index > -1) {\n        handlers.splice(index, 1);\n      }\n    }\n  };\n}\n\nexports[\"default\"] = listen;","map":{"version":3,"sources":["/home/aleksandr/Documents/HwProj-2.0.1/hwproj.courseworks.front/node_modules/@skbkontur/react-ui/lib/listenFocusOutside.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","react_dom_1","__importDefault","lodash_debounce_1","utils_1","handlers","addHandleEvent","document","body","addEventListener","isFirefox","handleNativeFocus","leading","trailing","readyState","window","event","target","srcElement","forEach","handler","elements","some","containsTargetOrRenderContainer","unstable_batchedUpdates","callback","element","contains","container","findRenderContainer","node","rootNode","currentNode","parentNode","documentElement","Element","newContainerId","getAttribute","nextNode","querySelector","Error","listen","push","remove","index","indexOf","splice"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar react_dom_1 = tslib_1.__importDefault(require(\"react-dom\"));\nvar lodash_debounce_1 = tslib_1.__importDefault(require(\"lodash.debounce\"));\nvar utils_1 = require(\"./utils\");\nvar handlers = [];\nfunction addHandleEvent() {\n  /**\r\n                            * Firefox do not supports 'focusin' event.\r\n                            * Focus events bubbles multiple time\r\n                            * without possibilty to cancell bubbling.\r\n                            * Using debounce to capture only first focus event\r\n                            * Mozilla Firefix\r\n                            *   ¯\\_(ツ)_/¯\r\n                            */\n  document.body.addEventListener(utils_1.isFirefox ? 'focus' : 'focusin', utils_1.isFirefox ? lodash_debounce_1[\"default\"](handleNativeFocus, 0, { leading: true, trailing: false }) : handleNativeFocus, utils_1.isFirefox);\n}\nif (typeof document !== 'undefined') {\n  if (document.readyState === 'complete') {\n    addHandleEvent();\n  } else\n  {\n    window.addEventListener('load', addHandleEvent);\n  }\n}\nfunction handleNativeFocus(event) {\n  // FIXME: not safe casting\n  var target = event.target || event.srcElement;\n  handlers.forEach(function (handler) {\n    var elements = handler.elements;\n    if (typeof elements === 'function') {\n      elements = elements();\n    }\n    if (elements.some(containsTargetOrRenderContainer(target))) {\n      return;\n    }\n    react_dom_1[\"default\"].unstable_batchedUpdates(function () {return handler.callback(event);});\n  });\n}\nfunction containsTargetOrRenderContainer(target) {\n  return function (element) {\n    if (!element) {\n      return false;\n    }\n    if (element.contains(target)) {\n      return true;\n    }\n    var container = findRenderContainer(target, element);\n    return !!container && element.contains(container);\n  };\n}\nexports.containsTargetOrRenderContainer = containsTargetOrRenderContainer;\n/**\r\n                                                                            * Searches RenderContainer placed in \"rootNode\" for \"node\"\r\n                                                                            */\nfunction findRenderContainer(node, rootNode, container) {\n  var currentNode = node.parentNode;\n  if (!currentNode ||\n  node === rootNode ||\n  currentNode === rootNode ||\n  currentNode === document.body ||\n  currentNode === document.documentElement ||\n  !(currentNode instanceof Element)) {\n    return container ? container : null;\n  }\n  var newContainerId = currentNode.getAttribute('data-rendered-container-id');\n  if (newContainerId) {\n    var nextNode = document.querySelector(\"[data-render-container-id~=\\\"\" + newContainerId + \"\\\"]\");\n    if (!nextNode) {\n      throw Error(\"Origin node for container with id \" + newContainerId + \" was not found\");\n    }\n    return findRenderContainer(nextNode, rootNode, nextNode);\n  }\n  return findRenderContainer(currentNode, rootNode, container);\n}\nfunction listen(elements, callback) {\n  var handler = {\n    elements: elements,\n    callback: callback };\n\n  handlers.push(handler);\n  return {\n    remove: function remove() {\n      var index = handlers.indexOf(handler);\n      if (index > -1) {\n        handlers.splice(index, 1);\n      }\n    } };\n\n}\nexports[\"default\"] = listen;"]},"metadata":{},"sourceType":"script"}