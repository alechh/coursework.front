{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sasha\\\\Documents\\\\coursework.front\\\\src\\\\Components\\\\MainWindow\\\\MainWindowComponents\\\\Content\\\\NewCriticsList\\\\NewCriticList.tsx\";\nimport React, { Component } from 'react';\nimport Gapped from '@skbkontur/react-ui/Gapped';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@skbkontur/react-ui/Button';\nimport Toast from '@skbkontur/react-ui/Toast';\nimport './NewCriticList.css';\nimport Ok from '@skbkontur/react-icons/Ok';\nimport Delete from '@skbkontur/react-icons/Delete';\nimport newCritics from '../../../../../TestData/Curator/newCritics';\nimport currentCritics from '../../../../../TestData/Curator/CurrentCritics';\n\nclass NewCriticList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleSelect() {\n    //\n    //\n    //\n    Toast.push('Рецензент назначен');\n  }\n\n  handleDelete() {\n    Toast.push('Назначение отменено');\n  }\n\n  renderButton(criticId) {\n    return /*#__PURE__*/React.createElement(Button, {\n      icon: this.props.type === 'not-selected' ? /*#__PURE__*/React.createElement(Ok, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 59\n        }\n      }) : /*#__PURE__*/React.createElement(Delete, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 67\n        }\n      }),\n      use: this.props.type === 'not-selected' ? 'success' : 'danger',\n      onClick: () => {\n        if (this.props.type === 'not-selected') {\n          //----------------------------------------------------\n          //запрос на добавление рецензента по userId и criticId\n          //----------------------------------------------------\n          Toast.push('Рецензент назначен');\n        } else {\n          //----------------------------------------------------\n          //запрос на удаление рецензента по userId и criticId\n          //----------------------------------------------------\n          Toast.push('Рецензент удален');\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, this.props.type === 'not-selected' ? 'Назначить своим' : 'Отменить назначение');\n  }\n\n  renderItem(item) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newCriticListItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Gapped, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        minWidth: '350px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 53\n      }\n    }, item.name, \", \\u043A\\u0430\\u0444\\u0435\\u0434\\u0440\\u0430 \", item.department)), this.renderButton(item.id)));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newCriticList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, this.props.type === 'not-selected' ? newCritics.map(item => this.renderItem(item)) : currentCritics.map(item => this.renderItem(item)));\n  }\n\n}\n\nexport default NewCriticList;","map":{"version":3,"sources":["C:/Users/Sasha/Documents/coursework.front/src/Components/MainWindow/MainWindowComponents/Content/NewCriticsList/NewCriticList.tsx"],"names":["React","Component","Gapped","Typography","Button","Toast","Ok","Delete","newCritics","currentCritics","NewCriticList","constructor","props","state","handleSelect","push","handleDelete","renderButton","criticId","type","renderItem","item","minWidth","name","department","id","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAO,qBAAP;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AAEA,OAAOC,UAAP,MAAuB,4CAAvB;AACA,OAAOC,cAAP,MAA2B,gDAA3B;;AAkBA,MAAMC,aAAN,SAA4BT,SAA5B,CAAmD;AAC/CU,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACH;;AAEOC,EAAAA,YAAR,GAAsB;AAClB;AACA;AACA;AACAT,IAAAA,KAAK,CAACU,IAAN,CAAW,oBAAX;AACH;;AAEOC,EAAAA,YAAR,GAAsB;AAClBX,IAAAA,KAAK,CAACU,IAAN,CAAW,qBAAX;AACH;;AAEOE,EAAAA,YAAR,CAAqBC,QAArB,EAAuC;AACnC,wBACI,oBAAC,MAAD;AACI,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWO,IAAX,KAAoB,cAApB,gBAAoC,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApC,gBAA4C,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADtD;AAEI,MAAA,GAAG,EAAE,KAAKP,KAAL,CAAWO,IAAX,KAAoB,cAApB,GAAoC,SAApC,GAAgD,QAFzD;AAGI,MAAA,OAAO,EAAE,MAAM;AACX,YAAG,KAAKP,KAAL,CAAWO,IAAX,KAAoB,cAAvB,EAAsC;AAClC;AACA;AACA;AACAd,UAAAA,KAAK,CAACU,IAAN,CAAW,oBAAX;AACH,SALD,MAMI;AACA;AACA;AACA;AACAV,UAAAA,KAAK,CAACU,IAAN,CAAW,kBAAX;AACH;AACA,OAhBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAmBK,KAAKH,KAAL,CAAWO,IAAX,KAAoB,cAApB,GAAoC,iBAApC,GAAwD,qBAnB7D,CADJ;AAuBH;;AAEOC,EAAAA,UAAR,CAAmBC,IAAnB,EAAgC;AAC5B,wBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BD,IAAI,CAACE,IAA/B,mDAA+CF,IAAI,CAACG,UAApD,CAAhC,CADJ,EAEK,KAAKP,YAAL,CAAkBI,IAAI,CAACI,EAAvB,CAFL,CADJ,CADJ;AAQH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKd,KAAL,CAAWO,IAAX,KAAoB,cAApB,GACGX,UAAU,CAACmB,GAAX,CAAeN,IAAI,IAAI,KAAKD,UAAL,CAAgBC,IAAhB,CAAvB,CADH,GAEGZ,cAAc,CAACkB,GAAf,CAAmBN,IAAI,IAAI,KAAKD,UAAL,CAAgBC,IAAhB,CAA3B,CAHR,CADJ;AAQH;;AA/D8C;;AAkEnD,eAAeX,aAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport Gapped from '@skbkontur/react-ui/Gapped'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@skbkontur/react-ui/Button'\r\nimport Toast from '@skbkontur/react-ui/Toast'\r\nimport './NewCriticList.css'\r\nimport Ok from '@skbkontur/react-icons/Ok'\r\nimport Delete from '@skbkontur/react-icons/Delete'\r\n\r\nimport newCritics from '../../../../../TestData/Curator/newCritics'\r\nimport currentCritics from '../../../../../TestData/Curator/CurrentCritics'\r\n\r\ninterface Idata{\r\n    name : string,\r\n    position : string,\r\n    course : number,\r\n    department : string,\r\n    id?: number\r\n}\r\n\r\ninterface Props{\r\n    type : 'selected' | 'not-selected',\r\n    userId?: number\r\n}\r\n\r\ninterface State{\r\n}\r\n\r\nclass NewCriticList extends Component<Props, State>{\r\n    constructor(props : Props){\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    private handleSelect(){\r\n        //\r\n        //\r\n        //\r\n        Toast.push('Рецензент назначен')\r\n    }\r\n\r\n    private handleDelete(){\r\n        Toast.push('Назначение отменено')\r\n    }\r\n\r\n    private renderButton(criticId?: number){\r\n        return(\r\n            <Button\r\n                icon={this.props.type === 'not-selected'? <Ok/> : <Delete/>} \r\n                use={this.props.type === 'not-selected'? 'success' : 'danger'} \r\n                onClick={() => {\r\n                    if(this.props.type === 'not-selected'){\r\n                        //----------------------------------------------------\r\n                        //запрос на добавление рецензента по userId и criticId\r\n                        //----------------------------------------------------\r\n                        Toast.push('Рецензент назначен')\r\n                    }\r\n                    else{\r\n                        //----------------------------------------------------\r\n                        //запрос на удаление рецензента по userId и criticId\r\n                        //----------------------------------------------------\r\n                        Toast.push('Рецензент удален')\r\n                    }\r\n                    }\r\n                }\r\n            >\r\n                {this.props.type === 'not-selected'? 'Назначить своим' : 'Отменить назначение'}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    private renderItem(item : Idata){\r\n        return(\r\n            <div className='newCriticListItem'>\r\n                <Gapped>\r\n                    <div style={{minWidth:'350px'}}><Typography variant='h5'>{item.name}, кафедра {item.department}</Typography></div>\r\n                    {this.renderButton(item.id)}\r\n                </Gapped>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='newCriticList'>\r\n                {this.props.type === 'not-selected'? \r\n                    newCritics.map(item => this.renderItem(item))\r\n                :   currentCritics.map(item => this.renderItem(item))\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewCriticList"]},"metadata":{},"sourceType":"module"}