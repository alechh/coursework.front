{"ast":null,"code":"var _jsxFileName = \"/home/aleksandr/Documents/HwProj-2.0.1/hwproj.courseworks.front/src/Components/TopBar/ServiceTopBar.tsx\";\nimport React, { Component } from \"react\";\nimport TopBar from \"@skbkontur/react-ui/TopBar\";\nimport Logotype from \"@skbkontur/react-ui/Logotype\";\nimport { User } from \"@skbkontur/react-icons\";\nimport styles from \"./ServiceTopBar.module.css\";\nimport Toast from \"@skbkontur/react-ui/Toast\";\nexport default class ServiceTopBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderTopBar = () => {\n      const {\n        isAccountTitleHovered\n      } = this.state;\n      return /*#__PURE__*/React.createElement(TopBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TopBar.Start, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TopBar.ItemStatic, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontSize: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Logotype, {\n        suffix: \"\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\",\n        locale: {\n          prefix: \"hwpr\",\n          suffix: \"j\"\n        },\n        color: \"#1E79BE\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }\n      })))), /*#__PURE__*/React.createElement(TopBar.End, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onMouseEnter: () => this.setState({\n          isAccountTitleHovered: true\n        }),\n        onMouseLeave: () => this.setState({\n          isAccountTitleHovered: false\n        }),\n        className: styles.accountTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TopBar.ItemStatic, {\n        active: isAccountTitleHovered,\n        _onClick: this.onAccountTitleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(User, {\n        color: \"#666\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }\n      }), \"\\xA0Alex Berezhnykh\")), /*#__PURE__*/React.createElement(TopBar.Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(TopBar.Logout, {\n        onClick: () => alert('Logout!'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      })));\n    };\n\n    this.onAccountTitleClick = () => {\n      Toast.push(\"Этот раздел ещё в разработке\", {\n        label: \"Окей, я понял\",\n        handler: () => Toast.push(\"Допиши сам!\")\n      });\n    };\n\n    this.state = {\n      isAccountTitleHovered: false\n    };\n  }\n\n  render() {\n    return this.renderTopBar();\n  }\n\n}","map":{"version":3,"sources":["/home/aleksandr/Documents/HwProj-2.0.1/hwproj.courseworks.front/src/Components/TopBar/ServiceTopBar.tsx"],"names":["React","Component","TopBar","Logotype","User","styles","Toast","ServiceTopBar","constructor","props","renderTopBar","isAccountTitleHovered","state","fontSize","prefix","suffix","setState","accountTitle","onAccountTitleClick","alert","push","label","handler","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAAQC,IAAR,QAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AASA,eAAe,MAAMC,aAAN,SAA4BN,SAA5B,CAAoD;AAE/DO,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;;AADsB,SAUlBC,YAVkB,GAUH,MAAM;AACzB,YAAM;AAACC,QAAAA;AAAD,UAA0B,KAAKC,KAArC;AACA,0BACQ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD,CAAQ,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAC,sCAAjB;AAA0B,QAAA,MAAM,EAAE;AAACC,UAAAA,MAAM,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SAAlC;AAAiE,QAAA,KAAK,EAAC,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CADJ,eAQI,oBAAC,MAAD,CAAQ,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,YAAY,EAAE,MAAM,KAAKC,QAAL,CAAc;AAACL,UAAAA,qBAAqB,EAAE;AAAxB,SAAd,CAAzB;AACK,QAAA,YAAY,EAAE,MAAM,KAAKK,QAAL,CAAc;AAACL,UAAAA,qBAAqB,EAAE;AAAxB,SAAd,CADzB;AAEK,QAAA,SAAS,EAAEN,MAAM,CAACY,YAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI,oBAAC,MAAD,CAAQ,UAAR;AAAmB,QAAA,MAAM,EAAEN,qBAA3B;AACA,QAAA,QAAQ,EAAE,KAAKO,mBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,wBAHJ,CADJ,eAUI,oBAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,eAWI,oBAAC,MAAD,CAAQ,MAAR;AAAe,QAAA,OAAO,EAAE,MAAMC,KAAK,CAAC,SAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,CARJ,CADR;AAwBH,KApCyB;;AAAA,SAsClBD,mBAtCkB,GAsCI,MAAM;AAChCZ,MAAAA,KAAK,CAACc,IAAN,CAAW,8BAAX,EAA2C;AACvCC,QAAAA,KAAK,EAAE,eADgC;AAEvCC,QAAAA,OAAO,EAAE,MAAMhB,KAAK,CAACc,IAAN,CAAW,aAAX;AAFwB,OAA3C;AAIH,KA3CyB;;AAGtB,SAAKR,KAAL,GAAa;AAACD,MAAAA,qBAAqB,EAAE;AAAxB,KAAb;AACH;;AAEDY,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKb,YAAL,EAAP;AACH;;AAV8D","sourcesContent":["import React, {Component} from \"react\";\nimport TopBar from \"@skbkontur/react-ui/TopBar\";\nimport Logotype from \"@skbkontur/react-ui/Logotype\";\nimport {User} from \"@skbkontur/react-icons\";\nimport styles from \"./ServiceTopBar.module.css\";\nimport Toast from \"@skbkontur/react-ui/Toast\";\ninterface Props {\n\n}\n\ninterface State {\n    isAccountTitleHovered: boolean;\n}\n\nexport default class ServiceTopBar extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {isAccountTitleHovered: false}\n    }\n\n    render() {\n        return this.renderTopBar();\n    }\n\n    private renderTopBar = () => {\n        const {isAccountTitleHovered} = this.state;\n        return (\n                <TopBar>\n                    <TopBar.Start>\n                        <TopBar.ItemStatic>\n                            <div style={{fontSize: 25}}>\n                                <Logotype suffix=\"курсач\" locale={{prefix: \"hwpr\", suffix: \"j\"}} color=\"#1E79BE\"/>\n                            </div>\n                        </TopBar.ItemStatic>\n                    </TopBar.Start>\n                    <TopBar.End>\n                        <div onMouseEnter={() => this.setState({isAccountTitleHovered: true})}\n                             onMouseLeave={() => this.setState({isAccountTitleHovered: false})}\n                             className={styles.accountTitle}>\n                            <TopBar.ItemStatic active={isAccountTitleHovered}\n                            _onClick={this.onAccountTitleClick}>\n                                <User color=\"#666\"/>\n                                &nbsp;Alex Berezhnykh\n                            </TopBar.ItemStatic>\n                        </div>\n                        <TopBar.Divider/>\n                        <TopBar.Logout onClick={() => alert('Logout!')}/>\n                    </TopBar.End>\n                </TopBar>\n        )\n    };\n\n    private onAccountTitleClick = () => {\n        Toast.push(\"Этот раздел ещё в разработке\", {\n            label: \"Окей, я понял\",\n            handler: () => Toast.push(\"Допиши сам!\"),\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}