{"ast":null,"code":"/*eslint-env browser*/\nvar clientOverlay = document.createElement('div');\nclientOverlay.id = 'webpack-hot-middleware-clientOverlay';\nvar styles = {\n  background: 'rgba(0,0,0,0.85)',\n  color: '#e8e8e8',\n  lineHeight: '1.6',\n  whiteSpace: 'pre',\n  fontFamily: 'Menlo, Consolas, monospace',\n  fontSize: '13px',\n  position: 'fixed',\n  zIndex: 9999,\n  padding: '10px',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n  overflow: 'auto',\n  dir: 'ltr',\n  textAlign: 'left'\n};\n\nvar ansiHTML = require('ansi-html');\n\nvar colors = {\n  reset: ['transparent', 'transparent'],\n  black: '181818',\n  red: 'ff3348',\n  green: '3fff4f',\n  yellow: 'ffd30e',\n  blue: '169be0',\n  magenta: 'f840b7',\n  cyan: '0ad8e9',\n  lightgrey: 'ebe7e3',\n  darkgrey: '6d7891'\n};\n\nvar Entities = require('html-entities').AllHtmlEntities;\n\nvar entities = new Entities();\n\nfunction showProblems(type, lines) {\n  clientOverlay.innerHTML = '';\n  lines.forEach(function (msg) {\n    msg = ansiHTML(entities.encode(msg));\n    var div = document.createElement('div');\n    div.style.marginBottom = '26px';\n    div.innerHTML = problemType(type) + ' in ' + msg;\n    clientOverlay.appendChild(div);\n  });\n\n  if (document.body) {\n    document.body.appendChild(clientOverlay);\n  }\n}\n\nfunction clear() {\n  if (document.body && clientOverlay.parentNode) {\n    document.body.removeChild(clientOverlay);\n  }\n}\n\nfunction problemType(type) {\n  var problemColors = {\n    errors: colors.red,\n    warnings: colors.yellow\n  };\n  var color = problemColors[type] || colors.red;\n  return '<span style=\"background-color:#' + color + '; color:#000000; padding:3px 6px; border-radius: 4px;\">' + type.slice(0, -1).toUpperCase() + '</span>';\n}\n\nmodule.exports = function (options) {\n  for (var color in options.ansiColors) {\n    if (color in colors) {\n      colors[color] = options.ansiColors[color];\n    }\n\n    ansiHTML.setColors(colors);\n  }\n\n  for (var style in options.overlayStyles) {\n    styles[style] = options.overlayStyles[style];\n  }\n\n  for (var key in styles) {\n    clientOverlay.style[key] = styles[key];\n  }\n\n  return {\n    showProblems: showProblems,\n    clear: clear\n  };\n};\n\nmodule.exports.clear = clear;\nmodule.exports.showProblems = showProblems;","map":{"version":3,"sources":["/home/aleksandr/coursework.front/node_modules/webpack-hot-middleware/client-overlay.js"],"names":["clientOverlay","document","createElement","id","styles","background","color","lineHeight","whiteSpace","fontFamily","fontSize","position","zIndex","padding","left","right","top","bottom","overflow","dir","textAlign","ansiHTML","require","colors","reset","black","red","green","yellow","blue","magenta","cyan","lightgrey","darkgrey","Entities","AllHtmlEntities","entities","showProblems","type","lines","innerHTML","forEach","msg","encode","div","style","marginBottom","problemType","appendChild","body","clear","parentNode","removeChild","problemColors","errors","warnings","slice","toUpperCase","module","exports","options","ansiColors","setColors","overlayStyles","key"],"mappings":"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","sourcesContent":["/*eslint-env browser*/\n\nvar clientOverlay = document.createElement('div');\nclientOverlay.id = 'webpack-hot-middleware-clientOverlay';\nvar styles = {\n  background: 'rgba(0,0,0,0.85)',\n  color: '#e8e8e8',\n  lineHeight: '1.6',\n  whiteSpace: 'pre',\n  fontFamily: 'Menlo, Consolas, monospace',\n  fontSize: '13px',\n  position: 'fixed',\n  zIndex: 9999,\n  padding: '10px',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n  overflow: 'auto',\n  dir: 'ltr',\n  textAlign: 'left',\n};\n\nvar ansiHTML = require('ansi-html');\nvar colors = {\n  reset: ['transparent', 'transparent'],\n  black: '181818',\n  red: 'ff3348',\n  green: '3fff4f',\n  yellow: 'ffd30e',\n  blue: '169be0',\n  magenta: 'f840b7',\n  cyan: '0ad8e9',\n  lightgrey: 'ebe7e3',\n  darkgrey: '6d7891',\n};\n\nvar Entities = require('html-entities').AllHtmlEntities;\nvar entities = new Entities();\n\nfunction showProblems(type, lines) {\n  clientOverlay.innerHTML = '';\n  lines.forEach(function(msg) {\n    msg = ansiHTML(entities.encode(msg));\n    var div = document.createElement('div');\n    div.style.marginBottom = '26px';\n    div.innerHTML = problemType(type) + ' in ' + msg;\n    clientOverlay.appendChild(div);\n  });\n  if (document.body) {\n    document.body.appendChild(clientOverlay);\n  }\n}\n\nfunction clear() {\n  if (document.body && clientOverlay.parentNode) {\n    document.body.removeChild(clientOverlay);\n  }\n}\n\nfunction problemType(type) {\n  var problemColors = {\n    errors: colors.red,\n    warnings: colors.yellow,\n  };\n  var color = problemColors[type] || colors.red;\n  return (\n    '<span style=\"background-color:#' +\n    color +\n    '; color:#000000; padding:3px 6px; border-radius: 4px;\">' +\n    type.slice(0, -1).toUpperCase() +\n    '</span>'\n  );\n}\n\nmodule.exports = function(options) {\n  for (var color in options.ansiColors) {\n    if (color in colors) {\n      colors[color] = options.ansiColors[color];\n    }\n    ansiHTML.setColors(colors);\n  }\n\n  for (var style in options.overlayStyles) {\n    styles[style] = options.overlayStyles[style];\n  }\n\n  for (var key in styles) {\n    clientOverlay.style[key] = styles[key];\n  }\n\n  return {\n    showProblems: showProblems,\n    clear: clear,\n  };\n};\n\nmodule.exports.clear = clear;\nmodule.exports.showProblems = showProblems;\n"]},"metadata":{},"sourceType":"script"}