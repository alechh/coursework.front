{"ast":null,"code":"var _jsxFileName = \"/home/aleksandr/coursework.front/src/Components/MainWindow/MainWindowComponents/Content/WorksList/WorksList.tsx\";\nimport React, { Component } from 'react';\nimport CourseWork from '../CourseWork/CourseWork';\nimport Typography from '@material-ui/core/Typography';\nimport Spinner from '@skbkontur/react-ui/Spinner';\nimport Center from '@skbkontur/react-ui/Center';\nimport './WorksList.css'; //student\n\n//teacher\nimport teacherCurrentWorks from '../../../../../TestData/Teacher/currentWorks';\nimport teacherMyFreeWorks from '../../../../../TestData/Teacher/myFreeWorks';\nimport teacherCompletedWorks from '../../../../../TestData/Teacher/completedWorks';\n//curator \nimport curatorCurrentWorks from '../../../../../TestData/Curator/currentWorks';\nimport curatorMyFreeWorks from '../../../../../TestData/Curator/myFreeWorks';\nimport curatorMyCurrentWorks from '../../../../../TestData/Curator/myCurrentWorks';\n\nclass WorksList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.whichData = () => {\n      switch (this.props.role) {\n        case 'student':\n          {\n            switch (this.props.type) {\n              case 'completed':\n                {\n                  //--------------------------------\n                  const axios = require('axios').default;\n\n                  axios.get('../api/course_works/my/completed', this.props.token).then(response => {\n                    this.setState({\n                      data: response\n                    });\n                  });\n                  break; //--------------------------------\n                  //return (this.setState({data : completedWorks, type : 'current'}))\n                }\n\n              case 'free':\n                {\n                  //--------------------------------\n                  const axios = require('axios').default;\n\n                  axios.get('../api/course_works/available').then(response => {\n                    this.setState({\n                      data: response\n                    });\n                  });\n                  break; //--------------------------------\n                  //return (this.setState({data : freeWorks, type : 'free'}))\n                }\n            }\n\n            break;\n          }\n\n        case 'teacher':\n          {\n            switch (this.props.type) {\n              case 'current':\n                {\n                  //--------------------------------\n                  //запрос по userId данных курсовых\n                  //--------------------------------\n                  return this.setState({\n                    data: teacherCurrentWorks,\n                    type: 'current'\n                  });\n                }\n\n              case 'free':\n                {\n                  //--------------------------------\n                  //запрос по userId данных курсовых\n                  //--------------------------------\n                  return this.setState({\n                    data: teacherMyFreeWorks,\n                    type: 'free'\n                  });\n                }\n\n              case 'completed':\n                {\n                  //--------------------------------\n                  //запрос по userId данных курсовых\n                  //--------------------------------\n                  return this.setState({\n                    data: teacherCompletedWorks,\n                    type: 'completed'\n                  });\n                }\n\n              case 'foreign':\n                {\n                  //--------------------------------\n                  const axios = require('axios').default;\n\n                  axios.get('../api/course_works/available').then(response => {\n                    this.setState({\n                      data: response\n                    });\n                  });\n                  break; //--------------------------------\n                  //return (this.setState({data : teacherFreeWorks, type : 'foreign'}))\n                }\n            }\n\n            break;\n          }\n\n        case 'curator':\n          {\n            if (this.props.curatorSelect === 'Занятые темы') {\n              //--------------------------------\n              //запрос по userId данных курсовых\n              //--------------------------------\n              return this.setState({\n                data: curatorMyCurrentWorks,\n                type: 'current'\n              });\n            } else if (this.props.curatorSelect === 'Свободные темы') {\n              //--------------------------------\n              //запрос по userId данных курсовых\n              //--------------------------------\n              return this.setState({\n                data: curatorMyFreeWorks,\n                type: 'free'\n              });\n            } else if (this.props.type === 'current') {\n              //--------------------------------\n              //запрос по userId данных курсовых\n              //--------------------------------\n              this.setState({\n                data: curatorCurrentWorks,\n                type: 'current'\n              });\n            }\n          }\n      }\n    };\n\n    this.state = {\n      data: [{}],\n      isLoading: false,\n      type: this.props.type\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.type !== prevProps.type) {\n      this.whichData();\n    }\n\n    if (this.props.curatorSelect !== prevProps.curatorSelect) this.whichData();\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    this.whichData();\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  renderCourseWork(work) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"workItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CourseWork, {\n      data: work,\n      changePage: this.props.changePage,\n      role: this.props.role,\n      type: this.props.type,\n      curatorSelect: this.props.curatorSelect === 'Занятые темы' || this.props.curatorSelect === 'Свободные темы' ? this.props.curatorSelect : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  renderList() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.needMarginTop(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, this.state.data.map(work => this.renderCourseWork(work)));\n  }\n\n  renderEmptyList() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: '10vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, \"\\u041D\\u0435\\u0442 \\u043A\\u0443\\u0440\\u0441\\u043E\\u0432\\u044B\\u0445 \\u0440\\u0430\\u0431\\u043E\\u0442\"));\n  }\n\n  isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n  }\n\n  needMarginTop() {\n    return this.props.type === 'foreign' ? 'mt' : '';\n  }\n\n  render() {\n    return !this.state.isLoading ? !this.isEmpty(this.state.data[0]) ? this.renderList() : this.renderEmptyList() : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '60vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Center, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      type: \"big\",\n      caption: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 56\n      }\n    })));\n  }\n\n}\n\nexport default WorksList;","map":{"version":3,"sources":["/home/aleksandr/coursework.front/src/Components/MainWindow/MainWindowComponents/Content/WorksList/WorksList.tsx"],"names":["React","Component","CourseWork","Typography","Spinner","Center","teacherCurrentWorks","teacherMyFreeWorks","teacherCompletedWorks","curatorCurrentWorks","curatorMyFreeWorks","curatorMyCurrentWorks","WorksList","constructor","props","whichData","role","type","axios","require","default","get","token","then","response","setState","data","curatorSelect","state","isLoading","componentDidUpdate","prevProps","componentDidMount","renderCourseWork","work","changePage","renderList","needMarginTop","map","renderEmptyList","textAlign","marginTop","isEmpty","obj","Object","keys","length","render","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport CourseWork from '../CourseWork/CourseWork'\nimport Typography from '@material-ui/core/Typography'\nimport Spinner from '@skbkontur/react-ui/Spinner'\nimport Center from '@skbkontur/react-ui/Center'\nimport axios from 'axios'\nimport './WorksList.css'\n\n//student\nimport completedWorks from '../../../../../TestData/Student/completedWorksData'\nimport freeWorks from '../../../../../TestData/Student/freeWorksData'\n\n//teacher\nimport teacherCurrentWorks from '../../../../../TestData/Teacher/currentWorks'\nimport teacherMyFreeWorks from '../../../../../TestData/Teacher/myFreeWorks'\nimport teacherCompletedWorks from '../../../../../TestData/Teacher/completedWorks'\nimport teacherFreeWorks from '../../../../../TestData/Teacher/freeWorks'\n\n//curator \nimport curatorCurrentWorks from '../../../../../TestData/Curator/currentWorks'\nimport curatorMyFreeWorks from '../../../../../TestData/Curator/myFreeWorks'\nimport curatorMyCurrentWorks from '../../../../../TestData/Curator/myCurrentWorks'\n\ntype WorkType = 'current' | 'completed' | 'free' | 'request' | 'foreign'\n\ninterface Props{\n    changePage(event : React.MouseEvent<HTMLButtonElement>) : void,\n    role?: string,\n    type?: WorkType,\n    curatorSelect?: string,\n    userId?: number,\n    token: string\n}\n\ninterface State{\n    data : {}[],\n    isLoading?: boolean,\n    type?: WorkType\n}\n\nclass WorksList extends Component<Props,State>{\n    constructor(props : Props){\n        super(props);\n        this.state={\n            data : [{}],\n            isLoading : false,\n            type : this.props.type\n        }\n    }\n\n    componentDidUpdate(prevProps : Props){\n        if(this.props.type !== prevProps.type){\n            this.whichData()  \n        }\n        if(this.props.curatorSelect !== prevProps.curatorSelect)\n            this.whichData()\n    }\n\n\n    componentDidMount(){\n        this.setState({isLoading : true})\n        this.whichData()\n        this.setState({isLoading : false})\n    }\n    \n    private whichData = () => {\n        switch(this.props.role){\n            case 'student':{\n                switch(this.props.type){\n                    case 'completed':{\n                        //--------------------------------\n                        const axios = require('axios').default\n                        axios.get('../api/course_works/my/completed', this.props.token)\n                        .then((response : {}[]) => {\n                            this.setState({data : response})\n                        })\n                        break\n                        //--------------------------------\n                        //return (this.setState({data : completedWorks, type : 'current'}))\n                    }\n                    case 'free':{\n                        //--------------------------------\n                        const axios = require('axios').default\n                        axios.get('../api/course_works/available')\n                        .then((response : {}[]) => {\n                            this.setState({data : response})\n                        })\n                        break\n                        //--------------------------------\n                        //return (this.setState({data : freeWorks, type : 'free'}))\n                    }\n                }\n                break\n            }\n            case 'teacher':{\n                switch(this.props.type){\n                    case 'current':{\n                        //--------------------------------\n                        //запрос по userId данных курсовых\n                        //--------------------------------\n\n                        return (this.setState({data : teacherCurrentWorks, type : 'current'}))\n                    }\n                    case 'free':{\n                        //--------------------------------\n                        //запрос по userId данных курсовых\n                        //--------------------------------\n\n                        return (this.setState({data : teacherMyFreeWorks, type : 'free'}))\n                    }\n                    case 'completed':{\n                        //--------------------------------\n                        //запрос по userId данных курсовых\n                        //--------------------------------\n\n                        return (this.setState({data : teacherCompletedWorks, type : 'completed'}))\n                    }\n                    case 'foreign':{\n                        //--------------------------------\n                        const axios = require('axios').default\n                        axios.get('../api/course_works/available')\n                        .then((response : {}[]) => {\n                            this.setState({data : response})\n                        })\n                        break\n                        //--------------------------------\n\n                        //return (this.setState({data : teacherFreeWorks, type : 'foreign'}))\n                    }\n                }\n                break\n            }\n            case 'curator':{\n                if(this.props.curatorSelect === 'Занятые темы'){\n                    //--------------------------------\n                    //запрос по userId данных курсовых\n                    //--------------------------------\n\n                    return (this.setState({data : curatorMyCurrentWorks, type : 'current'}))\n                }\n                else if (this.props.curatorSelect === 'Свободные темы'){\n                    //--------------------------------\n                    //запрос по userId данных курсовых\n                    //--------------------------------\n\n                    return (this.setState({data : curatorMyFreeWorks, type : 'free'}))\n                }\n                else if(this.props.type === 'current'){\n                    //--------------------------------\n                    //запрос по userId данных курсовых\n                    //--------------------------------\n\n                    this.setState({data : curatorCurrentWorks, type : 'current'})\n                }\n            }\n        }\n    }\n    \n    private renderCourseWork(work : {}){\n        return (\n            <div className='workItem'>\n                <CourseWork \n                    data={work} \n                    changePage={this.props.changePage} \n                    role={this.props.role}\n                    type={this.props.type}\n                    curatorSelect = {(this.props.curatorSelect === 'Занятые темы' || this.props.curatorSelect === 'Свободные темы')? this.props.curatorSelect : ''}/>\n            </div>\n        )\n    }\n\n    private renderList(){\n        return(\n            <div className={this.needMarginTop()}>\n                {this.state.data.map(work => this.renderCourseWork(work))}\n            </div>\n        )\n    }\n\n    private renderEmptyList(){\n        return(\n            <div style={{textAlign:\"center\", marginTop: '10vh'}}>\n                <Typography variant='h5'>Нет курсовых работ</Typography>\n            </div>\n        )\n    }\n\n    private isEmpty(obj : {}) {\n        return Object.keys(obj).length === 0;\n    }\n\n    \n    private needMarginTop(){\n        return(\n            this.props.type === 'foreign'?\n            'mt' : ''\n        )\n    }\n\n    render(){\n        return (\n            !this.state.isLoading?\n                !this.isEmpty(this.state.data[0])?\n                    this.renderList()\n                : this.renderEmptyList()\n            :   <div style={{height : '60vh'}}><Center><Spinner type='big' caption='Загрузка'/></Center></div>\n        )\n    }\n}\n\nexport default WorksList"]},"metadata":{},"sourceType":"module"}