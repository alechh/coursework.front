{"ast":null,"code":"var _jsxFileName = \"/home/aleksandr/hwproj.courseworks.front/src/Components/MainWindow/MainWindowComponents/Content/Content.tsx\";\nimport React, { Component } from 'react';\nimport './Content.css';\nimport ContentBar from './ContentBar/ContentBar';\nimport CourseWork from './CourseWork/CourseWork';\nimport MyCourseWorkDetail from './MyCourseWorkDetail/MyCourseWorkDetail';\nimport WorksList from './WorksList/WorksList';\nimport CourseWorkDetail from './CourseWorkDetail/CourseWorkDetail';\nimport RequestsList from './RequestsList/RequestsList';\nimport RequestDetail from './RequestDetail/RequestDetail';\nimport FreeWorkDetail from './FreeWorkDetail/FreeWorkDetail';\nimport Main from './Main/Main';\nimport RequireCriticList from './RequireCriticList/RequireCriticList';\nimport RequireCriticDetail from './RequireCriticDetail/RequireCriticDetail';\nimport BiddingDetail from './BiddingDetail/BiddingDetail';\nimport TeachersCurrentWork from './TeachersCurrentWork/TeachersCurrentWork';\nimport TeacherFreeWorksDetail from './TeacherFreeWorkDetail/TeacherFreeWorkDetail'; //student\n\nimport activeWork from '../../../../TestData/Student/activeWorkData';\nimport completedWorks from '../../../../TestData/Student/completedWorksData';\nimport requestsData from '../../../../TestData/Student/requestsData';\nimport freeWorks from '../../../../TestData/Student/freeWorksData';\nimport requireData from '../../../../TestData/Student/requireCriticData';\nimport biddingData from '../../../../TestData/Student/biddingData'; //teacher\n\nimport teacherCurrentWorks from '../../../../TestData/Teacher/currentWorks';\nimport teacherFreeWorks from '../../../../TestData/Teacher/freeWorks';\nimport teacherRequest from '../../../../TestData/Teacher/requestsData';\n\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  needContentBar() {\n    switch (this.props.role) {\n      case 'student':\n        {\n          if (this.props.page === 'Активные' || this.props.page === 'Завершенные' || this.props.page === 'Мои заявки') return true;\n          break;\n        }\n\n      case 'teacher':\n        {\n          if (this.props.page === 'Занятые' || this.props.page === 'Свободные' || this.props.page === 'Завершенные' || this.props.page === 'Заявки') return true;\n          break;\n        }\n    }\n\n    return false;\n  }\n\n  whichComponent() {\n    switch (this.props.role) {\n      case 'student':\n        {\n          if (this.props.page.indexOf('completed') + 1) {\n            const id = Number(this.props.page.substr(10));\n            let data = {};\n            completedWorks.map(item => {\n              if (item.id === id) data = item;\n            });\n            return /*#__PURE__*/React.createElement(CourseWorkDetail, {\n              data: data,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 28\n              }\n            });\n          }\n\n          if (this.props.page.indexOf('request') + 1) {\n            const id = Number(this.props.page.substr(8));\n            let data = {};\n            requestsData.map(item => {\n              if (item.id === id) data = item;\n            });\n            return /*#__PURE__*/React.createElement(RequestDetail, {\n              data: data,\n              role: this.props.role,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 28\n              }\n            });\n          }\n\n          if (this.props.page.indexOf('free') + 1) {\n            const id = Number(this.props.page.substr(5));\n            let data = {};\n            freeWorks.map(item => {\n              if (item.id === id) data = item;\n            });\n            return /*#__PURE__*/React.createElement(FreeWorkDetail, {\n              data: data,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 28\n              }\n            });\n          }\n\n          if (this.props.page.indexOf('requireCritic') + 1) {\n            const id = Number(this.props.page.substr(14));\n            let data = {};\n            requireData.map(item => {\n              if (item.id === id) data = item;\n            });\n            return /*#__PURE__*/React.createElement(RequireCriticDetail, {\n              data: data,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 28\n              }\n            });\n          }\n\n          if (this.props.page.indexOf('bidding') + 1) {\n            const id = Number(this.props.page.substr(8));\n            let data = {};\n            biddingData.map(item => {\n              if (item.id === id) data = item;\n            });\n            return /*#__PURE__*/React.createElement(BiddingDetail, {\n              data: data,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 28\n              }\n            });\n          }\n\n          break;\n        }\n\n      case 'teacher':\n        {\n          if (this.props.page.indexOf('st') === 0) {\n            var _this$props$page;\n\n            let studentId = Number((_this$props$page = this.props.page) === null || _this$props$page === void 0 ? void 0 : _this$props$page.substr(2, this.props.page.indexOf('request') - 3));\n            let requestId = Number(this.props.page.substr(this.props.page.indexOf('request') + 7));\n            return /*#__PURE__*/React.createElement(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 24\n              }\n            }, \"Student: \", studentId, \", request: \", requestId);\n          }\n\n          if (this.props.page.indexOf('current') + 1) {\n            const id = Number(this.props.page.substr(8));\n            let data = {};\n            teacherCurrentWorks.map(item => {\n              if (item.id === id) data = item;\n            });\n            return /*#__PURE__*/React.createElement(TeachersCurrentWork, {\n              data: data,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 28\n              }\n            });\n          }\n\n          if (this.props.page.indexOf('free') + 1) {\n            const id = Number(this.props.page.substr(5));\n            let validRequests;\n            validRequests = []; // eslint-disable-next-line\n\n            teacherRequest.map(item => {\n              if (item.id === id) validRequests.push(item);\n            });\n            let data = {};\n            teacherFreeWorks.map(item => {\n              if (item.id === id) data = item;\n            });\n            return /*#__PURE__*/React.createElement(TeacherFreeWorksDetail, {\n              data: data,\n              requests: validRequests,\n              changePage: this.props.changePage,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 28\n              }\n            });\n          }\n\n          break;\n        }\n\n      default:\n        return null;\n    }\n  }\n\n  whichContent() {\n    switch (this.props.role) {\n      case 'student':\n        {\n          switch (this.props.page) {\n            case 'Главная':\n              return /*#__PURE__*/React.createElement(Main, {\n                role: this.props.role,\n                handleCritic: this.props.handleCritic,\n                isCritic: this.props.isCritic,\n                changePage: this.props.changePage,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 32\n                }\n              });\n\n            case 'Активные':\n              return /*#__PURE__*/React.createElement(CourseWork, {\n                data: activeWork[0],\n                changePage: this.props.changePage,\n                role: this.props.role,\n                type: \"current\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 32\n                }\n              });\n\n            case 'Моя курсовая детально':\n              return /*#__PURE__*/React.createElement(MyCourseWorkDetail, {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 58\n                }\n              });\n\n            case 'Завершенные':\n              return /*#__PURE__*/React.createElement(WorksList, {\n                data: completedWorks,\n                changePage: this.props.changePage,\n                role: this.props.role,\n                type: \"completed\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 32\n                }\n              });\n\n            case 'Мои заявки':\n              return /*#__PURE__*/React.createElement(RequestsList, {\n                data: requestsData,\n                changePage: this.props.changePage,\n                role: this.props.role,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 32\n                }\n              });\n\n            case 'Свободные курсовые':\n              return /*#__PURE__*/React.createElement(WorksList, {\n                data: freeWorks,\n                changePage: this.props.changePage,\n                role: this.props.role,\n                type: \"free\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 32\n                }\n              });\n\n            case 'Требуют рецензии':\n              return /*#__PURE__*/React.createElement(RequireCriticList, {\n                data: requireData,\n                changePage: this.props.changePage,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 32\n                }\n              });\n\n            default:\n              return this.whichComponent();\n          }\n        }\n\n      case 'teacher':\n        {\n          switch (this.props.page) {\n            case 'Главная':\n              return /*#__PURE__*/React.createElement(Main, {\n                role: this.props.role,\n                handleCritic: this.props.handleCritic,\n                isCritic: this.props.isCritic,\n                changePage: this.props.changePage,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 32\n                }\n              });\n\n            case 'Занятые':\n              return /*#__PURE__*/React.createElement(WorksList, {\n                data: teacherCurrentWorks,\n                changePage: this.props.changePage,\n                role: this.props.role,\n                type: \"current\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 32\n                }\n              });\n\n            case 'Свободные':\n              return /*#__PURE__*/React.createElement(WorksList, {\n                data: teacherFreeWorks,\n                changePage: this.props.changePage,\n                role: this.props.role,\n                type: \"free\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 32\n                }\n              });\n\n            case 'Заявки':\n              return /*#__PURE__*/React.createElement(RequestsList, {\n                data: teacherRequest,\n                changePage: this.props.changePage,\n                role: this.props.role,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 32\n                }\n              });\n\n            default:\n              return this.whichComponent();\n          }\n        }\n    }\n  }\n\n  renderContent() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 13\n      }\n    }, this.needContentBar() ? /*#__PURE__*/React.createElement(ContentBar, {\n      changePage: this.props.changePage,\n      page: this.props.page,\n      role: this.props.role,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 41\n      }\n    }) : null, this.whichContent());\n  }\n\n  render() {\n    return this.renderContent();\n  }\n\n}\n\nexport default Content;","map":{"version":3,"sources":["/home/aleksandr/hwproj.courseworks.front/src/Components/MainWindow/MainWindowComponents/Content/Content.tsx"],"names":["React","Component","ContentBar","CourseWork","MyCourseWorkDetail","WorksList","CourseWorkDetail","RequestsList","RequestDetail","FreeWorkDetail","Main","RequireCriticList","RequireCriticDetail","BiddingDetail","TeachersCurrentWork","TeacherFreeWorksDetail","activeWork","completedWorks","requestsData","freeWorks","requireData","biddingData","teacherCurrentWorks","teacherFreeWorks","teacherRequest","Content","constructor","props","state","needContentBar","role","page","whichComponent","indexOf","id","Number","substr","data","map","item","studentId","requestId","validRequests","push","changePage","whichContent","handleCritic","isCritic","renderContent","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Content.css'\nimport ContentBar from './ContentBar/ContentBar'\nimport CourseWork from './CourseWork/CourseWork'\nimport MyCourseWorkDetail from './MyCourseWorkDetail/MyCourseWorkDetail'\nimport WorksList from './WorksList/WorksList'\nimport CourseWorkDetail from './CourseWorkDetail/CourseWorkDetail'\nimport RequestsList from './RequestsList/RequestsList'\nimport RequestDetail from './RequestDetail/RequestDetail'\nimport FreeWorkDetail from './FreeWorkDetail/FreeWorkDetail'\nimport Main from './Main/Main'\nimport RequireCriticList from './RequireCriticList/RequireCriticList'\nimport RequireCriticDetail from './RequireCriticDetail/RequireCriticDetail'\nimport BiddingDetail from './BiddingDetail/BiddingDetail'\nimport TeachersCurrentWork from './TeachersCurrentWork/TeachersCurrentWork'\nimport TeacherFreeWorksDetail from './TeacherFreeWorkDetail/TeacherFreeWorkDetail'\n\n//student\nimport activeWork from '../../../../TestData/Student/activeWorkData'\nimport completedWorks from '../../../../TestData/Student/completedWorksData'\nimport requestsData from '../../../../TestData/Student/requestsData'\nimport freeWorks from '../../../../TestData/Student/freeWorksData'\nimport requireData from '../../../../TestData/Student/requireCriticData'\nimport biddingData from '../../../../TestData/Student/biddingData'\n\n//teacher\nimport teacherCurrentWorks from '../../../../TestData/Teacher/currentWorks'\nimport teacherFreeWorks from '../../../../TestData/Teacher/freeWorks'\nimport teacherRequest from '../../../../TestData/Teacher/requestsData'\n \n\ninterface IRequestsData{\n    title?: string,\n    teacher?: string,\n    scienceArea?: string,\n    description?: string,\n    teacherContacts?: string,\n    aboutMe?: string,\n    id?: number\n}\n\ninterface ICompletedData{\n    title?: string,\n    teacher?: string,\n    deadline?: string,\n    scienceArea?: string,\n    description?: string,\n    reportFile?: string,\n    presentationFile?: string,\n    consultantReportFile?: string,\n    link?: string,\n    teacherContacts?: string,\n    consultant?: string,\n    consultantContacts?: string,\n    critic?: string,\n    status?: string,\n    teacherReview?: string,\n    criticReview?: string,\n    id?: number\n}\n\ninterface IFreeData{\n    title?: string,\n    teacher?:string,\n    teacherContacts?: string,\n    scienceArea?: string,\n    description?: string, \n    deadline?: string,\n    id?: number\n}\n\ninterface IRequireCriticData{\n    title?: string,\n    teacher?: string,\n    teacherContacts?: string,\n    scienceArea?: string,\n    description?: string, \n    reportFile?: string,\n    presentationFile?: string,\n    consultantReportFile?: string,\n    link?: string,\n    consultant?: string,\n    consultantContacts?: string,\n    status?: string,\n    switcher?: string,\n    student?: string,\n    course?: number,\n    id?: number\n}\n\ninterface IBiddingData{\n    title?: string,\n    teacher?: string,\n    teacherContacts?: string,\n    scienceArea?: string,\n    description?: string, \n    reportFile?: string,\n    presentationFile?: string,\n    consultantReportFile?: string,\n    link?: string,\n    consultant?: string,\n    consultantContacts?: string,\n    status?: string,\n    switcher?: string,\n    student?: string,\n    course?: number,\n    criticReview?:string,\n    id?: number\n}\n\n\ninterface ITeacherFreeWork{\n    title?: string,\n    teacher?: string,\n    teacherContacts?: string,\n    scienceArea?: string,\n    description?: string, \n    status?: string,\n    course?: number,\n    id?: number,\n    studentId?: number\n}\n\ninterface ITeacherRequest{\n    title?: string,\n    student?: string,\n    course?: number,\n    group?: string,\n    scienceArea?: string,\n    description?: string,\n    aboutMe?: string,\n    id?: number,\n    studentId?: number\n}\n\ninterface ITeacherCurrentWork{\n    title?: string,\n    teacher?: string,\n    teacherContacts?: string,\n    scienceArea?: string,\n    description?: string, \n    reportFile?: string,\n    presentationFile?: string,\n    consultantReportFile?: string,\n    link?: string,\n    consultant?: string,\n    consultantContacts?: string,\n    status?: string,\n    switcher?: string,\n    student?: string,\n    course?: number,\n    review?: string\n    criticReview?:string,\n    id?: number\n}\n\n\n\ninterface Props{\n    page?: string,\n    changePage(event : React.MouseEvent<HTMLButtonElement>) : void,\n    handleCritic() : void,\n    isCritic?: boolean,\n    role?: string\n}\n\ninterface State{\n\n}\n\nclass Content extends Component<Props,State>{\n    constructor(props : Props){\n        super(props);\n        this.state ={\n        }\n    }\n\n    needContentBar(){\n        switch(this.props.role){\n            case 'student':{  \n                if(this.props.page === 'Активные' || this.props.page === 'Завершенные' || this.props.page === 'Мои заявки')\n                    return true\n                break\n            }\n            case 'teacher':{\n                if(this.props.page === 'Занятые' || this.props.page === 'Свободные' || this.props.page === 'Завершенные' || this.props.page === 'Заявки')\n                    return true\n                break\n            }\n        }\n        return false\n    }\n\n \n    private whichComponent(){\n        switch(this.props.role){\n            case 'student':{\n                if(this.props.page!.indexOf('completed') + 1){\n                    const id = Number(this.props.page!.substr(10))\n                    let data : ICompletedData = {}\n                    completedWorks.map(item =>{\n                        if(item.id === id) data = item\n                    })\n                    return <CourseWorkDetail data={data}/>\n                }\n                if(this.props.page!.indexOf('request') + 1){\n                    const id = Number(this.props.page!.substr(8))\n                    let data : IRequestsData = {}\n                    requestsData.map(item =>{\n                        if(item.id === id) data = item\n                    })\n                    return <RequestDetail data={data} role={this.props.role}/>\n                }\n\n                if(this.props.page!.indexOf('free') + 1){\n                    const id = Number(this.props.page!.substr(5))\n                    let data : IFreeData = {}\n                    freeWorks.map(item =>{\n                        if(item.id === id) data = item\n                    })\n                    return <FreeWorkDetail data={data}/>\n                }\n\n                if(this.props.page!.indexOf('requireCritic') + 1){\n                    const id = Number(this.props.page!.substr(14))\n                    let data : IRequireCriticData= {}\n                    requireData.map(item => {\n                        if(item.id === id) data = item\n                    })\n                    return <RequireCriticDetail data={data}/>\n                }\n\n                if(this.props.page!.indexOf('bidding') + 1){\n                    const id = Number(this.props.page!.substr(8))\n                    let data : IBiddingData = {}\n                    biddingData.map(item => {\n                        if(item.id === id) data = item\n                    })\n                    return <BiddingDetail data={data}/>\n                }\n                break\n            }\n            case 'teacher':{\n                if(this.props.page!.indexOf('st') === 0){\n                    let studentId = Number(this.props.page?.substr(2,(this.props.page.indexOf('request')-3)))\n                    let requestId = Number(this.props.page!.substr(this.props.page!.indexOf('request')+7))\n                return <p>Student: {studentId}, request: {requestId}</p>\n                }\n\n                if(this.props.page!.indexOf('current') + 1){\n                    const id = Number(this.props.page!.substr(8))\n                    let data : ITeacherCurrentWork = {}\n                    teacherCurrentWorks.map(item => {\n                        if(item.id === id) data = item\n                    })\n                    return <TeachersCurrentWork data={data}/>\n                }\n\n                if(this.props.page!.indexOf('free') + 1){\n                    const id = Number(this.props.page!.substr(5))\n                    let validRequests : ITeacherRequest[]\n                    validRequests = [] // eslint-disable-next-line\n                    teacherRequest.map(item =>{\n                        if(item.id === id)\n                            validRequests.push(item)\n                    })\n                    let data : ITeacherFreeWork = {}\n                    teacherFreeWorks.map(item => {\n                        if(item.id === id) data = item\n                    })\n                    return <TeacherFreeWorksDetail \n                                data={data} \n                                requests = {validRequests}\n                                changePage={this.props.changePage}/>\n                }\n                break\n            }\n            default: return null\n        }\n\n    }\n\n    private whichContent(){\n        \n        switch(this.props.role){\n            case 'student':{\n                switch(this.props.page){\n                    case 'Главная': \n                        return <Main\n                                    role={this.props.role} \n                                    handleCritic={this.props.handleCritic} \n                                    isCritic = {this.props.isCritic} \n                                    changePage={this.props.changePage}/>\n\n                    case 'Активные': \n                        return <CourseWork \n                                    data={activeWork[0]} \n                                    changePage={this.props.changePage} \n                                    role={this.props.role}\n                                    type='current'/>\n\n                    case 'Моя курсовая детально': return <MyCourseWorkDetail/>\n\n                    case 'Завершенные': \n                        return <WorksList \n                                    data={completedWorks} \n                                    changePage={this.props.changePage} \n                                    role={this.props.role}\n                                    type='completed'/>\n\n                    case 'Мои заявки': \n                        return <RequestsList \n                                    data={requestsData} \n                                    changePage={this.props.changePage} \n                                    role={this.props.role}/>\n\n                    case 'Свободные курсовые': \n                        return <WorksList \n                                    data={freeWorks} \n                                    changePage={this.props.changePage} \n                                    role={this.props.role}\n                                    type='free'/>\n\n                    case 'Требуют рецензии': \n                        return <RequireCriticList\n                                    data={requireData} \n                                    changePage={this.props.changePage}/>\n\n                    default:\n                        return this.whichComponent()\n                }\n            }\n            case 'teacher':{\n                switch(this.props.page){\n                    case 'Главная': \n                        return <Main\n                                    role={this.props.role} \n                                    handleCritic={this.props.handleCritic} \n                                    isCritic = {this.props.isCritic} \n                                    changePage={this.props.changePage}/>\n\n                    case 'Занятые': \n                        return <WorksList \n                                    data={teacherCurrentWorks} \n                                    changePage={this.props.changePage}\n                                    role={this.props.role}\n                                    type='current'\n                                    />\n                                                    \n                    case 'Свободные': \n                        return <WorksList\n                                    data={teacherFreeWorks}\n                                    changePage={this.props.changePage}\n                                    role={this.props.role}\n                                    type='free'/>\n\n                    case 'Заявки': \n                        return <RequestsList\n                                    data = {teacherRequest}\n                                    changePage = {this.props.changePage}\n                                    role={this.props.role}/>\n                    default:\n                        return this.whichComponent()\n                }\n            }\n        }\n    }\n\n    private renderContent(){\n        return(\n            <div className='content'>\n                {this.needContentBar()? <ContentBar changePage={this.props.changePage} page={this.props.page} role={this.props.role}/> : null}\n                {this.whichContent()}\n            </div>\n        )\n    }\n \n    render(){\n        return this.renderContent();\n    }\n}\n\nexport default Content"]},"metadata":{},"sourceType":"module"}