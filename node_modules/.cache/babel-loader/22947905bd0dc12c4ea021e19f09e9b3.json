{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar EPS = 0.00001;\nvar DimensionFunctions = {\n  shift: function shift(value, _shift) {\n    if (typeof value !== 'string' || !value || !_shift) {\n      return value;\n    }\n\n    var unitSymbolsArray = value.match(/[a-z]|%/g) || [];\n    var unit = unitSymbolsArray.join('');\n    var floatNumber = parseFloat(value) + parseFloat(_shift);\n    var intNumber = parseInt(\"\" + floatNumber, 10);\n    var result = floatNumber % intNumber < EPS ? intNumber : Math.round(floatNumber * 10000) / 10000;\n    return \"\" + result + (unit || 'px');\n  }\n};\nexports[\"default\"] = DimensionFunctions;","map":{"version":3,"sources":["/home/aleksandr/hwproj.courseworks.front/node_modules/@skbkontur/react-ui/lib/styles/DimensionFunctions.js"],"names":["Object","defineProperty","exports","value","EPS","DimensionFunctions","shift","_shift","unitSymbolsArray","match","unit","join","floatNumber","parseFloat","intNumber","parseInt","result","Math","round"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA,IAAIC,GAAG,GAAG,OAAV;AACA,IAAIC,kBAAkB,GAAG;AACvBC,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeH,KAAf,EAAsBI,MAAtB,EAA8B;AACnC,QAAI,OAAOJ,KAAP,KAAiB,QAAjB,IAA6B,CAACA,KAA9B,IAAuC,CAACI,MAA5C,EAAoD;AAClD,aAAOJ,KAAP;AACD;;AACD,QAAIK,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAY,UAAZ,KAA2B,EAAlD;AACA,QAAIC,IAAI,GAAGF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,CAAX;AACA,QAAIC,WAAW,GAAGC,UAAU,CAACV,KAAD,CAAV,GAAoBU,UAAU,CAACN,MAAD,CAAhD;AACA,QAAIO,SAAS,GAAGC,QAAQ,CAAC,KAAKH,WAAN,EAAmB,EAAnB,CAAxB;AACA,QAAII,MAAM,GAAGJ,WAAW,GAAGE,SAAd,GAA0BV,GAA1B,GAAgCU,SAAhC,GAA4CG,IAAI,CAACC,KAAL,CAAWN,WAAW,GAAG,KAAzB,IAAkC,KAA3F;AACA,WAAO,KAAKI,MAAL,IAAeN,IAAI,IAAI,IAAvB,CAAP;AACD;AAXsB,CAAzB;AAaAR,OAAO,CAAC,SAAD,CAAP,GAAqBG,kBAArB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EPS = 0.00001;\nvar DimensionFunctions = {\n  shift: function shift(value, _shift) {\n    if (typeof value !== 'string' || !value || !_shift) {\n      return value;\n    }\n    var unitSymbolsArray = value.match(/[a-z]|%/g) || [];\n    var unit = unitSymbolsArray.join('');\n    var floatNumber = parseFloat(value) + parseFloat(_shift);\n    var intNumber = parseInt(\"\" + floatNumber, 10);\n    var result = floatNumber % intNumber < EPS ? intNumber : Math.round(floatNumber * 10000) / 10000;\n    return \"\" + result + (unit || 'px');\n  } };\n\nexports[\"default\"] = DimensionFunctions;"]},"metadata":{},"sourceType":"script"}