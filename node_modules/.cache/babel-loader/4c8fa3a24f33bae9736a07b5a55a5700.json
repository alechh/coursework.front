{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar InternalDateGetter_1 = tslib_1.__importDefault(require(\"./InternalDateGetter\"));\n\nvar types_1 = require(\"./types\");\n\nvar InternalDateValidator =\n/** @class */\nfunction () {\n  function InternalDateValidator() {}\n\n  InternalDateValidator.checkForNull = function (_a, type) {\n    var year = _a.year,\n        month = _a.month,\n        date = _a.date;\n\n    if (type !== undefined) {\n      if (type === types_1.InternalDateComponentType.Year) {\n        return year !== null;\n      } else if (type === types_1.InternalDateComponentType.Month) {\n        return month !== null;\n      } else if (type === types_1.InternalDateComponentType.All) {\n        return year !== null && month !== null && date !== null;\n      }\n\n      return date !== null;\n    }\n\n    return !(year === null || month === null || date === null);\n  };\n\n  InternalDateValidator.checkLimits = function (_a, type) {\n    var year = _a.year,\n        month = _a.month,\n        date = _a.date;\n\n    if (type !== undefined) {\n      var value = type === types_1.InternalDateComponentType.Year ? year : type === types_1.InternalDateComponentType.Month ? month : date;\n      return value >= InternalDateGetter_1[\"default\"].getDefaultMin(type) && value <= InternalDateGetter_1[\"default\"].getDefaultMax(type);\n    }\n\n    return year >= InternalDateGetter_1[\"default\"].getDefaultMin(types_1.InternalDateComponentType.Year) && year <= InternalDateGetter_1[\"default\"].getDefaultMax(types_1.InternalDateComponentType.Year) && month >= InternalDateGetter_1[\"default\"].getDefaultMin(types_1.InternalDateComponentType.Month) && month <= InternalDateGetter_1[\"default\"].getDefaultMax(types_1.InternalDateComponentType.Month) && date >= InternalDateGetter_1[\"default\"].getDefaultMin(types_1.InternalDateComponentType.Date) && date <= InternalDateGetter_1[\"default\"].getDefaultMax(types_1.InternalDateComponentType.Date);\n  };\n\n  InternalDateValidator.compareWithNativeDate = function (_a) {\n    var year = _a.year,\n        month = _a.month,\n        date = _a.date;\n    var nativeDate = new Date(Date.UTC(year, month - 1, date));\n    return nativeDate.getUTCFullYear() === year && nativeDate.getUTCMonth() + 1 === month && nativeDate.getUTCDate() === date;\n  };\n\n  InternalDateValidator.checkRangeFully = function (date, startDate, endDate) {\n    if (startDate === null && endDate === null) {\n      return true;\n    }\n\n    startDate = startDate || -Infinity;\n    endDate = endDate || Infinity;\n    return date >= startDate && date <= endDate;\n  };\n\n  InternalDateValidator.checkRangePiecemeal = function (type, _a, startComponents, endComponents) {\n    var year = _a.year,\n        month = _a.month,\n        date = _a.date;\n\n    if (startComponents === null && endComponents === null) {\n      return true;\n    }\n\n    var _b = startComponents || {},\n        _c = _b.year,\n        startYear = _c === void 0 ? -Infinity : _c,\n        _d = _b.month,\n        startMonth = _d === void 0 ? -Infinity : _d,\n        _e = _b.date,\n        startDate = _e === void 0 ? -Infinity : _e;\n\n    var _f = endComponents || {},\n        _g = _f.year,\n        endYear = _g === void 0 ? Infinity : _g,\n        _h = _f.month,\n        endMonth = _h === void 0 ? Infinity : _h,\n        _j = _f.date,\n        endDate = _j === void 0 ? Infinity : _j;\n\n    if (type === types_1.InternalDateComponentType.Year) {\n      return !(year < startYear || year > endYear);\n    } else if (type === types_1.InternalDateComponentType.Month) {\n      return !(year === startYear && month < startMonth || year === endYear && month > endMonth);\n    } else if (type === types_1.InternalDateComponentType.Date) {\n      return !(year === startYear && month === startMonth && date < startDate || year === endYear && month === endMonth && date > endDate);\n    }\n\n    return true;\n  };\n\n  InternalDateValidator.testParseToNumber = function (value) {\n    return value !== null && (typeof value === 'number' || !Number.isNaN(parseInt(value, 10)));\n  };\n\n  return InternalDateValidator;\n}();\n\nexports[\"default\"] = InternalDateValidator;","map":{"version":3,"sources":["/home/aleksandr/coursework.front/node_modules/@skbkontur/react-ui/lib/date/InternalDateValidator.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","InternalDateGetter_1","__importDefault","types_1","InternalDateValidator","checkForNull","_a","type","year","month","date","undefined","InternalDateComponentType","Year","Month","All","checkLimits","getDefaultMin","getDefaultMax","Date","compareWithNativeDate","nativeDate","UTC","getUTCFullYear","getUTCMonth","getUTCDate","checkRangeFully","startDate","endDate","Infinity","checkRangePiecemeal","startComponents","endComponents","_b","_c","startYear","_d","startMonth","_e","_f","_g","endYear","_h","endMonth","_j","testParseToNumber","Number","isNaN","parseInt"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar InternalDateGetter_1 = tslib_1.__importDefault(require(\"./InternalDateGetter\"));\nvar types_1 = require(\"./types\");\nvar InternalDateValidator = /** @class */function () {\n  function InternalDateValidator() {\n  }\n  InternalDateValidator.checkForNull = function (_a, type) {\n    var year = _a.year,month = _a.month,date = _a.date;\n    if (type !== undefined) {\n      if (type === types_1.InternalDateComponentType.Year) {\n        return year !== null;\n      } else\n      if (type === types_1.InternalDateComponentType.Month) {\n        return month !== null;\n      } else\n      if (type === types_1.InternalDateComponentType.All) {\n        return year !== null && month !== null && date !== null;\n      }\n      return date !== null;\n    }\n    return !(year === null || month === null || date === null);\n  };\n  InternalDateValidator.checkLimits = function (_a, type) {\n    var year = _a.year,month = _a.month,date = _a.date;\n    if (type !== undefined) {\n      var value = type === types_1.InternalDateComponentType.Year ? year : type === types_1.InternalDateComponentType.Month ? month : date;\n      return value >= InternalDateGetter_1[\"default\"].getDefaultMin(type) && value <= InternalDateGetter_1[\"default\"].getDefaultMax(type);\n    }\n    return year >= InternalDateGetter_1[\"default\"].getDefaultMin(types_1.InternalDateComponentType.Year) &&\n    year <= InternalDateGetter_1[\"default\"].getDefaultMax(types_1.InternalDateComponentType.Year) &&\n    month >= InternalDateGetter_1[\"default\"].getDefaultMin(types_1.InternalDateComponentType.Month) &&\n    month <= InternalDateGetter_1[\"default\"].getDefaultMax(types_1.InternalDateComponentType.Month) &&\n    date >= InternalDateGetter_1[\"default\"].getDefaultMin(types_1.InternalDateComponentType.Date) &&\n    date <= InternalDateGetter_1[\"default\"].getDefaultMax(types_1.InternalDateComponentType.Date);\n  };\n  InternalDateValidator.compareWithNativeDate = function (_a) {\n    var year = _a.year,month = _a.month,date = _a.date;\n    var nativeDate = new Date(Date.UTC(year, month - 1, date));\n    return nativeDate.getUTCFullYear() === year && nativeDate.getUTCMonth() + 1 === month && nativeDate.getUTCDate() === date;\n  };\n  InternalDateValidator.checkRangeFully = function (date, startDate, endDate) {\n    if (startDate === null && endDate === null) {\n      return true;\n    }\n    startDate = startDate || -Infinity;\n    endDate = endDate || Infinity;\n    return date >= startDate && date <= endDate;\n  };\n  InternalDateValidator.checkRangePiecemeal = function (type, _a, startComponents, endComponents) {\n    var year = _a.year,month = _a.month,date = _a.date;\n    if (startComponents === null && endComponents === null) {\n      return true;\n    }\n    var _b = startComponents || {},_c = _b.year,startYear = _c === void 0 ? -Infinity : _c,_d = _b.month,startMonth = _d === void 0 ? -Infinity : _d,_e = _b.date,startDate = _e === void 0 ? -Infinity : _e;\n    var _f = endComponents || {},_g = _f.year,endYear = _g === void 0 ? Infinity : _g,_h = _f.month,endMonth = _h === void 0 ? Infinity : _h,_j = _f.date,endDate = _j === void 0 ? Infinity : _j;\n    if (type === types_1.InternalDateComponentType.Year) {\n      return !(year < startYear || year > endYear);\n    } else\n    if (type === types_1.InternalDateComponentType.Month) {\n      return !(year === startYear && month < startMonth || year === endYear && month > endMonth);\n    } else\n    if (type === types_1.InternalDateComponentType.Date) {\n      return !(year === startYear && month === startMonth && date < startDate ||\n      year === endYear && month === endMonth && date > endDate);\n    }\n    return true;\n  };\n  InternalDateValidator.testParseToNumber = function (value) {\n    return value !== null && (typeof value === 'number' || !Number.isNaN(parseInt(value, 10)));\n  };\n  return InternalDateValidator;\n}();\nexports[\"default\"] = InternalDateValidator;"]},"metadata":{},"sourceType":"script"}