{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sasha\\\\Documents\\\\coursework.front\\\\src\\\\Components\\\\Auth\\\\Register.tsx\";\nimport * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Gapped from '@skbkontur/react-ui/Gapped';\nexport default class Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async () => {\n      const {\n        email,\n        password\n      } = this.state.registerData; //this.props.auth()\n    };\n\n    this.state = {\n      registerData: {\n        name: \"\",\n        surname: \"\",\n        email: \"\",\n        password: \"\",\n        passwordConfirm: \"\"\n      },\n      logged: false\n    };\n  }\n\n  render() {\n    const {\n      registerData,\n      logged\n    } = this.state;\n\n    if (logged) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 20\n        }\n      }, \"logged in\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      label: \"\\u0418\\u043C\\u044F\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      name: registerData.name,\n      onChange: e => this.setState({\n        registerData: { ...this.state.registerData,\n          name: e.target.value\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      label: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      name: registerData.surname,\n      onChange: e => this.setState({\n        registerData: { ...this.state.registerData,\n          surname: e.target.value\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      type: \"email\",\n      label: \"Email\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      name: registerData.email,\n      onChange: e => this.setState({\n        registerData: { ...this.state.registerData,\n          email: e.target.value\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Gapped, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      type: \"password\",\n      label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      value: registerData.password,\n      onChange: e => this.setState({\n        registerData: { ...this.state.registerData,\n          password: e.target.value\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      type: \"password\",\n      label: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      value: registerData.passwordConfirm,\n      onChange: e => this.setState({\n        registerData: { ...this.state.registerData,\n          passwordConfirm: e.target.value\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Sasha/Documents/coursework.front/src/Components/Auth/Register.tsx"],"names":["React","TextField","Button","Typography","Gapped","Register","Component","constructor","props","handleSubmit","email","password","state","registerData","name","surname","passwordConfirm","logged","render","e","setState","target","value"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Gapped from '@skbkontur/react-ui/Gapped'\r\n\r\ninterface RegisterViewModel{\r\n    name : string,\r\n    surname : string,\r\n    email : string,\r\n    password : string,\r\n    passwordConfirm : string\r\n}\r\n\r\ninterface IUser{\r\n    firstName?: string,\r\n    lastName?: string,\r\n    isCritic?: boolean,\r\n    role?: string,\r\n    userId?: number\r\n}\r\n\r\ninterface IRegisterState {\r\n    registerData: RegisterViewModel;\r\n    logged: boolean;\r\n}\r\n\r\ninterface Props{\r\n    auth(user : IUser, token : string) : void\r\n}\r\n\r\nexport default class Register extends React.Component<Props, IRegisterState> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            registerData: {\r\n                name: \"\",\r\n                surname: \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n                passwordConfirm: \"\",\r\n            },\r\n            logged:false\r\n        };\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        const {registerData, logged} = this.state;\r\n\r\n        if (logged) {\r\n            return <p>logged in</p>\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Typography variant=\"h6\" gutterBottom>Регистрация</Typography>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField\r\n                        required\r\n                        label=\"Имя\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        name={registerData.name}\r\n                        onChange={e => this.setState({ registerData: {...this.state.registerData, name: e.target.value}})}\r\n                    />\r\n                    <br />\r\n                    <TextField\r\n                        required\r\n                        label=\"Фамилия\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        name={registerData.surname}\r\n                        onChange={e => this.setState({ registerData: {...this.state.registerData, surname: e.target.value}})}\r\n                    />\r\n                    <br />\r\n                    <TextField\r\n                        required\r\n                        type=\"email\"\r\n                        label=\"Email\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        name={registerData.email}\r\n                        onChange={e => this.setState({ registerData: {...this.state.registerData, email: e.target.value}})}\r\n                    />\r\n                    <br />\r\n                    <Gapped><TextField\r\n                        required\r\n                        type=\"password\"\r\n                        label=\"Пароль\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        value={registerData.password}\r\n                        onChange={e => this.setState({ registerData: {...this.state.registerData, password: e.target.value}})}\r\n                    />\r\n                    {/* <br /> */}\r\n                    <TextField\r\n                        required\r\n                        type=\"password\"\r\n                        label=\"Подтвердите пароль\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        value={registerData.passwordConfirm}\r\n                        onChange={e => this.setState({ registerData: {...this.state.registerData, passwordConfirm: e.target.value}})}\r\n                    /></Gapped>\r\n                    <br />\r\n                    <Button size=\"small\" variant=\"contained\" color=\"primary\" type=\"submit\">Зарегистрироваться</Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private handleSubmit = async () => {\r\n        const {email, password} = this.state.registerData;\r\n\r\n        \r\n        //this.props.auth()\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}