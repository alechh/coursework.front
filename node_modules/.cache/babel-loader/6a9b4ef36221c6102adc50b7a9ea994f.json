{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = tslib_1.__importStar(require(\"react\"));\n\nvar PropTypes = tslib_1.__importStar(require(\"prop-types\"));\n\nvar LayoutEvents_1 = tslib_1.__importDefault(require(\"../../lib/LayoutEvents\")); // Note SpinnerType нужен для генерации правильного .d.ts файла\n// @ts-ignore — Свойство \"SpinnerType\" объявлено, но его значение не было прочитано\n\n\nvar Spinner_1 = tslib_1.__importDefault(require(\"../Spinner\"));\n\nvar Loader_module_less_1 = tslib_1.__importDefault(require(\"./Loader.module.css\"));\n\nvar Emotion_1 = require(\"../../lib/theming/Emotion\");\n\nvar Loader_styles_1 = tslib_1.__importDefault(require(\"./Loader.styles\"));\n\nvar ThemeConsumer_1 = require(\"../ThemeConsumer\");\n\nvar ZIndex_1 = tslib_1.__importDefault(require(\"../ZIndex\"));\n/**\r\n                                                               * DRAFT - лоадер-контейнер\r\n                                                               */\n\n\nvar Loader =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Loader, _super);\n\n  function Loader(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.wrapperRef = function (element) {\n      _this.containerNode = element;\n    };\n\n    _this.checkSpinnerPosition = function () {\n      if (!_this.containerNode) {\n        return;\n      }\n\n      var _a = _this.containerNode.getBoundingClientRect(),\n          containerTop = _a.top,\n          containerRight = _a.right,\n          containerBottom = _a.bottom,\n          containerLeft = _a.left,\n          containerHeight = _a.height,\n          containerWidth = _a.width;\n\n      var windowHeight = window.innerHeight;\n      var windowWidth = window.innerWidth; // Если контейнер не больше высоты и не шире окна,\n      // то просто выравниваем по центру\n\n      if (windowHeight >= containerHeight && windowWidth >= containerWidth) {\n        _this.setState({\n          isStickySpinner: false,\n          spinnerStyle: {}\n        });\n\n        return;\n      }\n\n      var spinnerStyle = {\n        top: 30,\n        right: 0,\n        bottom: 30,\n        left: 0\n      }; // ПО ВЕРТИКАЛИ\n      // Если верхний край контейнера ниже верхнего края окна,\n      // то сдвигаем и лоадер\n\n      if (containerTop > 0) {\n        spinnerStyle.top = containerTop + 30;\n      } // Если нижний край контейнера выше нижнего края окна,\n      // то сдвигаем и лоадер\n\n\n      if (containerBottom < windowHeight) {\n        spinnerStyle.bottom = Math.abs(windowHeight - containerBottom) + 30;\n      } // Если знаем высоту спиннера и нижний край контейнера поднимается\n      // выше отступа на высоту спиннера, то убираем верхнюю позицию лоадера\n\n\n      if (_this.spinnerHeight && spinnerStyle.bottom >= windowHeight - _this.spinnerHeight) {\n        delete spinnerStyle.top;\n      } // ПО ГОРИЗОНТАЛИ\n      // Если левый край контейнера правее левого края окна,\n      // то сдвигаем и лоадер\n\n\n      if (containerLeft > 0) {\n        spinnerStyle.left = containerLeft;\n      } // Если правый край контейнера левее правого края окна,\n      // то сдвигаем и лоадер\n\n\n      if (containerRight < windowWidth) {\n        spinnerStyle.right = windowWidth - containerRight;\n      }\n\n      _this.setState({\n        isStickySpinner: true,\n        spinnerStyle: spinnerStyle\n      });\n    };\n\n    _this.containerNode = null;\n    _this.spinnerNode = null;\n    _this.state = {\n      isStickySpinner: false\n    };\n    return _this;\n  }\n\n  Loader.prototype.componentDidMount = function () {\n    if (this.spinnerNode) {\n      this.spinnerHeight = this.spinnerNode.children[0].getBoundingClientRect().height;\n    }\n\n    this.checkSpinnerPosition();\n    this.layoutEvents = LayoutEvents_1[\"default\"].addListener(this.checkSpinnerPosition);\n  };\n\n  Loader.prototype.componentWillUnmount = function () {\n    if (this.layoutEvents) {\n      this.layoutEvents.remove();\n    }\n  };\n\n  Loader.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(ThemeConsumer_1.ThemeConsumer, null, function (theme) {\n      _this.theme = theme;\n      return _this.renderMain();\n    });\n  };\n\n  Loader.prototype.renderMain = function () {\n    var _a;\n\n    var _b = this.props,\n        active = _b.active,\n        type = _b.type,\n        caption = _b.caption,\n        className = _b.className;\n    return React.createElement(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      className: Emotion_1.cx(Loader_module_less_1[\"default\"].loader, className)\n    }, React.createElement(ZIndex_1[\"default\"], {\n      priority: 'Loader',\n      applyZIndex: this.props.active,\n      coverChildren: this.props.active,\n      style: {\n        height: '100%'\n      }\n    }, this.props.children), active && React.createElement(ZIndex_1[\"default\"], {\n      wrapperRef: this.wrapperRef,\n      priority: 'Loader',\n      className: Emotion_1.cx((_a = {}, _a[Loader_module_less_1[\"default\"].active] = active, _a[Loader_styles_1[\"default\"].active(this.theme)] = active, _a))\n    }, this.renderSpinner(type, caption)));\n  };\n\n  Loader.prototype.renderSpinner = function (type, caption) {\n    var _this = this;\n\n    return React.createElement(\"span\", {\n      className: this.state.isStickySpinner ? Loader_module_less_1[\"default\"].spinnerContainerSticky : Loader_module_less_1[\"default\"].spinnerContainerCenter,\n      style: this.state.spinnerStyle,\n      ref: function ref(element) {\n        _this.spinnerNode = element;\n      }\n    }, React.createElement(Spinner_1[\"default\"], {\n      type: type,\n      caption: caption\n    }));\n  };\n\n  Loader.__KONTUR_REACT_UI__ = 'Loader';\n  Loader.defaultProps = {\n    type: Spinner_1[\"default\"].Types.normal,\n    active: false\n  };\n  Loader.propTypes = {\n    /**\r\n                        * показываем лоадер или нет\r\n                        */\n    active: PropTypes.bool,\n\n    /**\r\n                             * Текст рядом с лоадером.\r\n                             *\r\n                             * \"Загрузка\" - значение по-умолчанию\r\n                             */\n    caption: Spinner_1[\"default\"].propTypes.caption,\n\n    /**\r\n                                                      * Класс для обертки\r\n                                                      */\n    className: PropTypes.string,\n\n    /**\r\n                                  * Тип спиннера: mini, normal, big\r\n                                  *\r\n                                  * Значение по-умолчанию - normal\r\n                                  *\r\n                                  * Spinner.types - все доступные типы\r\n                                  */\n    type: PropTypes.oneOf(Object.keys(Spinner_1[\"default\"].Types))\n  };\n  return Loader;\n}(React.Component);\n\nexports[\"default\"] = Loader;","map":{"version":3,"sources":["/home/aleksandr/Documents/HwProj-2.0.1/hwproj.courseworks.front/node_modules/@skbkontur/react-ui/components/Loader/Loader.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","React","__importStar","PropTypes","LayoutEvents_1","__importDefault","Spinner_1","Loader_module_less_1","Emotion_1","Loader_styles_1","ThemeConsumer_1","ZIndex_1","Loader","_super","__extends","props","_this","call","wrapperRef","element","containerNode","checkSpinnerPosition","_a","getBoundingClientRect","containerTop","top","containerRight","right","containerBottom","bottom","containerLeft","left","containerHeight","height","containerWidth","width","windowHeight","window","innerHeight","windowWidth","innerWidth","setState","isStickySpinner","spinnerStyle","Math","abs","spinnerHeight","spinnerNode","state","prototype","componentDidMount","children","layoutEvents","addListener","componentWillUnmount","remove","render","createElement","ThemeConsumer","theme","renderMain","_b","active","type","caption","className","style","position","cx","loader","priority","applyZIndex","coverChildren","renderSpinner","spinnerContainerSticky","spinnerContainerCenter","ref","__KONTUR_REACT_UI__","defaultProps","Types","normal","propTypes","bool","string","oneOf","keys","Component"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar React = tslib_1.__importStar(require(\"react\"));\nvar PropTypes = tslib_1.__importStar(require(\"prop-types\"));\nvar LayoutEvents_1 = tslib_1.__importDefault(require(\"../../lib/LayoutEvents\"));\n// Note SpinnerType нужен для генерации правильного .d.ts файла\n// @ts-ignore — Свойство \"SpinnerType\" объявлено, но его значение не было прочитано\nvar Spinner_1 = tslib_1.__importDefault(require(\"../Spinner\"));\nvar Loader_module_less_1 = tslib_1.__importDefault(require(\"./Loader.module.css\"));\nvar Emotion_1 = require(\"../../lib/theming/Emotion\");\nvar Loader_styles_1 = tslib_1.__importDefault(require(\"./Loader.styles\"));\nvar ThemeConsumer_1 = require(\"../ThemeConsumer\");\nvar ZIndex_1 = tslib_1.__importDefault(require(\"../ZIndex\"));\n/**\r\n                                                               * DRAFT - лоадер-контейнер\r\n                                                               */\nvar Loader = /** @class */function (_super) {\n  tslib_1.__extends(Loader, _super);\n  function Loader(props) {\n    var _this = _super.call(this, props) || this;\n    _this.wrapperRef = function (element) {\n      _this.containerNode = element;\n    };\n    _this.checkSpinnerPosition = function () {\n      if (!_this.containerNode) {\n        return;\n      }\n      var _a = _this.containerNode.getBoundingClientRect(),containerTop = _a.top,containerRight = _a.right,containerBottom = _a.bottom,containerLeft = _a.left,containerHeight = _a.height,containerWidth = _a.width;\n      var windowHeight = window.innerHeight;\n      var windowWidth = window.innerWidth;\n      // Если контейнер не больше высоты и не шире окна,\n      // то просто выравниваем по центру\n      if (windowHeight >= containerHeight && windowWidth >= containerWidth) {\n        _this.setState({\n          isStickySpinner: false,\n          spinnerStyle: {} });\n\n        return;\n      }\n      var spinnerStyle = {\n        top: 30,\n        right: 0,\n        bottom: 30,\n        left: 0 };\n\n      // ПО ВЕРТИКАЛИ\n      // Если верхний край контейнера ниже верхнего края окна,\n      // то сдвигаем и лоадер\n      if (containerTop > 0) {\n        spinnerStyle.top = containerTop + 30;\n      }\n      // Если нижний край контейнера выше нижнего края окна,\n      // то сдвигаем и лоадер\n      if (containerBottom < windowHeight) {\n        spinnerStyle.bottom = Math.abs(windowHeight - containerBottom) + 30;\n      }\n      // Если знаем высоту спиннера и нижний край контейнера поднимается\n      // выше отступа на высоту спиннера, то убираем верхнюю позицию лоадера\n      if (_this.spinnerHeight && spinnerStyle.bottom >= windowHeight - _this.spinnerHeight) {\n        delete spinnerStyle.top;\n      }\n      // ПО ГОРИЗОНТАЛИ\n      // Если левый край контейнера правее левого края окна,\n      // то сдвигаем и лоадер\n      if (containerLeft > 0) {\n        spinnerStyle.left = containerLeft;\n      }\n      // Если правый край контейнера левее правого края окна,\n      // то сдвигаем и лоадер\n      if (containerRight < windowWidth) {\n        spinnerStyle.right = windowWidth - containerRight;\n      }\n      _this.setState({\n        isStickySpinner: true,\n        spinnerStyle: spinnerStyle });\n\n    };\n    _this.containerNode = null;\n    _this.spinnerNode = null;\n    _this.state = {\n      isStickySpinner: false };\n\n    return _this;\n  }\n  Loader.prototype.componentDidMount = function () {\n    if (this.spinnerNode) {\n      this.spinnerHeight = this.spinnerNode.children[0].getBoundingClientRect().height;\n    }\n    this.checkSpinnerPosition();\n    this.layoutEvents = LayoutEvents_1[\"default\"].addListener(this.checkSpinnerPosition);\n  };\n  Loader.prototype.componentWillUnmount = function () {\n    if (this.layoutEvents) {\n      this.layoutEvents.remove();\n    }\n  };\n  Loader.prototype.render = function () {\n    var _this = this;\n    return React.createElement(ThemeConsumer_1.ThemeConsumer, null, function (theme) {\n      _this.theme = theme;\n      return _this.renderMain();\n    });\n  };\n  Loader.prototype.renderMain = function () {\n    var _a;\n    var _b = this.props,active = _b.active,type = _b.type,caption = _b.caption,className = _b.className;\n    return React.createElement(\"div\", { style: { position: 'relative' }, className: Emotion_1.cx(Loader_module_less_1[\"default\"].loader, className) },\n    React.createElement(ZIndex_1[\"default\"], { priority: 'Loader', applyZIndex: this.props.active, coverChildren: this.props.active, style: { height: '100%' } }, this.props.children),\n    active && React.createElement(ZIndex_1[\"default\"], { wrapperRef: this.wrapperRef, priority: 'Loader', className: Emotion_1.cx((_a = {},\n      _a[Loader_module_less_1[\"default\"].active] = active,\n      _a[Loader_styles_1[\"default\"].active(this.theme)] = active,\n      _a)) }, this.renderSpinner(type, caption)));\n  };\n  Loader.prototype.renderSpinner = function (type, caption) {\n    var _this = this;\n    return React.createElement(\"span\", { className: this.state.isStickySpinner ? Loader_module_less_1[\"default\"].spinnerContainerSticky : Loader_module_less_1[\"default\"].spinnerContainerCenter, style: this.state.spinnerStyle, ref: function ref(element) {\n        _this.spinnerNode = element;\n      } },\n    React.createElement(Spinner_1[\"default\"], { type: type, caption: caption }));\n  };\n  Loader.__KONTUR_REACT_UI__ = 'Loader';\n  Loader.defaultProps = {\n    type: Spinner_1[\"default\"].Types.normal,\n    active: false };\n\n  Loader.propTypes = {\n    /**\r\n                        * показываем лоадер или нет\r\n                        */\n    active: PropTypes.bool,\n    /**\r\n                             * Текст рядом с лоадером.\r\n                             *\r\n                             * \"Загрузка\" - значение по-умолчанию\r\n                             */\n    caption: Spinner_1[\"default\"].propTypes.caption,\n    /**\r\n                                                      * Класс для обертки\r\n                                                      */\n    className: PropTypes.string,\n    /**\r\n                                  * Тип спиннера: mini, normal, big\r\n                                  *\r\n                                  * Значение по-умолчанию - normal\r\n                                  *\r\n                                  * Spinner.types - все доступные типы\r\n                                  */\n    type: PropTypes.oneOf(Object.keys(Spinner_1[\"default\"].Types)) };\n\n  return Loader;\n}(React.Component);\nexports[\"default\"] = Loader;"]},"metadata":{},"sourceType":"script"}