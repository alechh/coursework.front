{"ast":null,"code":"var _jsxFileName = \"/home/aleksandr/coursework.front/src/Components/MainWindow/MainWindowComponents/Content/WorksList/WorksList.tsx\";\nimport React, { Component } from 'react';\nimport CourseWork from '../CourseWork/CourseWork';\nimport Typography from '@material-ui/core/Typography';\nimport Spinner from '@skbkontur/react-ui/Spinner';\nimport Center from '@skbkontur/react-ui/Center';\nimport './WorksList.css'; //student\n\nclass WorksList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidUpdate = prevProps => {\n      if (this.props.type !== prevProps.type) {\n        this.setState({\n          data: [{}]\n        });\n        this.componentDidMount();\n      }\n\n      if (this.props.curatorSelect !== prevProps.curatorSelect) this.whichData();\n    };\n\n    this.whichData = () => {\n      switch (this.props.role) {\n        case 'student':\n          {\n            switch (this.props.type) {\n              case 'completed':\n                {\n                  const axios = require('axios').default;\n\n                  axios.get('../api/course_works/my/completed', this.props.token).then(response => {\n                    this.setState({\n                      data: response,\n                      type: 'current'\n                    });\n                  });\n                  break; //----------------------------------------------------------------\n                  //return (this.setState({data : completedWorks, type : 'current'}))\n                  //-----------------------------------------------------------------\n                }\n\n              case 'free':\n                {\n                  const axios = require('axios').default;\n\n                  axios.get('../api/course_works/available').then(response => {\n                    this.setState({\n                      data: response,\n                      type: 'free'\n                    });\n                  });\n                  break; //-------------------------------------------------------\n                  //return (this.setState({data : freeWorks, type : 'free'}))\n                  //-------------------------------------------------------\n                }\n            }\n\n            break;\n          }\n\n        case 'teacher':\n          {\n            switch (this.props.type) {\n              case 'current':\n                {\n                  const axios = require('axios').default;\n\n                  axios.get('../api/course_works/my/active', this.props.token).then(response => {\n                    this.setState({\n                      data: response,\n                      type: 'current'\n                    });\n                  });\n                  break; //----------------------------------------------------------------------\n                  //return (this.setState({data : teacherCurrentWorks, type : 'current'}))\n                  //----------------------------------------------------------------------\n                }\n\n              case 'free':\n                {//--------------------------------\n                  //Свободные курсовые конкретного препода\n                  //--------------------------------\n                  //return (this.setState({data : teacherMyFreeWorks, type : 'free'}))\n                }\n\n              case 'completed':\n                {\n                  const axios = require('axios').default;\n\n                  axios.get('../api/course_works/my/completed', this.props.token).then(response => {\n                    this.setState({\n                      data: response,\n                      type: 'completed'\n                    });\n                  });\n                  break; //--------------------------------------------------------------------------\n                  //return (this.setState({data : teacherCompletedWorks, type : 'completed'}))\n                  //--------------------------------------------------------------------------\n                }\n\n              case 'foreign':\n                {\n                  //--------------------------------\n                  const axios = require('axios').default;\n\n                  axios.get('../api/course_works/available').then(response => {\n                    this.setState({\n                      data: response,\n                      type: 'foreign'\n                    });\n                  });\n                  break; //--------------------------------\n                  //return (this.setState({data : teacherFreeWorks, type : 'foreign'}))\n                }\n            }\n\n            break;\n          }\n\n        case 'curator':\n          {\n            if (this.props.curatorSelect === 'Занятые темы') {\n              //--------------------------------\n              const axios = require('axios').default;\n\n              axios.get('../api/course_works/my/active', this.props.token).then(response => {\n                this.setState({\n                  data: response,\n                  type: 'current'\n                });\n              });\n              break; //--------------------------------\n              //return (this.setState({data : curatorMyCurrentWorks, type : 'current'}))\n            } else if (this.props.curatorSelect === 'Свободные темы') {//--------------------------------\n              //Свободные курсовые конкретного куратора\n              //--------------------------------\n              //return (this.setState({data : curatorMyFreeWorks, type : 'free'}))\n            } else if (this.props.type === 'current') {//--------------------------------\n              //Список всех активных работ\n              //--------------------------------\n              //this.setState({data : curatorCurrentWorks, type : 'current'})\n            }\n          }\n      }\n    };\n\n    this.state = {\n      data: [{}],\n      isLoading: false,\n      type: this.props.type\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    this.whichData();\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  renderCourseWork(work) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"workItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CourseWork, {\n      data: work,\n      changePage: this.props.changePage,\n      role: this.props.role,\n      type: this.props.type,\n      curatorSelect: this.props.curatorSelect === 'Занятые темы' || this.props.curatorSelect === 'Свободные темы' ? this.props.curatorSelect : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  renderList() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.needMarginTop(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, this.state.data.map(work => this.renderCourseWork(work)));\n  }\n\n  renderEmptyList() {\n    if (this.props.role === 'curator') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginTop: '10vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }\n      }, this.props.curatorSelect === 'Занятые темы' ? 'Нет занятых работ' : 'Нет свободных работ'));\n    } else return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: '10vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, \"\\u041D\\u0435\\u0442 \\u043A\\u0443\\u0440\\u0441\\u043E\\u0432\\u044B\\u0445 \\u0440\\u0430\\u0431\\u043E\\u0442\"));\n  }\n\n  isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n  }\n\n  needMarginTop() {\n    return this.props.type === 'foreign' ? 'mt' : '';\n  }\n\n  render() {\n    return !this.state.isLoading ? !this.isEmpty(this.state.data[0]) ? this.renderList() : this.renderEmptyList() : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '60vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Center, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      type: \"big\",\n      caption: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 56\n      }\n    })));\n  }\n\n}\n\nexport default WorksList;","map":{"version":3,"sources":["/home/aleksandr/coursework.front/src/Components/MainWindow/MainWindowComponents/Content/WorksList/WorksList.tsx"],"names":["React","Component","CourseWork","Typography","Spinner","Center","WorksList","constructor","props","componentDidUpdate","prevProps","type","setState","data","componentDidMount","curatorSelect","whichData","role","axios","require","default","get","token","then","response","state","isLoading","renderCourseWork","work","changePage","renderList","needMarginTop","map","renderEmptyList","textAlign","marginTop","isEmpty","obj","Object","keys","length","render","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,OAAO,iBAAP,C,CAEA;;AAgCA,MAAMC,SAAN,SAAwBL,SAAxB,CAA8C;AAC1CM,EAAAA,WAAW,CAACC,KAAD,EAAe;AACtB,UAAMA,KAAN;;AADsB,SAS1BC,kBAT0B,GASJC,SAAD,IAAuB;AACxC,UAAG,KAAKF,KAAL,CAAWG,IAAX,KAAoBD,SAAS,CAACC,IAAjC,EAAsC;AAClC,aAAKC,QAAL,CAAc;AAACC,UAAAA,IAAI,EAAG,CAAC,EAAD;AAAR,SAAd;AACA,aAAKC,iBAAL;AACH;;AACD,UAAG,KAAKN,KAAL,CAAWO,aAAX,KAA6BL,SAAS,CAACK,aAA1C,EACI,KAAKC,SAAL;AACP,KAhByB;;AAAA,SAyBlBA,SAzBkB,GAyBN,MAAM;AACtB,cAAO,KAAKR,KAAL,CAAWS,IAAlB;AACI,aAAK,SAAL;AAAe;AACX,oBAAO,KAAKT,KAAL,CAAWG,IAAlB;AACI,mBAAK,WAAL;AAAiB;AACb,wBAAMO,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AACAF,kBAAAA,KAAK,CAACG,GAAN,CAAU,kCAAV,EAA8C,KAAKb,KAAL,CAAWc,KAAzD,EACCC,IADD,CACOC,QAAD,IAAqB;AACvB,yBAAKZ,QAAL,CAAc;AAACC,sBAAAA,IAAI,EAAEW,QAAP;AAAiBb,sBAAAA,IAAI,EAAE;AAAvB,qBAAd;AACH,mBAHD;AAIA,wBANa,CAQb;AACA;AACA;AACH;;AACD,mBAAK,MAAL;AAAY;AACR,wBAAMO,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AACAF,kBAAAA,KAAK,CAACG,GAAN,CAAU,+BAAV,EACCE,IADD,CACOC,QAAD,IAAqB;AACvB,yBAAKZ,QAAL,CAAc;AAACC,sBAAAA,IAAI,EAAGW,QAAR;AAAkBb,sBAAAA,IAAI,EAAE;AAAxB,qBAAd;AACH,mBAHD;AAIA,wBANQ,CAQR;AACA;AACA;AACH;AAxBL;;AA0BA;AACH;;AACD,aAAK,SAAL;AAAe;AACX,oBAAO,KAAKH,KAAL,CAAWG,IAAlB;AACI,mBAAK,SAAL;AAAe;AACX,wBAAMO,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AACAF,kBAAAA,KAAK,CAACG,GAAN,CAAU,+BAAV,EAA2C,KAAKb,KAAL,CAAWc,KAAtD,EACCC,IADD,CACOC,QAAD,IAAqB;AACvB,yBAAKZ,QAAL,CAAc;AAACC,sBAAAA,IAAI,EAAGW,QAAR;AAAkBb,sBAAAA,IAAI,EAAE;AAAxB,qBAAd;AACH,mBAHD;AAIA,wBANW,CAQX;AACA;AACA;AACH;;AACD,mBAAK,MAAL;AAAY,iBACR;AACA;AACA;AAEA;AACH;;AACD,mBAAK,WAAL;AAAiB;AACb,wBAAMO,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AACAF,kBAAAA,KAAK,CAACG,GAAN,CAAU,kCAAV,EAA8C,KAAKb,KAAL,CAAWc,KAAzD,EACCC,IADD,CACOC,QAAD,IAAqB;AACvB,yBAAKZ,QAAL,CAAc;AAACC,sBAAAA,IAAI,EAAGW,QAAR;AAAkBb,sBAAAA,IAAI,EAAE;AAAxB,qBAAd;AACH,mBAHD;AAIA,wBANa,CAQb;AACA;AACA;AACH;;AACD,mBAAK,SAAL;AAAe;AACX;AACA,wBAAMO,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AACAF,kBAAAA,KAAK,CAACG,GAAN,CAAU,+BAAV,EACCE,IADD,CACOC,QAAD,IAAqB;AACvB,yBAAKZ,QAAL,CAAc;AAACC,sBAAAA,IAAI,EAAGW,QAAR;AAAkBb,sBAAAA,IAAI,EAAE;AAAxB,qBAAd;AACH,mBAHD;AAIA,wBAPW,CAQX;AACA;AACH;AA1CL;;AA4CA;AACH;;AACD,aAAK,SAAL;AAAe;AACX,gBAAG,KAAKH,KAAL,CAAWO,aAAX,KAA6B,cAAhC,EAA+C;AAC3C;AACA,oBAAMG,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AACAF,cAAAA,KAAK,CAACG,GAAN,CAAU,+BAAV,EAA2C,KAAKb,KAAL,CAAWc,KAAtD,EACCC,IADD,CACOC,QAAD,IAAqB;AACvB,qBAAKZ,QAAL,CAAc;AAACC,kBAAAA,IAAI,EAAGW,QAAR;AAAkBb,kBAAAA,IAAI,EAAE;AAAxB,iBAAd;AACH,eAHD;AAIA,oBAP2C,CAQ3C;AACA;AACH,aAVD,MAWK,IAAI,KAAKH,KAAL,CAAWO,aAAX,KAA6B,gBAAjC,EAAkD,CACnD;AACA;AACA;AAEA;AACH,aANI,MAOA,IAAG,KAAKP,KAAL,CAAWG,IAAX,KAAoB,SAAvB,EAAiC,CAClC;AACA;AACA;AAEA;AACH;AACJ;AAvGL;AAyGH,KAnIyB;;AAEtB,SAAKc,KAAL,GAAW;AACPZ,MAAAA,IAAI,EAAG,CAAC,EAAD,CADA;AAEPa,MAAAA,SAAS,EAAG,KAFL;AAGPf,MAAAA,IAAI,EAAG,KAAKH,KAAL,CAAWG;AAHX,KAAX;AAKH;;AAYDG,EAAAA,iBAAiB,GAAE;AACf,SAAKF,QAAL,CAAc;AAACc,MAAAA,SAAS,EAAG;AAAb,KAAd;AACA,SAAKV,SAAL;AACA,SAAKJ,QAAL,CAAc;AAACc,MAAAA,SAAS,EAAG;AAAb,KAAd;AACH;;AA8GOC,EAAAA,gBAAR,CAAyBC,IAAzB,EAAmC;AAC/B,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,IAAI,EAAEA,IADV;AAEI,MAAA,UAAU,EAAE,KAAKpB,KAAL,CAAWqB,UAF3B;AAGI,MAAA,IAAI,EAAE,KAAKrB,KAAL,CAAWS,IAHrB;AAII,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWG,IAJrB;AAKI,MAAA,aAAa,EAAK,KAAKH,KAAL,CAAWO,aAAX,KAA6B,cAA7B,IAA+C,KAAKP,KAAL,CAAWO,aAAX,KAA6B,gBAA7E,GAAgG,KAAKP,KAAL,CAAWO,aAA3G,GAA2H,EALhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAUH;;AAEOe,EAAAA,UAAR,GAAoB;AAChB,wBACI;AAAK,MAAA,SAAS,EAAE,KAAKC,aAAL,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKN,KAAL,CAAWZ,IAAX,CAAgBmB,GAAhB,CAAoBJ,IAAI,IAAI,KAAKD,gBAAL,CAAsBC,IAAtB,CAA5B,CADL,CADJ;AAKH;;AAEOK,EAAAA,eAAR,GAAyB;AACrB,QAAG,KAAKzB,KAAL,CAAWS,IAAX,KAAoB,SAAvB,EAAiC;AAC7B,0BACI;AAAK,QAAA,KAAK,EAAE;AAACiB,UAAAA,SAAS,EAAC,QAAX;AAAqBC,UAAAA,SAAS,EAAE;AAAhC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B,KAAK3B,KAAL,CAAWO,aAAX,KAA6B,cAA7B,GAA6C,mBAA7C,GAAmE,qBAA7F,CADJ,CADJ;AAKH,KAND,MAOA,oBACI;AAAK,MAAA,KAAK,EAAE;AAACmB,QAAAA,SAAS,EAAC,QAAX;AAAqBC,QAAAA,SAAS,EAAE;AAAhC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4GADJ,CADJ;AAKH;;AAEOC,EAAAA,OAAR,CAAgBC,GAAhB,EAA0B;AACtB,WAAOC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,MAAjB,KAA4B,CAAnC;AACH;;AAGOT,EAAAA,aAAR,GAAuB;AACnB,WACI,KAAKvB,KAAL,CAAWG,IAAX,KAAoB,SAApB,GACA,IADA,GACO,EAFX;AAIH;;AAED8B,EAAAA,MAAM,GAAE;AACJ,WACI,CAAC,KAAKhB,KAAL,CAAWC,SAAZ,GACI,CAAC,KAAKU,OAAL,CAAa,KAAKX,KAAL,CAAWZ,IAAX,CAAgB,CAAhB,CAAb,CAAD,GACI,KAAKiB,UAAL,EADJ,GAEE,KAAKG,eAAL,EAHN,gBAII;AAAK,MAAA,KAAK,EAAE;AAACS,QAAAA,MAAM,EAAG;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+B,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAQ,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,KAAd;AAAoB,MAAA,OAAO,EAAC,kDAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR,CAA/B,CALR;AAOH;;AA9LyC;;AAiM9C,eAAepC,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport CourseWork from '../CourseWork/CourseWork'\nimport Typography from '@material-ui/core/Typography'\nimport Spinner from '@skbkontur/react-ui/Spinner'\nimport Center from '@skbkontur/react-ui/Center'\nimport axios from 'axios'\nimport './WorksList.css'\n\n//student\nimport completedWorks from '../../../../../TestData/Student/completedWorksData'\nimport freeWorks from '../../../../../TestData/Student/freeWorksData'\n\n//teacher\nimport teacherCurrentWorks from '../../../../../TestData/Teacher/currentWorks'\nimport teacherMyFreeWorks from '../../../../../TestData/Teacher/myFreeWorks'\nimport teacherCompletedWorks from '../../../../../TestData/Teacher/completedWorks'\nimport teacherFreeWorks from '../../../../../TestData/Teacher/freeWorks'\n\n//curator \nimport curatorCurrentWorks from '../../../../../TestData/Curator/currentWorks'\nimport curatorMyFreeWorks from '../../../../../TestData/Curator/myFreeWorks'\nimport curatorMyCurrentWorks from '../../../../../TestData/Curator/myCurrentWorks'\n\ntype WorkType = 'current' | 'completed' | 'free' | 'request' | 'foreign'\n\ninterface Props{\n    changePage(event : React.MouseEvent<HTMLButtonElement>) : void,\n    role?: string,\n    type?: WorkType,\n    curatorSelect?: string,\n   //userId?: number,\n    token: string\n}\n\ninterface State{\n    data : {}[],\n    isLoading?: boolean,\n    type?: WorkType\n}\n\nclass WorksList extends Component<Props,State>{\n    constructor(props : Props){\n        super(props);\n        this.state={\n            data : [{}],\n            isLoading : false,\n            type : this.props.type\n        }\n    }\n\n    componentDidUpdate = (prevProps : Props) => {\n        if(this.props.type !== prevProps.type){\n            this.setState({data : [{}]})\n            this.componentDidMount()  \n        }\n        if(this.props.curatorSelect !== prevProps.curatorSelect)\n            this.whichData()\n    }\n\n\n    componentDidMount(){\n        this.setState({isLoading : true})\n        this.whichData()\n        this.setState({isLoading : false})\n    }\n    \n    private whichData = () => {\n        switch(this.props.role){\n            case 'student':{\n                switch(this.props.type){\n                    case 'completed':{\n                        const axios = require('axios').default\n                        axios.get('../api/course_works/my/completed', this.props.token)\n                        .then((response : {}[]) => {\n                            this.setState({data: response, type: 'current'})\n                        })\n                        break\n                        \n                        //----------------------------------------------------------------\n                        //return (this.setState({data : completedWorks, type : 'current'}))\n                        //-----------------------------------------------------------------\n                    }\n                    case 'free':{\n                        const axios = require('axios').default\n                        axios.get('../api/course_works/available')\n                        .then((response : {}[]) => {\n                            this.setState({data : response, type: 'free'})\n                        })\n                        break\n\n                        //-------------------------------------------------------\n                        //return (this.setState({data : freeWorks, type : 'free'}))\n                        //-------------------------------------------------------\n                    }\n                }\n                break\n            }\n            case 'teacher':{\n                switch(this.props.type){\n                    case 'current':{\n                        const axios = require('axios').default\n                        axios.get('../api/course_works/my/active', this.props.token)\n                        .then((response : {}[]) => {\n                            this.setState({data : response, type: 'current'})\n                        })\n                        break\n\n                        //----------------------------------------------------------------------\n                        //return (this.setState({data : teacherCurrentWorks, type : 'current'}))\n                        //----------------------------------------------------------------------\n                    }\n                    case 'free':{\n                        //--------------------------------\n                        //Свободные курсовые конкретного препода\n                        //--------------------------------\n\n                        //return (this.setState({data : teacherMyFreeWorks, type : 'free'}))\n                    }\n                    case 'completed':{\n                        const axios = require('axios').default\n                        axios.get('../api/course_works/my/completed', this.props.token)\n                        .then((response : {}[]) => {\n                            this.setState({data : response, type: 'completed'})\n                        })\n                        break\n\n                        //--------------------------------------------------------------------------\n                        //return (this.setState({data : teacherCompletedWorks, type : 'completed'}))\n                        //--------------------------------------------------------------------------\n                    }\n                    case 'foreign':{\n                        //--------------------------------\n                        const axios = require('axios').default\n                        axios.get('../api/course_works/available')\n                        .then((response : {}[]) => {\n                            this.setState({data : response, type: 'foreign'})\n                        })\n                        break\n                        //--------------------------------\n                        //return (this.setState({data : teacherFreeWorks, type : 'foreign'}))\n                    }\n                }\n                break\n            }\n            case 'curator':{\n                if(this.props.curatorSelect === 'Занятые темы'){\n                    //--------------------------------\n                    const axios = require('axios').default\n                    axios.get('../api/course_works/my/active', this.props.token)\n                    .then((response : {}[]) => {\n                        this.setState({data : response, type: 'current'})\n                    })\n                    break\n                    //--------------------------------\n                    //return (this.setState({data : curatorMyCurrentWorks, type : 'current'}))\n                }\n                else if (this.props.curatorSelect === 'Свободные темы'){\n                    //--------------------------------\n                    //Свободные курсовые конкретного куратора\n                    //--------------------------------\n\n                    //return (this.setState({data : curatorMyFreeWorks, type : 'free'}))\n                }\n                else if(this.props.type === 'current'){\n                    //--------------------------------\n                    //Список всех активных работ\n                    //--------------------------------\n\n                    //this.setState({data : curatorCurrentWorks, type : 'current'})\n                }\n            }\n        }\n    }\n    \n    private renderCourseWork(work : {}){\n        return (\n            <div className='workItem'>\n                <CourseWork \n                    data={work} \n                    changePage={this.props.changePage} \n                    role={this.props.role}\n                    type={this.props.type}\n                    curatorSelect = {(this.props.curatorSelect === 'Занятые темы' || this.props.curatorSelect === 'Свободные темы')? this.props.curatorSelect : ''}/>\n            </div>\n        )\n    }\n\n    private renderList(){\n        return(\n            <div className={this.needMarginTop()}>\n                {this.state.data.map(work => this.renderCourseWork(work))}\n            </div>\n        )\n    }\n\n    private renderEmptyList(){\n        if(this.props.role === 'curator'){\n            return(\n                <div style={{textAlign:\"center\", marginTop: '10vh'}}>\n                    <Typography variant='h5'>{this.props.curatorSelect === 'Занятые темы'? 'Нет занятых работ' : 'Нет свободных работ'}</Typography>\n                </div>\n            )\n        }else\n        return(\n            <div style={{textAlign:\"center\", marginTop: '10vh'}}>\n                <Typography variant='h5'>Нет курсовых работ</Typography>\n            </div>\n        )\n    }\n\n    private isEmpty(obj : {}) {\n        return Object.keys(obj).length === 0;\n    }\n\n    \n    private needMarginTop(){\n        return(\n            this.props.type === 'foreign'?\n            'mt' : ''\n        )\n    }\n\n    render(){\n        return (\n            !this.state.isLoading?\n                !this.isEmpty(this.state.data[0])?\n                    this.renderList()\n                : this.renderEmptyList()\n            :   <div style={{height : '60vh'}}><Center><Spinner type='big' caption='Загрузка'/></Center></div>\n        )\n    }\n}\n\nexport default WorksList"]},"metadata":{},"sourceType":"module"}